<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[mike、mikeなるままに…]]></title>
  <link href="http://mike-neck.github.io/atom.xml" rel="self"/>
  <link href="http://mike-neck.github.io/"/>
  <updated>2013-07-07T08:02:03+09:00</updated>
  <id>http://mike-neck.github.io/</id>
  <author>
    <name><![CDATA[mike-neck]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[gradle1.7のリリースノート超意訳]]></title>
    <link href="http://mike-neck.github.io/blog/2013/07/06/gradle1-dot-7-release-notes-translation/"/>
    <updated>2013-07-06T19:23:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/07/06/gradle1-dot-7-release-notes-translation</id>
    <content type="html"><![CDATA[<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRZHRNTkNwZEYtdkE"/></p>

<p>こんにちわ、みけです。</p>

<p>現在、gradle1.7-rc1が利用できます。</p>

<p>リリースノートの超意訳をどうぞ。</p>

<hr />

<h2>Gradle Release Notes</h2>

<h4>Version 1.7-rc-1</h4>

<p>Gradle1.7になるとすごく速くなります。dependency解決とビルドスクリプトのコンパイルの改善をしました。Gradleユーザーみんなこの恩恵に預かれますが、でっかいプロジェクトだと、その効果はもっと顕著になります。パフォーマンスの改善とスケービリティがGradle1.7の主要なテーマになっています。</p>

<p>これらの改善点に加えて、Gradle1.7では面白い機能がついてきます。finalizer taskメカニズムによってタスクの結果がどうであれ、タスクの次に別のタスクを起動させることができるようになります。例えば、アプリケーションサーバーを起動するようなintegrationテスト(の失敗)の後にアプリケーションサーバーを終了させることができるようになります。コピーやアーカイブ生成時にファイルの重複をコントロールする機能が登場します。</p>

<p>Gradle1.7のBuild Setupプラグインの改善によりプロジェクトをテンプレートから生成する機能が利用可能になります。これにより新規プロジェクトの作成が簡単になります。</p>

<p>C++からネイティブバイナリーを作成する機能も進化します。ネイティブバイナリーの生成に関しては結構面倒な領域ですが、今後もGradleのこの分野での進化を期待して下さい。</p>

<p>Gradle1.7ではコア・テベロップチーム以外からのコントリビュートが多いのも特徴です。Gradle1.7に貢献してくださったデベロッパーの皆様に感謝しております。</p>

<h2>Table Of Contents</h2>

<h3>新機能や追加機能</h3>

<h5>より速いGradleビルド</h5>

<p>Gradle1.7でのビルドはより速くなります。</p>

<ul>
<li>dependency解決が速くなります(ほとんどのビルドで改善効果が現れます)</li>
<li>テスト実行が高速化されます(特にログを大量に出力しているようなGradleで顕著です)</li>
<li>ビルドスクリプトのコンパイルが速くなります(Gradle1.6に比べて75%の時間でできるようになります)</li>
<li>並行実行モードが高速になります</li>
</ul>


<h5>Finalizer tasks <small>incubating</small></h5>

<p>Gradle1.7から新しいタスク実行ルールが導入され、タスク終了時に他のタスクを起動することができるようになります。この機能は<a href="https://github.com/erdi">Marcin Erdmann</a>氏によるものです。</p>

<p><a href="http://www.gradle.org/docs/release-candidate/userguide/more_about_tasks.html#N10F84">Finalizer tasks</a>ではタスク終了時にそのタスクの結果にかかわらず別のタスクを起動します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">configure</span><span class="o">([</span><span class="n">integTest1</span><span class="o">,</span> <span class="n">integTest2</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">dependsOn</span> <span class="n">startAppServer</span>
</span><span class='line'>    <span class="n">finalizedBy</span> <span class="n">stopAppServer</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>この例では<code>integTest1</code>タスクと<code>integTest2</code>タスクの終了時に<code>stopAppServer</code>タスクを実行するように宣言されています。どちらか片方のタスクがビルドの最中に起動された場合もfinalizer taskが自動で実行されます。ビルドの最中に両方のタスクが起動された場合でも必ず両方のタスクの最後にfinalizer taskが実行されます。finalizer taskの<code>stopAppServer</code>はGradle実行時に起動タスクとして指定する必要はありません。</p>

<h5>C++プロジェクトサポートの改善 <small>incubating</small></h5>

<p>GradleはC++プロジェクトのサポートをしていました。これはGradleをネイティブコードプロジェクトのビルドツールとして最良のものにする改善になります。</p>

<ul>
<li>スタティックライブラリーの作成、リンク作成</li>
<li>異なるC++ツールチェインでも利用可能になります(Visual C++、GCCなど)</li>
<li>異なるアーキテクチャー、ビルドタイプ、OSへの対応</li>
<li>Variantに基づいた依存性解決</li>
<li>その他もろもろ(詳しくは<a href="https://github.com/gradle/gradle/blob/master/design-docs/continuous-delivery-for-c-plus-plus.md">こちら</a>を見て下さい(英語))</li>
</ul>


<h5>JCenter レポジトリーのサポート <small>incubating</small></h5>

<p><a href="https://bintray.com/bintray/jcenter">Bintray&rsquo;s JCenter Repository</a>からdependencyを取得できるようになります。<code>jcenter()</code>レポジトリーノーテーションにより利用可能です。JCenterはコミュニティリポジトリーで、<a href="https://bintray.com/">Bintray</a>から無料で配布可能です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">jcenter</span><span class="o">()</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>このスクリプトにより<a href="http://jcenter.bintray.com">http://jcenter.bintray.com</a>がApache Maven repositoryと同様にリポジトリーリストに追加されます。</p>

<h5>パターン・ベース・ファイル・コピー設定 <small>incubating</small></h5>

<p>Gradle1.7ではきめ細かい設定によりどのファイルがコピーされるべきかを定義することができます。設定方法は&#8221;Ant Patterns&#8221;のように指定出来ます。この機能は<a href="https://github.com/kylewm">Kyle Marhan</a>氏によるものです。</p>

<p>GradleにはファイルコピーのAPI(<a href="http://www.gradle.org/docs/release-candidate/javadoc/org/gradle/api/file/CopySpec.html">CopySpec</a>)があり、アーカイブすることもできます。この新しい機能はより強力なものとなります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">task</span> <span class="nf">copyFiles</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Copy</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">from</span> <span class="s1">&#39;src/files&#39;</span>
</span><span class='line'>    <span class="n">into</span> <span class="s2">&quot;$buildDir/copied-files&quot;</span>
</span><span class='line'>    <span class="c1">// Replace the version number variable in only the text files</span>
</span><span class='line'>    <span class="n">filesMaching</span><span class="o">(</span><span class="s1">&#39;**/*.txt&#39;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">expand</span> <span class="nl">version:</span> <span class="s1">&#39;1.0&#39;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>fileMatching</code>メソッドではClosureを引数に取り、<a href="http://www.gradle.org/docs/release-candidate/javadoc/org/gradle/api/file/FileCopyDetails.html"><code>FileCopyDetails</code></a>オブジェクトの設定を行うことができます。これと反対の動作をする<a href="http://www.gradle.org/docs/release-candidate/javadoc/org/gradle/api/file/CopySpec.html#filesNotMatching%28java.lang.String%2C%20org.gradle.api.Action%29"><code>filesNotMatching</code></a>というメソッドもあり、パターンに該当しないファイルすべてを指定することもできます。</p>

<h5>ファイル重複時のハンドリング機能 <small>incubating</small></h5>

<p>ファイルのコピーやアーカイブするときに、よく重複することがあります。そのような重複が発生した場合の処理方法を設定できるようになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">task</span> <span class="nf">zip</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Zip</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">from</span> <span class="s1">&#39;dir1&#39;</span>
</span><span class='line'>    <span class="n">from</span> <span class="s1">&#39;dir2&#39;</span>
</span><span class='line'>    <span class="n">duplicatesStrategy</span> <span class="s1">&#39;exclude&#39;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>処理方法には２つあります。<code>include</code>と<code>exclude</code>です。</p>

<p><code>include</code>ストラテジーの場合、既存のGradleの動作と変わりありません。後からコピーされたもので上書きされます。なお、実際に発生した場合には警告が出力されるようになります。アーカイブ(zip、jar)の場合は新しいものが作成されます。</p>

<p><code>exclude</code>ストラテジーの場合、重複したファイルは無視されます。最初にコピーされたファイルが最終的に使われ、その後のファイルは無視され続けます。アーカイブの場合も同様で、最初に作成されたら、同じファイル名のものは作成されません。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">task</span> <span class="nf">zip</span> <span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Zip</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">duplicatesStrategy</span> <span class="s1">&#39;exclude&#39;</span> <span class="c1">// default strategy</span>
</span><span class='line'>    <span class="n">from</span> <span class="o">(</span><span class="s1">&#39;dir1&#39;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">filesMatching</span><span class="o">(</span><span class="s1">&#39;**/*.xml&#39;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">duplicatesStrategy</span> <span class="s1">&#39;include&#39;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">from</span> <span class="o">(</span><span class="s1">&#39;dir2&#39;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">duplicatesStrategy</span> <span class="s1">&#39;include&#39;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Gradle Wrapperはビルドスクリプトを特にいじらなくても利用可能になります <small>incubating</small></h5>

<p><a href="http://www.gradle.org/docs/release-candidate/userguide/gradle_wrapper.html">Gradle Wrapper</a>は<code>Wrapper</code>タスクを定義しなくても利用できるようになります。つまり<code>Wrapper</code>のためにビルドスクリプトをいじることはありません。</p>

<p><code>Wrapper</code>を利用するためには単純に次のコマンドを実行するだけです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="n">wrapper</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Wrapper</code>ファイルがこれにより生成・設定されて、現在使用しているGradleのバージョンを利用することができるようになります。</p>

<p>なお、<code>wrapper</code>タスクをカスタマイズしたい場合は、ビルドスクリプトを次のように変更します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">wrapper</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">gradleVersion</span> <span class="s1">&#39;1.6&#39;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>もし既存の<code>Wrapper</code>タイプのタスクがある場合は、そちらが使われます。それ以外の場合はデフォルトの<code>wrapper</code>タスクが使用されます。</p>

<h5>Javaライブラリーテンプレートプロジェクトの生成</h5>

<p>build-setupプラグインがプロジェクトタイプをサポートするようになりました。Gradle1.7ではjava-libraryタイプが利用可能です。このタイプで生成されるのは以下のとおりです。</p>

<ul>
<li>javaプラグインが適用されたシンプルなビルドファイル</li>
<li>サンプルのプロダクションクラスとディレクトリー</li>
<li>サンプルのJUnitテストとディレクトリー</li>
<li>Gradle Wrapperファイル</li>
</ul>


<p>Javaライブラリープロジェクトを作る場合は次のコマンドを実行するだけです(build.gradleファイルは必要ありません)。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="n">setupBuild</span> <span class="o">--</span><span class="n">type</span> <span class="n">java</span><span class="o">-</span><span class="n">library</span>
</span></code></pre></td></tr></table></div></figure>


<p>詳しくはこちらを<a href="http://www.gradle.org/docs/release-candidate/userguide/build_setup_plugin.html">Build Setup plugin</a>を参照して下さい。</p>

<h5>publicationのカスタマイズ &ndash; new publishingプラグインにおける <small>incubating</small></h5>

<p>publishプラグインでアーカイブを発行するときにartifactの情報を明示的にカスタマイズできるようになりました。以前はartifactの情報はプロジェクトの情報から取得されていました。</p>

<p><code>MavenPublication</code>では<code>groupId</code>、<code>artifactId</code>と<code>version</code>情報を設定できるようになります。Mavenの<code>pom</code>の<code>packaging</code>の値も設定可能です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">mavenPub</span><span class="o">(</span><span class="n">MaenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">from</span> <span class="n">components</span><span class="o">.</span><span class="na">java</span>
</span><span class='line'>        <span class="n">groupId</span> <span class="s1">&#39;my.group.id&#39;</span>
</span><span class='line'>        <span class="n">artifactId</span> <span class="s1">&#39;my-publication&#39;</span>
</span><span class='line'>        <span class="n">version</span> <span class="s1">&#39;3.1&#39;</span>
</span><span class='line'>        <span class="n">pom</span><span class="o">.</span><span class="na">packaging</span> <span class="s1">&#39;pom&#39;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>IvyPublication</code>では<code>organisation</code>、<code>module</code>と<code>revision</code>を設定出来ます。<code>IvyModuleDescriptor</code>で<code>status</code>の値も設定可能です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">ivyPub</span><span class="o">(</span><span class="n">IvyPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">from</span> <span class="n">components</span><span class="o">.</span><span class="na">java</span>
</span><span class='line'>        <span class="n">organisation</span> <span class="s1">&#39;my.org&#39;</span>
</span><span class='line'>        <span class="n">module</span> <span class="s1">&#39;my-module&#39;</span>
</span><span class='line'>        <span class="n">revision</span> <span class="s1">&#39;3&#39;</span>
</span><span class='line'>        <span class="n">descriptor</span><span class="o">.</span><span class="na">status</span> <span class="s1">&#39;milestone&#39;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>この機能のすごいところは、<code>module</code>や<code>artifactId</code>を設定することができることです。というのも、これまでは<code>project.name</code>を使っており、Gradleのビルドスクリプトで変更することができなかったためです。</p>

<h5>複数のモジュールを一つのGradleプロジェクトから発行する <small>incubating</small></h5>

<p>publishプラグインでは複数のモジュールを一つのGradleプロジェクトから発行することが可能になります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">project</span><span class="o">.</span><span class="na">group</span> <span class="s1">&#39;org.cool.library&#39;</span>
</span><span class='line'><span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">implJar</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">artifactId</span> <span class="s1">&#39;cool-library&#39;</span>
</span><span class='line'>        <span class="n">version</span> <span class="s1">&#39;3.1&#39;</span>
</span><span class='line'>        <span class="n">artifact</span> <span class="n">jar</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">apiJar</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">artifactId</span> <span class="s1">&#39;cool-library-api&#39;</span>
</span><span class='line'>        <span class="n">version</span> <span class="s1">&#39;3&#39;</span>
</span><span class='line'>        <span class="n">artifact</span> <span class="n">apiJar</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これまでも可能でしたが、ここに示したような簡単な方法ではできませんでした。新しい<code>ivy-publish</code>、<code>maven-publish</code>プラグインでは簡単に出来ます。</p>

<h5>TestNGパラメーターがテストレポートに出力されます <small>incubating</small></h5>

<p>TestNGでは<a href="http://testng.org/doc/documentation-main.html#parameters">parameterizing test methods</a>によってあるテストを複数回、異なるデータの入力でテストを行うことがサポートされています。以前のGradleのレポートでは、パラメタライズドテストは複数行にわたってレポートが出力されていましたが、そのテストの区別をすることができませんでした。テストレポートにはパラメーターの<code>toString()</code>メソッドによる値を出力できるようにし、どのデータによるテストかを区別できるようにしました。</p>

<figure class='code'><figcaption><span>ParameterizedTest.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">org.testng.annotations.*</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ParameterizedTest</span> <span class="o">{</span>
</span><span class='line'>    <span class="nd">@Test</span><span class="o">(</span><span class="n">dataProvider</span> <span class="o">=</span> <span class="s">&quot;1&quot;</span><span class="o">)</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">aParameterizedTestCase</span><span class="o">(</span><span class="n">String</span> <span class="n">var1</span><span class="o">,</span> <span class="n">String</span> <span class="n">var2</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// do testing</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@DataProvider</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&quot;1&quot;</span><span class="o">)</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">Object</span><span class="o">[][]</span> <span class="nf">provider1</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[][]</span> <span class="o">{</span>
</span><span class='line'>           <span class="o">{</span><span class="s">&quot;1&quot;</span><span class="o">,</span> <span class="s">&quot;2&quot;</span><span class="o">},</span>
</span><span class='line'>           <span class="o">{</span><span class="s">&quot;3&quot;</span><span class="o">,</span> <span class="s">&quot;4&quot;</span><span class="o">}</span>
</span><span class='line'>        <span class="o">};</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記のテストに対するレポートは次のように表示されます。</p>

<ul>
<li><code>aParameterizedTestCase(1, 2)</code></li>
<li><code>aParameterizedTestCase(3, 4)</code></li>
</ul>


<p>この情報はGradleのHTMLテストレポートとJUnit XMLファイルに反映されます。JUnit XMLファイルは一般的にテストの実行結果をCIサーバーに引き渡す役割を担っており、CIサーバーでパラメーターの情報を参照することが可能になります。</p>

<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaFXをヘッドレスブラウザーとして使うための基本テク #javafx]]></title>
    <link href="http://mike-neck.github.io/blog/2013/07/02/one-of-techniques-to-use-javafx-as-headless-browser/"/>
    <updated>2013-07-02T10:28:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/07/02/one-of-techniques-to-use-javafx-as-headless-browser</id>
    <content type="html"><![CDATA[<p>こんにちわ、みけです。</p>

<p>JavaFXをヘッドレスブラウザーとして使おうとして、</p>

<p>いろいろとWebのリダイレクトにハマりまくっています。</p>

<p>で、今回はJavaFXをJavaFXのスレッド以外のスレッドから扱うTipsを集めました。</p>

<h2>Goal</h2>

<h4>期待していいこと</h4>

<ul>
<li>JavaFXの操作をJavaFXの外からする方法</li>
</ul>


<h4>期待してはいけないこと</h4>

<ul>
<li>GUIプログラミングの云々かんぬん</li>
</ul>


<h2>Basics</h2>

<p>JavaFXのアプリケーションのサンプル的な起動方法は次のとおりです。</p>

<figure class='code'><figcaption><span>SampleApplication.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">javafx.application.Application</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javafx.stage.Stage</span><span class="o">;</span>
</span><span class='line'><span class="c1">// この中のmainメソッドからアプリケーションを起動しちゃう</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SampleApplication</span> <span class="kd">extends</span> <span class="n">Application</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Application</span><span class="o">.</span><span class="na">launch</span><span class="o">(</span><span class="n">SampleApplication</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">start</span><span class="o">(</span><span class="n">Stage</span> <span class="n">stage</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// do something.</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>さて、この方法を採用している限りにおいては、</p>

<p>JavaFXのスレッドがどうのこうのでハマることはありません。</p>

<p>今回のテーマはJavaFXアプリケーションの外と内をわけることにあります。</p>

<p>JavaFXアプリケーションはバックグラウンドで実行します。</p>

<p>そのためには<code>java.util.concurrent.ExecutorService</code>を用います。</p>

<figure class='code'><figcaption><span>ApplicationLauncher.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">javafx.application.Application</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javafx.application.Platform</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.concurrent.ExecutorService</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.concurrent.Executors</span><span class="o">;</span>
</span><span class='line'><span class="c1">// 先ほどのSampleApplicationを起動します。</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ApplicationLauncher</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">ExecutorService</span> <span class="n">SERVICE</span> <span class="o">=</span>
</span><span class='line'>            <span class="n">Executors</span><span class="o">.</span><span class="na">newFixedThreadPool</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// launch application</span>
</span><span class='line'>        <span class="n">SERVICE</span><span class="o">.</span><span class="na">submit</span><span class="o">(</span><span class="k">new</span> <span class="n">Runnable</span><span class="o">(){</span>
</span><span class='line'>            <span class="nd">@Override</span>
</span><span class='line'>            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">Application</span><span class="o">.</span><span class="na">launch</span><span class="o">(</span><span class="n">SampleApplication</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">});</span>
</span><span class='line'>        <span class="c1">// do something</span>
</span><span class='line'>        <span class="c1">// shutdown application</span>
</span><span class='line'>        <span class="n">Platform</span><span class="o">.</span><span class="na">exit</span><span class="o">();</span>
</span><span class='line'>        <span class="n">SERVICE</span><span class="o">.</span><span class="na">shutdown</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2><code>Platform#RunLater(java.lang.Runnable)</code></h2>

<p>JavaFX上でのみ動作するオブジェクトへの操作は<code>Platform#runLater(java.lang.Runnable)</code>を</p>

<p>通じて行います。</p>

<figure class='code'><figcaption><span>ControllerStimulation.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">javafx.application.Platform</span><span class="o">;</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ControllerStimulation</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// JavaFXのcontrollerクラスのインスタンス</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">SampleController</span> <span class="n">controller</span><span class="o">;</span>
</span><span class='line'>    <span class="c1">// Platform#runLater(Runnable)を通じてcontrollerクラスへの操作を行う。</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">simulateClickButton</span> <span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Platform</span><span class="o">.</span><span class="na">runLater</span><span class="o">(</span><span class="k">new</span> <span class="n">SimulateClickButton</span><span class="o">());</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="c1">// 実際にcontrollerクラスを操作するRunnable</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">class</span> <span class="nc">SimulateClickButton</span> <span class="kd">implements</span> <span class="n">Runnable</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span> <span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">controller</span><span class="o">.</span><span class="na">clickButton</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>戻り値を利用したい場合</h2>

<p>御存知の通り、<code>java.lang.Runnable#run()</code>は値を返しませんので、</p>

<p>値の受け渡しには<code>java.util.concurrent.BlockingQueue&lt;T&gt;</code>を使うことになります。</p>

<p><code>Platform#runLater</code>が<code>java.util.concurrent.Callable&lt;T&gt;</code>を引数にとって、</p>

<p><code>java.util.concurrent.Future&lt;T&gt;</code>を返してくれるといいんですけどね…</p>

<figure class='code'><figcaption><span>JavascriptExecution.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">javafx.application.Platform</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javafx.scene.web.WebEngine</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.concurrent.BlockingQueue</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.concurrent.LinkedBlockingQueue</span><span class="o">;</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JavascriptExecution</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// controllerクラスのインスタンス</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">SampleController</span> <span class="n">controller</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">callJavascript</span><span class="o">(</span><span class="n">String</span> <span class="n">javascript</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">final</span> <span class="n">BlockingQueue</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">queue</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LinkedBlockingQueue</span><span class="o">&lt;&gt;();</span>
</span><span class='line'>        <span class="n">Platform</span><span class="o">.</span><span class="na">runLater</span><span class="o">(</span><span class="k">new</span> <span class="n">CallJavascript</span><span class="o">(</span><span class="n">queue</span><span class="o">,</span> <span class="n">javascript</span><span class="o">));</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">result</span> <span class="o">=</span> <span class="n">queue</span><span class="o">.</span><span class="na">take</span><span class="o">();</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span><span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">class</span> <span class="nc">CallJavascript</span> <span class="kd">implements</span> <span class="n">Runnable</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">private</span> <span class="kd">final</span> <span class="n">BlockingQueue</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">queue</span><span class="o">;</span>
</span><span class='line'>        <span class="kd">private</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">script</span><span class="o">;</span>
</span><span class='line'>        <span class="n">CallJavascript</span><span class="o">(</span><span class="kd">final</span> <span class="n">BlockingQueue</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">queue</span><span class="o">,</span> <span class="n">String</span> <span class="n">script</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">this</span><span class="o">.</span><span class="na">queue</span> <span class="o">=</span> <span class="n">queue</span><span class="o">;</span>
</span><span class='line'>            <span class="k">this</span><span class="o">.</span><span class="na">script</span> <span class="o">=</span> <span class="n">script</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">WebEngine</span> <span class="n">engine</span> <span class="o">=</span> <span class="n">controller</span><span class="o">.</span><span class="na">getEngine</span><span class="o">();</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">result</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span> <span class="n">engine</span><span class="o">.</span><span class="na">executeScript</span><span class="o">(</span><span class="n">script</span><span class="o">);</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">queue</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span><span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>実際はJavascriptなどでエラーがあると、<code>netscape.javascript.JSException</code>がthrowされるので、</p>

<p><code>Platform#runLater(java.lang.Runnable)</code>で<code>java.lang.RuntimeException</code>を検知して、</p>

<p>Applicatoinを終了させるような仕組みを組み込んでおくことが望まれるのですが、</p>

<p>それはここでの話を逸脱するし、誰得な気がするので、</p>

<p>やめておく…</p>

<p>以下、実際に僕が書いているコード</p>

<p><a href="https://googledrive.com/host/0B4hhdHWLP7RRQVYweDh2QU1LVk0" target="_blank"><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRQVYweDh2QU1LVk0" style="width : 450px;"></a></p>

<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaFXをheadless browserとして使うためのJSObjectの扱い方 - 1]]></title>
    <link href="http://mike-neck.github.io/blog/2013/07/01/using-javafx-as-headless-browser/"/>
    <updated>2013-07-01T13:03:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/07/01/using-javafx-as-headless-browser</id>
    <content type="html"><![CDATA[<p>こんにちわ。</p>

<p>みけです。</p>

<p>JavaFXでjavascriptのテスティングフレームワークを作ろうと思ってから、</p>

<p>早1年半。</p>

<p>全然成果があがっていません。</p>

<p>今日は、そんな自分のための俺得なエントリー。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRbkltQVpjMUkzNE0" style="width : 450px;"/></p>

<h2>Goal</h2>

<h4>期待していいこと</h4>

<ul>
<li>JSObjectでのarrayの取り扱い</li>
</ul>


<h4>期待できないこと</h4>

<ul>
<li>JavaFXのスレッドの同期方法</li>
<li>JSObjectでのobjectの取り扱い</li>
</ul>


<h2>JSObjectの扱い方 &ndash; array編</h2>

<p><code>JSObject#getSlot(int)</code>を使ってarrayの要素を取得します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">final</span> <span class="n">String</span> <span class="n">script</span> <span class="o">=</span> <span class="s">&quot;(function(){return [&#39;a&#39;, 2, &#39;c&#39;, 4, &#39;e&#39;];})()&quot;</span><span class="o">;</span>
</span><span class='line'><span class="kd">final</span> <span class="n">BlockingQueue</span><span class="o">&lt;</span><span class="n">JSObject</span><span class="o">&gt;</span> <span class="n">queue</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LinkedBlockingQueue</span><span class="o">&lt;&gt;();</span>
</span><span class='line'><span class="n">Platform</span><span class="o">.</span><span class="na">runLater</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">queue</span><span class="o">.</span><span class="na">put</span><span class="o">((</span><span class="n">JSObject</span><span class="o">)</span> <span class="n">webEngine</span><span class="o">.</span><span class="na">executeScript</span><span class="o">(</span><span class="n">script</span><span class="o">));</span>
</span><span class='line'><span class="o">});</span>
</span><span class='line'><span class="n">JSObject</span> <span class="n">array</span> <span class="o">=</span> <span class="n">queue</span><span class="o">.</span><span class="na">take</span><span class="o">();</span>
</span><span class='line'><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span> <span class="o">+</span> <span class="s">&quot; -&gt; &quot;</span> <span class="o">+</span> <span class="n">array</span><span class="o">.</span><span class="na">getSlot</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>結果は次のようになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="mi">0</span> <span class="o">-&gt;</span> <span class="n">a</span>
</span><span class='line'><span class="mi">1</span> <span class="o">-&gt;</span> <span class="mi">2</span>
</span><span class='line'><span class="mi">2</span> <span class="o">-&gt;</span> <span class="n">c</span>
</span><span class='line'><span class="mi">3</span> <span class="o">-&gt;</span> <span class="mi">4</span>
</span><span class='line'><span class="mi">4</span> <span class="o">-&gt;</span> <span class="n">e</span>
</span></code></pre></td></tr></table></div></figure>


<p>ちなみに要素のindexより多い数を<code>JSObject#getSLot(int)</code>の引数に渡すと、</p>

<p><code>String</code>の<code>undefined</code>が返ってきます。</p>

<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第一回渋谷javaに行ってきた]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/30/first-shibuya-java/"/>
    <updated>2013-06-30T15:05:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/30/first-shibuya-java</id>
    <content type="html"><![CDATA[<p><a href="http://atnd.org/events/40140">第一回渋谷java</a>というのに行って来ました。</p>

<p>javaの勉強会としては比較的若い人の集まった勉強会だったと思います。</p>

<hr />

<p>自己紹介で「好きなEclipseのショートカットは？」とか聞かれたので、</p>

<p>相変わらずのことで「Eclipse氏ね」と答えて来ました。</p>

<p>後、Eclipseの代替するエディターがvimだったので、</p>

<p>いや、IntelliJ IDEAですからとも自己紹介しておきました。</p>

<hr />

<p>一応タイトルはネタっぽいですが、</p>

<p>真面目な話をして来ました。</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/23694003" width="476" height="400" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>


<hr />

<p>他の参加者のブログがいくつかあるようです。</p>

<ul>
<li><a href="http://d.hatena.ne.jp/jflute/20130629/1372519117">新たなるJavaの風景、渋谷javaがスタート！</a></li>
<li><a href="http://blog.k11i.biz/2013/06/java.html">第１回 #渋谷Java でトークしてきました</a></li>
<li><a href="http://hotchemi.hateblo.jp/entry/2013/06/29/230427">第1回渋谷Javaに行ってきた</a></li>
</ul>


<p>あと、いくつかスライドがアップロードされています。</p>

<p>JavaとOSS &ndash; ユーザーサイドから語ってみる</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/23660334" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen webkitallowfullscreen mozallowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="http://www.slideshare.net/commonplace0807/java-23660334" title="渋谷Java第一回" target="_blank">渋谷Java第一回</a> </strong> from <strong><a href="http://www.slideshare.net/commonplace0807" target="_blank">commonplace0807</a></strong> </div></p>

<hr />

<p>今回は初回ということでLTだけでしたが、ハンズオンなども実施していくとのことです。</p>

<p>Eclipse強制されるのでなければ、行こうかなと思います。</p>

<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java8 lambda式を使ってみた]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/27/java8-lambdashi-woshi-tutemita/"/>
    <updated>2013-06-27T22:24:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/27/java8-lambdashi-woshi-tutemita</id>
    <content type="html"><![CDATA[<p>こんにちわ、みけです。</p>

<p>Java8初心者勉強会というのを開催してみました。</p>

<p>参加者2人でした。</p>

<p>Java8はだれも興味ないんだなと思いました。</p>

<h2>Java8のラムダ式</h2>

<p>特にもうこれといって目新しいこともありません。</p>

<p>メソッドが一つだけのインターフェースを記述するときに、</p>

<p>非常に記述が楽になるというものです。</p>

<p>例えば次のようなクラスがあるとします。</p>

<figure class='code'><figcaption><span>Item.jara</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Item</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">final</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">final</span> <span class="kt">int</span> <span class="n">price</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">Item</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="kt">int</span> <span class="n">price</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">price</span> <span class="o">=</span> <span class="n">price</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPrice</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">price</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記の<code>Item</code>クラスを<code>price</code>の昇順、<code>name</code>の昇順でソートするコードは以下のようになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">List</span><span class="o">&lt;</span><span class="n">Item</span><span class="o">&gt;</span> <span class="n">items</span> <span class="o">=</span> <span class="n">getItemList</span><span class="o">();</span>
</span><span class='line'><span class="n">items</span><span class="o">.</span><span class="na">sort</span><span class="o">((</span><span class="n">left</span><span class="o">,</span> <span class="n">right</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">priceOrder</span> <span class="o">=</span> <span class="n">left</span><span class="o">.</span><span class="na">getPrice</span><span class="o">()</span> <span class="o">-</span> <span class="n">right</span><span class="o">.</span><span class="na">getPrice</span><span class="o">();</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">nameOrder</span> <span class="o">=</span> <span class="n">left</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span>
</span><span class='line'>            <span class="n">compareTo</span><span class="o">(</span><span class="n">right</span><span class="o">.</span><span class="na">getNmae</span><span class="o">());</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">priceOrder</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">?</span> <span class="n">priceOrder</span> <span class="o">:</span> <span class="n">nameOrder</span><span class="o">;</span>
</span><span class='line'><span class="o">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>ところで、<code>Item</code>クラスの<code>price</code>だとか<code>name</code>だとかについて、</p>

<p>それをソートするという操作は別に外のクラスが実装しても構わないけど、</p>

<p><code>Item</code>クラスが持っている方が何かと便利です。</p>

<p>したがって、オーダーするにあたって、<code>Item</code>クラスに次のようなメソッドを</p>

<p>持たせるようにします。</p>

<figure class='code'><figcaption><span>Item.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Item</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">final</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">final</span> <span class="kt">int</span> <span class="n">price</span><span class="o">;</span>
</span><span class='line'>    <span class="c1">// 途中省略</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">comparePriceAscNameAsc</span> <span class="o">(</span><span class="n">Item</span> <span class="n">that</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">priceOrder</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">price</span> <span class="o">-</span> <span class="n">that</span><span class="o">.</span><span class="na">price</span><span class="o">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">priceOrder</span> <span class="o">!=</span> <span class="mi">0</span> <span class="n">priceOrder</span> <span class="o">:</span>
</span><span class='line'>                <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">.</span><span class="na">compareTo</span><span class="o">(</span><span class="n">that</span><span class="o">.</span><span class="na">name</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>先ほどのソートをするコードのラムダ式部分は非常に簡単化されます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">items</span><span class="o">.</span><span class="na">sort</span><span class="o">((</span><span class="n">left</span><span class="o">,</span> <span class="n">right</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">left</span><span class="o">.</span><span class="na">comparePriceAscNameAsc</span><span class="o">(</span><span class="n">right</span><span class="o">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>ところで、呼び出されるメソッドはこのケースの場合わかりきっているので、</p>

<blockquote><p>TODO : この記述は適当に書いているのでドキュメントを読み直します</p></blockquote>

<p>Method Referenceに変更することが可能です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">items</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="nl">Item:</span><span class="o">:</span><span class="n">comparePriceAscNameAsc</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>という感じで、ラムダ式っぽい記述はなくなりました。</p>

<p>ちなみにMethod and Constructor Referenceは<a href="http://cr.openjdk.java.net/~dlsmith/jsr335-0.6.1/C.html">Lambdaの仕様の一部</a>です。</p>

<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to publish artifacts to maven central repository via gradle maven-publish plugin (version 1.6)]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/21/how-to-publish-artifacts-with-gradle-maven-publish-plugin-version-1-dot-6/"/>
    <updated>2013-06-21T14:04:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/21/how-to-publish-artifacts-with-gradle-maven-publish-plugin-version-1-dot-6</id>
    <content type="html"><![CDATA[<p><img src="http://www.gradle.org/forum-assets/images/gradle_logo.gif"/></p>

<p>Gradle <strong>maven-publish plugin</strong> provides the easier way to publish artifacts than the old <strong>maven plugin</strong>.</p>

<p>This post introduces you the way to publish artifacts with <strong>maven-publish plugin</strong>.</p>

<p><strong>Please Note that</strong> maven-publish plugin is incubating feature. Its DSL may change later.</p>

<h2>Goal</h2>

<p>After reading this post, you can upload your artifacts to maven central repository via <strong>maven-publish plugin</strong>.</p>

<h2>Basics and Example</h2>

<p>To publish artifacts you should do these things.</p>

<ol>
<li>to declare applying <strong>maven-publish plugin</strong>.</li>
<li>to tell gradle which files should be published.</li>
<li>to tell gradle where to upload artifacts.</li>
</ol>


<p>Now let&rsquo;s see sample build script.</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="c1">// declaration of plugins (1)</span>
</span><span class='line'><span class="o">[</span><span class="s1">&#39;java&#39;</span><span class="o">,</span> <span class="s1">&#39;maven-publish&#39;</span><span class="o">].</span><span class="na">each</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="n">it</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">group</span> <span class="o">=</span> <span class="s1">&#39;com.yourdomain&#39;</span>
</span><span class='line'><span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;1.0&#39;</span>
</span><span class='line'><span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">mavenCentral</span> <span class="o">()</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">compile</span> <span class="s1">&#39;org.apache.commons:commons-lang3:3.1&#39;</span>
</span><span class='line'>    <span class="n">testCompile</span> <span class="s1">&#39;junit:junit:4.11&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">myPublication</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// telling gradle to publish project&#39;s jar archive (2)</span>
</span><span class='line'>            <span class="n">from</span> <span class="n">components</span><span class="o">.</span><span class="na">java</span>
</span><span class='line'>            <span class="c1">// telling gradle to publish README file (2)</span>
</span><span class='line'>            <span class="n">artifact</span> <span class="o">(</span><span class="s1">&#39;README.txt&#39;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;README&#39;</span>
</span><span class='line'>                <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;txt&#39;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="c1">// telling gradle to publish artifact to local directory (3)</span>
</span><span class='line'>    <span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">maven</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">url</span> <span class="s2">&quot;file:/${project.projectDir}/artifacts&quot;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>With this script you can publish your artifact via this command.</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="n">publish</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then you will find some file is generated at <code>artifact</code> directory.</p>

<p>These files are …</p>

<ul>
<li>sample-project.jar</li>
<li>sample-project.jar.md5</li>
<li>sample-project.jar.sha1</li>
<li>sample-project.pom</li>
<li>sample-project.pom.md5</li>
<li>sample-project.pom.sha1</li>
<li>sample-project-README.txt</li>
<li>sample-project-README.txt.md5</li>
<li>sample-project-README.txt.sha1</li>
</ul>


<h2>Conventions</h2>

<p><strong>maven-publish plugin</strong> has some conventions.</p>

<ul>
<li>base archive name is project name.</li>
<li><code>classifier</code> is given after the project name.</li>
<li><code>extension</code> is given after the project name and <code>classifier</code>.</li>
<li><code>classifier</code> and <code>extension</code> should be unique in all artifacts in a publication.</li>
</ul>


<h2>Publishing javadoc and source code as jar</h2>

<h3>javadoc</h3>

<p>Following shows the way to publish javadoc as jar.</p>

<ol>
<li>call javadoc task.</li>
<li>create a task of zipping javadoc and call it.</li>
<li>give th zipping task to <code>artifact</code> method in publication container.</li>
</ol>


<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="c1">// (2)</span>
</span><span class='line'><span class="n">task</span> <span class="nf">javadocJar</span> <span class="o">(</span><span class="nl">type:</span> <span class="n">Jar</span><span class="o">,</span> <span class="nl">dependsOn:</span> <span class="n">javadoc</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// (1)</span>
</span><span class='line'>    <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;javadoc&#39;</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">javadoc</span><span class="o">.</span><span class="na">destinationDir</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">myPublication</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">artifact</span> <span class="o">(</span><span class="n">javadocJar</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// (3)</span>
</span><span class='line'>                <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;javadoc&#39;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>source codes</h3>

<p>Following shows the way to publish source as jar.</p>

<ol>
<li>create a task of zipping sources as jar.</li>
<li>give the zipping task to <code>artifact</code> method in publication container.</li>
</ol>


<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="c1">// (1)</span>
</span><span class='line'><span class="n">task</span> <span class="nf">sourceJar</span> <span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;sources&#39;</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">sourceSets</span><span class="o">.</span><span class="na">main</span><span class="o">.</span><span class="na">allSource</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">myPublication</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">artifact</span> <span class="o">(</span><span class="n">sourceJar</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// (2)</span>
</span><span class='line'>                <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;sources&#39;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Modifying POM</h2>

<h3>requirements</h3>

<p><strong>maven-publish plugin</strong> generates POM, but it lacks some elements required by Sonatype OSS repository. Folowing shows list of elements to be added.</p>

<ul>
<li><code>&lt;name&gt;</code> &ndash; the name of project</li>
<li><code>&lt;description&gt;</code> &ndash; the description for the project</li>
<li><code>&lt;url&gt;</code> &ndash; project&rsquo;s url</li>
<li><code>&lt;scm&gt;&lt;url&gt;</code> &ndash; repository url.</li>
<li><code>&lt;scm&gt;&lt;connection&gt;</code> &ndash; repository url for scm tool. for example using git &ndash; github, it becomes <code>scm:git:git://github.com/your-name/project-name.git</code></li>
<li><code>&lt;scm&gt;&lt;developerConnection&gt;</code> &ndash; repository url for scm tool via ssh. for example using git &ndash; github, it becomes <code>scm:git:ssh:git@github.com:your-name/project-name.git</code></li>
<li><code>&lt;licenses&gt;&lt;license&gt;&lt;name&gt;</code> &ndash; license name (i.e. <code>The Apache Software License, Version 2.0</code> etc…). In the case of the project being licensed under multiple license, <code>licenses</code> elements can have multiple <code>&lt;license&gt;</code> elements.</li>
<li><code>&lt;licenses&gt;&lt;license&gt;&lt;url&gt;</code> &ndash; license url (e.x. if the project is licensed under Apache version 2, it becomes <code>http://www.apache.org/license/LICENSE-2.0.txt</code>)</li>
<li><code>&lt;licenses&gt;&lt;license&gt;&lt;distribution&gt;</code> &ndash; <code>repo</code></li>
<li><code>&lt;developers&gt;&lt;developer&gt;&lt;id&gt;</code> &ndash; developer&rsquo;s id. If there are more than one developers, you can write <code>&lt;developer&gt;</code> elements more than one times.</li>
<li><code>&lt;developers&gt;&lt;developer&gt;&lt;name&gt;</code> &ndash; developer&rsquo;s name.</li>
<li><code>&lt;developers&gt;&lt;developer&gt;&lt;email&gt;</code> &ndash; developer&rsquo;s email.</li>
</ul>


<h3>build script</h3>

<p>To add these elements to POM, you can acces pom file via <code>pom</code> object&rsquo;s <code>withXml</code> method in <code>MavenPublication</code> container.</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">myPublication</span> <span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">from</span> <span class="n">components</span><span class="o">.</span><span class="na">java</span>
</span><span class='line'>            <span class="n">pom</span><span class="o">.</span><span class="na">withXml</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">asNode</span><span class="o">().</span><span class="na">children</span><span class="o">().</span><span class="na">last</span><span class="o">()</span> <span class="o">+</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">resolveStrategy</span> <span class="o">=</span> <span class="n">Closure</span><span class="o">.</span><span class="na">DELEGATE_FIRST</span>
</span><span class='line'>                    <span class="n">name</span> <span class="s1">&#39;project-name&#39;</span>
</span><span class='line'>                    <span class="n">description</span> <span class="s1">&#39;description for project&#39;</span>
</span><span class='line'>                    <span class="n">url</span> <span class="n">projectUrl</span>
</span><span class='line'>                    <span class="n">scm</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">url</span> <span class="n">scmUrl</span>
</span><span class='line'>                        <span class="n">connection</span> <span class="n">connectionUrl</span>
</span><span class='line'>                        <span class="n">developerConnection</span> <span class="n">developerConnectionUrl</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                    <span class="n">licenses</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">license</span> <span class="o">{</span>
</span><span class='line'>                            <span class="n">name</span> <span class="s1">&#39;The Apache Software License, Version 2.0&#39;</span>
</span><span class='line'>                            <span class="n">url</span> <span class="s1">&#39;http://www.apache.org/license/LICENSE-2.0.txt&#39;</span>
</span><span class='line'>                            <span class="n">distribution</span> <span class="s1">&#39;repo&#39;</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                    <span class="n">developers</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">developer</span> <span class="o">{</span>
</span><span class='line'>                            <span class="n">id</span> <span class="s1">&#39;your id or nick name&#39;</span>
</span><span class='line'>                            <span class="n">name</span> <span class="s1">&#39;Your Name&#39;</span>
</span><span class='line'>                            <span class="n">email</span> <span class="s1">&#39;your@mail.address&#39;</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Signing Jar</h2>

<p>To keep quality of maven central repo, signing files is required.</p>

<p>These files should be signed.</p>

<ul>
<li>main jar (file name is <code>project-name.jar.asc</code>)</li>
<li>javadoc jar (file name is <code>project-name-javadoc.jar.asc</code>)</li>
<li>sources jar (file name is <code>project-name-sources.jar.asc</code>)</li>
<li>pom file (file name is <code>project-name.pom.asc</code>, on this signature this post will mention later)</li>
</ul>


<p>To sign archives is available via <strong>signing plugin</strong>.</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="c1">// adding &#39;signing&#39; plugin</span>
</span><span class='line'><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;signing&#39;</span>
</span><span class='line'><span class="c1">// summarize artifacts</span>
</span><span class='line'><span class="n">artifacts</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">jar</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">sourceJar</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">javadocJar</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// sign all artifacts</span>
</span><span class='line'><span class="n">task</span> <span class="nf">signJars</span> <span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Sign</span><span class="o">,</span> <span class="nl">dependsOn:</span> <span class="o">[</span><span class="n">jar</span><span class="o">,</span> <span class="n">javadocJar</span><span class="o">,</span> <span class="n">sourceJar</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">sign</span> <span class="n">configurations</span><span class="o">.</span><span class="na">archives</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// call signJar task before publish task</span>
</span><span class='line'><span class="n">task</span> <span class="nf">preparePublish</span><span class="o">(</span><span class="nl">dependsOn:</span> <span class="n">signJar</span><span class="o">)</span>
</span><span class='line'><span class="c1">// extract signature file and give them proper name</span>
</span><span class='line'><span class="kt">def</span> <span class="n">getSignatureFiles</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">allFiles</span> <span class="o">=</span> <span class="n">project</span><span class="o">.</span><span class="na">tasks</span><span class="o">.</span><span class="na">signJars</span><span class="o">.</span><span class="na">signatureFiles</span><span class="o">.</span><span class="na">collect</span> <span class="o">{</span> <span class="n">it</span> <span class="o">}</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">signedSources</span> <span class="o">=</span> <span class="n">allFiles</span><span class="o">.</span><span class="na">find</span> <span class="o">{</span> <span class="n">it</span><span class="o">.</span><span class="na">name</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s1">&#39;-sources&#39;</span><span class="o">)</span> <span class="o">}</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">signedJavadoc</span> <span class="o">=</span> <span class="n">allFiles</span><span class="o">.</span><span class="na">find</span> <span class="o">{</span> <span class="n">it</span><span class="o">.</span><span class="na">name</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s1">&#39;-javadoc&#39;</span><span class="o">)</span> <span class="o">}</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">signedJar</span> <span class="o">=</span> <span class="o">(</span><span class="n">allFiles</span> <span class="o">-</span> <span class="o">[</span><span class="n">signedSources</span><span class="o">,</span> <span class="n">signedJavadoc</span><span class="o">])[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">[</span>
</span><span class='line'>            <span class="o">[</span><span class="nl">archive:</span> <span class="n">signedSources</span><span class="o">,</span> <span class="nl">classifier:</span> <span class="s1">&#39;sources&#39;</span><span class="o">,</span> <span class="nl">extension:</span> <span class="s1">&#39;jar.asc&#39;</span><span class="o">],</span>
</span><span class='line'>            <span class="o">[</span><span class="nl">archive:</span> <span class="n">signedJavadoc</span><span class="o">,</span> <span class="nl">classifier:</span> <span class="s1">&#39;javadoc&#39;</span><span class="o">,</span> <span class="nl">extension:</span> <span class="s1">&#39;jar.asc&#39;</span><span class="o">],</span>
</span><span class='line'>            <span class="o">[</span><span class="nl">archive:</span> <span class="n">signedJar</span><span class="o">,</span>     <span class="nl">classifier:</span> <span class="kc">null</span><span class="o">,</span>      <span class="nl">extension:</span> <span class="s1">&#39;jar.asc&#39;</span><span class="o">]</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">signatures</span> <span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// give signature files to rtifact method</span>
</span><span class='line'>            <span class="n">getSignatureFiles</span><span class="o">().</span><span class="na">each</span> <span class="o">{</span><span class="n">signature</span> <span class="o">-&gt;</span>
</span><span class='line'>                <span class="n">artifact</span> <span class="o">(</span><span class="n">signature</span><span class="o">.</span><span class="na">archive</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">classifier</span> <span class="o">=</span> <span class="n">signature</span><span class="o">.</span><span class="na">classifier</span>
</span><span class='line'>                    <span class="n">extension</span>  <span class="o">=</span> <span class="n">signature</span><span class="o">.</span><span class="na">extension</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Signing POM</h2>

<p>Before running <code>publish</code> task, there are no POM file, so calling signing POM task will fail. To avoid this, whether calling POM task or not is defined dynamicly. And writing POM is available <code>writeTo(File)</code> method via <code>XmlProviderContainer</code> (i.e. on the <code>Closure</code> block of <code>pom.withXml</code>)</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">ext</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">pomFilePath</span> <span class="o">=</span> <span class="s2">&quot;${project.projectDir}/tmp/pom.xml&quot;</span>
</span><span class='line'>    <span class="n">pomFile</span> <span class="o">=</span> <span class="n">file</span><span class="o">(</span><span class="n">pomFilePath</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">configurations</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">pom</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">artifacts</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">jar</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">sourceJar</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">javadocJar</span>
</span><span class='line'>    <span class="nf">if</span> <span class="o">(</span><span class="n">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">pom</span> <span class="n">pomFile</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">task</span> <span class="nf">signPom</span><span class="o">(</span><span class="nl">type:</span> <span class="n">Sign</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">sign</span> <span class="n">configurations</span><span class="o">.</span><span class="na">pom</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kt">def</span> <span class="n">getPomSignature</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">project</span><span class="o">.</span><span class="na">tasks</span><span class="o">.</span><span class="na">signPom</span><span class="o">.</span><span class="na">signatureFiles</span><span class="o">.</span><span class="na">collect</span><span class="o">{</span><span class="n">it</span><span class="o">}[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="k">if</span> <span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">task</span> <span class="nf">preparePublication</span> <span class="o">(</span><span class="n">dependsOn</span> <span class="o">:</span> <span class="o">[</span><span class="n">signJars</span><span class="o">,</span> <span class="n">signPom</span><span class="o">])</span>
</span><span class='line'><span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">task</span> <span class="nf">preparePublication</span> <span class="o">(</span><span class="n">dependsOn</span> <span class="o">:</span> <span class="n">signJars</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">jar</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// publishing main jars</span>
</span><span class='line'>            <span class="n">pom</span><span class="o">.</span><span class="na">withXml</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// add required elements</span>
</span><span class='line'>                <span class="c1">// here writing pom file</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(!</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">writeTo</span> <span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">)</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">gpgJars</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// publishing signature of jars</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="c1">// dynamic publication definition</span>
</span><span class='line'>        <span class="c1">// pom file does exist signature of pom file is published</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">gpgPom</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">artifact</span> <span class="o">(</span><span class="n">getPomSignature</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">classifier</span> <span class="o">=</span> <span class="kc">null</span>
</span><span class='line'>                    <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;pom.asc&#39;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">maven</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">url</span> <span class="n">sonatypeUrl</span>
</span><span class='line'>                <span class="n">credentials</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">username</span> <span class="o">=</span> <span class="n">sonatypeUsername</span>
</span><span class='line'>                    <span class="n">password</span> <span class="o">=</span> <span class="n">sonatypePassword</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">url</span> <span class="n">fileDirectory</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>and execute gradle tasks as follows</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="n">clean</span> <span class="n">pP</span> <span class="n">publish</span>
</span><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="n">clean</span> <span class="n">pP</span> <span class="n">publish</span>
</span></code></pre></td></tr></table></div></figure>


<p>You should execute gradle publish task twice.</p>

<ol>
<li>The first execution is generating pom file and publishing som artifacts to machine&rsquo;s directory.</li>
<li>The second execution is publishing pom signature to Sonatype OSS repository.</li>
</ol>


<h4>Please note…</h4>

<p><code>publish</code> task will execute publication tasks according to the alphabetiacl order of publishing task name. And each publication task will generate POM file. So please take care of publication name. The recomending name for publications is …</p>

<ul>
<li>gpgJars &ndash; publish signatures of jar files.</li>
<li>gpgPom &ndash; publish signature of POM.</li>
<li>jar &ndash; publish all jars and POM.</li>
</ul>


<h2>Credential</h2>

<p>You may know an account of Sonatype OSS is required to upload artifact into maven central repo. Here shows settings of sonatype account in <strong>maven-publish plugin</strong>.</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">url</span> <span class="s1">&#39;https://oss.sonatype.org/service/local/staging/deploy/maven2/&#39;</span>
</span><span class='line'>        <span class="n">credentials</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">username</span> <span class="o">=</span> <span class="n">sonatypeUsername</span>
</span><span class='line'>            <span class="n">password</span> <span class="o">=</span> <span class="n">sonatypePassword</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Conclusion</h2>

<p>Taking these things in account, here is a perfect example script for publishing artifacts to maven central repo with <strong>maven-publish plugin</strong>.</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="o">[</span><span class="s1">&#39;java&#39;</span><span class="o">,</span> <span class="s1">&#39;siging&#39;</span><span class="o">,</span> <span class="s1">&#39;maven-publish&#39;</span><span class="o">].</span><span class="na">each</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">apply</span> <span class="nl">plguin:</span> <span class="n">it</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// project information</span>
</span><span class='line'><span class="n">group</span> <span class="o">=</span> <span class="s1">&#39;com.yourdomain&#39;</span>
</span><span class='line'><span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;1.0&#39;</span>
</span><span class='line'><span class="c1">// dependency management as you like</span>
</span><span class='line'><span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">mavenCentral</span> <span class="o">()</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">compile</span> <span class="s1">&#39;org.apache.commons:commons-lang3:3.1&#39;</span>
</span><span class='line'>    <span class="n">testCompile</span> <span class="s1">&#39;junit:junit:4.11&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// javadoc.jar generation</span>
</span><span class='line'><span class="n">task</span> <span class="nf">javadocJar</span> <span class="o">(</span><span class="nl">type:</span> <span class="n">Jar</span><span class="o">,</span> <span class="nl">dependsOn:</span> <span class="n">javadoc</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// (1)</span>
</span><span class='line'>    <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;javadoc&#39;</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">javadoc</span><span class="o">.</span><span class="na">destinationDir</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// sources.jar generation</span>
</span><span class='line'><span class="n">task</span> <span class="nf">sourceJar</span> <span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;sources&#39;</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">sourceSets</span><span class="o">.</span><span class="na">main</span><span class="o">.</span><span class="na">allSource</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// pom file name</span>
</span><span class='line'><span class="n">ext</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">pomFilePath</span> <span class="o">=</span> <span class="s2">&quot;${project.projectDir}/tmp/pom.xml&quot;</span>
</span><span class='line'>    <span class="n">pomFile</span> <span class="o">=</span> <span class="n">file</span><span class="o">(</span><span class="n">pomFilePath</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// add configuration for pom signing</span>
</span><span class='line'><span class="n">configurations</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">pom</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// summarize artifacts</span>
</span><span class='line'><span class="n">artifacts</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">jar</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">sourceJar</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">javadocJar</span>
</span><span class='line'>    <span class="nf">if</span> <span class="o">(</span><span class="n">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">pom</span> <span class="n">pomFile</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// sign all artifacts</span>
</span><span class='line'><span class="n">task</span> <span class="nf">signJars</span> <span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Sign</span><span class="o">,</span> <span class="nl">dependsOn:</span> <span class="o">[</span><span class="n">jar</span><span class="o">,</span> <span class="n">javadocJar</span><span class="o">,</span> <span class="n">sourceJar</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">sign</span> <span class="n">configurations</span><span class="o">.</span><span class="na">archives</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// sign pom</span>
</span><span class='line'><span class="n">task</span> <span class="nf">signPom</span><span class="o">(</span><span class="nl">type:</span> <span class="n">Sign</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">sign</span> <span class="n">configurations</span><span class="o">.</span><span class="na">pom</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// defining which tasks should be called</span>
</span><span class='line'><span class="k">if</span> <span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">task</span> <span class="nf">preparePublication</span> <span class="o">(</span><span class="n">dependsOn</span> <span class="o">:</span> <span class="o">[</span><span class="n">signJars</span><span class="o">,</span> <span class="n">signPom</span><span class="o">])</span>
</span><span class='line'><span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">task</span> <span class="nf">preparePublication</span> <span class="o">(</span><span class="n">dependsOn</span> <span class="o">:</span> <span class="n">signJars</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// extract signatures and add classifier and extension to them</span>
</span><span class='line'><span class="kt">def</span> <span class="n">getSignatureFiles</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">allFiles</span> <span class="o">=</span> <span class="n">project</span><span class="o">.</span><span class="na">tasks</span><span class="o">.</span><span class="na">signJars</span><span class="o">.</span><span class="na">signatureFiles</span><span class="o">.</span><span class="na">collect</span> <span class="o">{</span> <span class="n">it</span> <span class="o">}</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">signedSources</span> <span class="o">=</span> <span class="n">allFiles</span><span class="o">.</span><span class="na">find</span> <span class="o">{</span> <span class="n">it</span><span class="o">.</span><span class="na">name</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s1">&#39;-sources&#39;</span><span class="o">)</span> <span class="o">}</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">signedJavadoc</span> <span class="o">=</span> <span class="n">allFiles</span><span class="o">.</span><span class="na">find</span> <span class="o">{</span> <span class="n">it</span><span class="o">.</span><span class="na">name</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s1">&#39;-javadoc&#39;</span><span class="o">)</span> <span class="o">}</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">signedJar</span> <span class="o">=</span> <span class="o">(</span><span class="n">allFiles</span> <span class="o">-</span> <span class="o">[</span><span class="n">signedSources</span><span class="o">,</span> <span class="n">signedJavadoc</span><span class="o">])[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">[</span>
</span><span class='line'>            <span class="o">[</span><span class="nl">archive:</span> <span class="n">signedSources</span><span class="o">,</span> <span class="nl">classifier:</span> <span class="s1">&#39;sources&#39;</span><span class="o">,</span> <span class="nl">extension:</span> <span class="s1">&#39;jar.asc&#39;</span><span class="o">],</span>
</span><span class='line'>            <span class="o">[</span><span class="nl">archive:</span> <span class="n">signedJavadoc</span><span class="o">,</span> <span class="nl">classifier:</span> <span class="s1">&#39;javadoc&#39;</span><span class="o">,</span> <span class="nl">extension:</span> <span class="s1">&#39;jar.asc&#39;</span><span class="o">],</span>
</span><span class='line'>            <span class="o">[</span><span class="nl">archive:</span> <span class="n">signedJar</span><span class="o">,</span>     <span class="nl">classifier:</span> <span class="kc">null</span><span class="o">,</span>      <span class="nl">extension:</span> <span class="s1">&#39;jar.asc&#39;</span><span class="o">]</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// extract pom signature</span>
</span><span class='line'><span class="kt">def</span> <span class="n">getPomSignature</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">project</span><span class="o">.</span><span class="na">tasks</span><span class="o">.</span><span class="na">signPom</span><span class="o">.</span><span class="na">signatureFiles</span><span class="o">.</span><span class="na">collect</span><span class="o">{</span><span class="n">it</span><span class="o">}[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publicaitons</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">gpgJars</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">getSignatureFiles</span><span class="o">().</span><span class="na">each</span> <span class="o">{</span><span class="n">signature</span> <span class="o">-&gt;</span>
</span><span class='line'>                <span class="n">artifact</span> <span class="o">(</span><span class="n">signature</span><span class="o">.</span><span class="na">archive</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">classifier</span> <span class="o">=</span> <span class="n">signature</span><span class="o">.</span><span class="na">classifier</span>
</span><span class='line'>                    <span class="n">extension</span>  <span class="o">=</span> <span class="n">signature</span><span class="o">.</span><span class="na">extension</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">gpgPom</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">artifact</span> <span class="o">(</span><span class="n">getPomSignature</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">classifier</span> <span class="o">=</span> <span class="kc">null</span>
</span><span class='line'>                    <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;pom.asc&#39;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">jar</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">from</span> <span class="n">components</span><span class="o">.</span><span class="na">java</span>
</span><span class='line'>            <span class="n">pom</span><span class="o">.</span><span class="na">withXml</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">asNode</span><span class="o">().</span><span class="na">children</span><span class="o">().</span><span class="na">last</span><span class="o">()</span> <span class="o">+</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">resolveStrategy</span> <span class="o">=</span> <span class="n">Closure</span><span class="o">.</span><span class="na">DELEGATE_FIRST</span>
</span><span class='line'>                    <span class="n">name</span> <span class="s1">&#39;project-name&#39;</span>
</span><span class='line'>                    <span class="n">description</span> <span class="s1">&#39;description for project&#39;</span>
</span><span class='line'>                    <span class="n">url</span> <span class="n">projectUrl</span>
</span><span class='line'>                    <span class="n">scm</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">url</span> <span class="n">scmUrl</span>
</span><span class='line'>                        <span class="n">connection</span> <span class="n">connectionUrl</span>
</span><span class='line'>                        <span class="n">developerConnection</span> <span class="n">developerConnectionUrl</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                    <span class="n">licenses</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">license</span> <span class="o">{</span>
</span><span class='line'>                            <span class="n">name</span> <span class="s1">&#39;The Apache Software License, Version 2.0&#39;</span>
</span><span class='line'>                            <span class="n">url</span> <span class="s1">&#39;http://www.apache.org/license/LICENSE-2.0.txt&#39;</span>
</span><span class='line'>                            <span class="n">distribution</span> <span class="s1">&#39;repo&#39;</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                    <span class="n">developers</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">developer</span> <span class="o">{</span>
</span><span class='line'>                            <span class="n">id</span> <span class="s1">&#39;your id or nick name&#39;</span>
</span><span class='line'>                            <span class="n">name</span> <span class="s1">&#39;Your Name&#39;</span>
</span><span class='line'>                            <span class="n">email</span> <span class="s1">&#39;your@mail.address&#39;</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">url</span> <span class="s1">&#39;https://oss.sonatype.org/service/local/staging/deploy/maven2/&#39;</span>
</span><span class='line'>                <span class="n">credentials</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">username</span> <span class="o">=</span> <span class="n">sonatypeUsername</span>
</span><span class='line'>                    <span class="n">password</span> <span class="o">=</span> <span class="n">sonatypePassword</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">url</span> <span class="n">fileDirectory</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>and execute gradle tasks as follows</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="n">clean</span> <span class="n">pP</span> <span class="n">publish</span>
</span><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="n">clean</span> <span class="n">pP</span> <span class="n">publish</span>
</span></code></pre></td></tr></table></div></figure>


<p>… Eh? <strong>maven plugin</strong> is easier than this way? <strong>You, right!</strong></p>

<p>But this plugin will become more smart, I believe.</p>

<blockquote class="twitter-tweet"><p><a href="https://twitter.com/mike_neck">@mike_neck</a> You&#39;re doing cool stuff with &#39;maven-publish&#39;: latest gradle nightly has ability to set GAV of publication, too. Docs soon.</p>&mdash; Daz DeBoer (@dazdeboer) <a href="https://twitter.com/dazdeboer/statuses/347938407252635648">June 21, 2013</a></blockquote>


<script async src="http://mike-neck.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>




<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gradleのmaven-publishプラグインでライブラリーを発行する方法 - 1]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/19/publish-maven-artifact-with-sign-files-1/"/>
    <updated>2013-06-19T16:21:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/19/publish-maven-artifact-with-sign-files-1</id>
    <content type="html"><![CDATA[<p><img src="http://www.gradle.org/forum-assets/images/gradle_logo.gif"/></p>

<p>こんにちわ、みけです。</p>

<p>ここ数日、gradleのmaven-publishプラグインにはまっていたので、</p>

<p>そのメモです。</p>

<p>なお、例によって長い記事なので、完成されたbuild.gradleだけ見たい方は、いっちばん下に行って下さい。</p>

<p>ただし、完成されたbuild.gradle読んでも理解できないと思いますけどね。</p>

<h1>maven-publishプラグインについて</h1>

<p>以下のとおりにメモしていきます。</p>

<ul>
<li>maven-publishプラグインの基礎</li>
<li>javadoc、sourcesを発行する</li>
<li>複数回、成果物を発行する</li>
<li>pomを変更する</li>
<li>PGP署名ファイルの発行</li>
<li>課題</li>
</ul>


<h2>maven-publishプラグインの基礎</h2>

<p>maven-publishプラグインは任意のファイルを</p>

<p>任意のmavenレポジトリーにアップロードすることができるプラグインです。</p>

<p>次のようなビルドスクリプトでは、以下のようなartifactを発行することができます。</p>

<ul>
<li>sample-project-1.0.jar</li>
<li>sample-project-1.0.pom</li>
<li>sample-project-1.0-doc.html</li>
</ul>


<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="s1">&#39;java&#39;</span>
</span><span class='line'><span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="s1">&#39;maven-publish&#39;</span>
</span><span class='line'><span class="c1">// project information</span>
</span><span class='line'><span class="n">group</span> <span class="o">=</span> <span class="s1">&#39;org.mikeneck.sample&#39;</span>
</span><span class='line'><span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;1.0&#39;</span>
</span><span class='line'><span class="c1">// publishing description</span>
</span><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">sample</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">from</span> <span class="n">components</span><span class="o">.</span><span class="na">java</span>
</span><span class='line'>            <span class="nf">artifact</span> <span class="o">(</span><span class="s1">&#39;document.html&#39;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;doc&#39;</span>
</span><span class='line'>                <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;html&#39;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">maven</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">url</span> <span class="s1">&#39;file://Users/mike/maven-sample-repo&#39;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>また、これらに付随して、それぞれのファイルのmd5ファイルとsha1ファイルも作成されます。</p>

<p>実際に実行してみます。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="n">clean</span> <span class="n">test</span> <span class="n">publish</span>
</span><span class='line'><span class="o">:</span><span class="n">clean</span> <span class="n">UP</span><span class="o">-</span><span class="n">TO</span><span class="o">-</span><span class="n">DATE</span>
</span><span class='line'><span class="o">:</span><span class="n">compileJava</span>
</span><span class='line'><span class="o">:</span><span class="n">processResources</span> <span class="n">UP</span><span class="o">-</span><span class="n">TO</span><span class="o">-</span><span class="n">DATE</span>
</span><span class='line'><span class="o">:</span><span class="n">classes</span>
</span><span class='line'><span class="o">:</span><span class="n">compileTestJava</span>
</span><span class='line'><span class="o">:</span><span class="n">processTestResources</span> <span class="n">UP</span><span class="o">-</span><span class="n">TO</span><span class="o">-</span><span class="n">DATE</span>
</span><span class='line'><span class="o">:</span><span class="n">testClasses</span>
</span><span class='line'><span class="o">:</span><span class="n">test</span>
</span><span class='line'><span class="o">:</span><span class="n">generatePomFileForSamplePublication</span>
</span><span class='line'><span class="o">:</span><span class="n">jar</span>
</span><span class='line'><span class="o">:</span><span class="n">publishSamplePublicationToMavenRepository</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0.jar to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">maven</span><span class="o">-</span><span class="n">sample</span><span class="o">-</span><span class="n">repo</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">1</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">1</span><span class="n">K</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0-doc.html to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">maven</span><span class="o">-</span><span class="n">sample</span><span class="o">-</span><span class="n">repo</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">0</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">0</span><span class="n">K</span>
</span><span class='line'><span class="o">:</span><span class="n">publish</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUILD</span> <span class="n">SUCCESSFUL</span>
</span><span class='line'>
</span><span class='line'><span class="n">Total</span> <span class="nl">time:</span> <span class="mf">18.255</span> <span class="n">secs</span>
</span></code></pre></td></tr></table></div></figure>


<p>pomファイルが発行されたのかどうかよくわかりませんが、</p>

<p>実際に発行されたディレクトリーを見てみます。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">cd</span> <span class="s">/Users/</span><span class="n">mike</span><span class="s">/maven-sample-repo/</span><span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span>
</span><span class='line'><span class="n">$</span> <span class="n">ls</span>
</span><span class='line'><span class="n">sample</span><span class="o">-</span><span class="n">project</span>
</span><span class='line'><span class="n">$</span> <span class="n">cd</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/</span>
</span><span class='line'><span class="s">$ ls</span>
</span><span class='line'><span class="s">1.0    maven-metadata.xml    maven-metadata.xml.md5    maven-metadata.xml.sha1</span>
</span><span class='line'><span class="s">$ cd 1.0/</span>
</span><span class='line'><span class="n">$</span> <span class="n">ls</span>
</span><span class='line'><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">doc</span><span class="o">.</span><span class="na">html</span>       <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">jar</span>      <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">pom</span>
</span><span class='line'><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">doc</span><span class="o">.</span><span class="na">html</span><span class="o">.</span><span class="na">md5</span>  <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">md5</span>  <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">pom</span><span class="o">.</span><span class="na">md5</span>
</span><span class='line'><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">doc</span><span class="o">.</span><span class="na">html</span><span class="o">.</span><span class="na">sha1</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">sha1</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">pom</span><span class="o">.</span><span class="na">sha1</span>
</span></code></pre></td></tr></table></div></figure>


<p>ということでコマンドを実行したあとの標準出力にはpomについての記述はありませんが、</p>

<p>ちゃんと発行されています。</p>

<h3>規約</h3>

<p>maven-publishプラグインでは以下のようなルールがあります。</p>

<ul>
<li>基本的なartifact名はproject名(ディレクトリの名前) + version番号</li>
<li><code>classifier</code>に指定された文字列は上記のファイル名の最後に付与される</li>
<li><code>extension</code>で指定された文字列は拡張子として付与される</li>
<li><code>classifier</code> + <code>extension</code>での一意性のチェックが行われる</li>
</ul>


<h2>javadoc、sourcesを発行する</h2>

<p>では、先ほどのサンプルに、ソースとjavadocを付与してみます。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="s1">&#39;java&#39;</span>
</span><span class='line'><span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="s1">&#39;maven-publish&#39;</span>
</span><span class='line'><span class="c1">// project information</span>
</span><span class='line'><span class="n">group</span> <span class="o">=</span> <span class="s1">&#39;org.mikeneck.sample&#39;</span>
</span><span class='line'><span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;1.0&#39;</span>
</span><span class='line'><span class="c1">// zip sources</span>
</span><span class='line'><span class="n">task</span> <span class="nf">sourceJar</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">sourceSets</span><span class="o">.</span><span class="na">main</span><span class="o">.</span><span class="na">allJava</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// zip javadocs</span>
</span><span class='line'><span class="n">task</span> <span class="nf">javadocJar</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">,</span> <span class="n">dependsOn</span> <span class="o">:</span> <span class="n">javadoc</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">javadoc</span><span class="o">.</span><span class="na">destinationDir</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// publishing description</span>
</span><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">sample</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">from</span> <span class="n">components</span><span class="o">.</span><span class="na">java</span>
</span><span class='line'>            <span class="nf">artifact</span> <span class="o">(</span><span class="s1">&#39;document.html&#39;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;doc&#39;</span>
</span><span class='line'>                <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;html&#39;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">artifact</span> <span class="n">sourceJar</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;sources&#39;</span>
</span><span class='line'>                <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;jar&#39;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">artifact</span> <span class="n">javadocJar</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;javadoc&#39;</span>
</span><span class='line'>                <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;jar&#39;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">maven</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">url</span> <span class="s1">&#39;file://Users/mike/maven-sample-repo&#39;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>DSLによれば、メソッド<code>artifact</code>にはtaskを引数にとることができ、指定したtaskの成果物を発行することができます。</p>

<p>上記の例では、<code>sourceJar</code>タスクによってjarファイルに固められたソースと、</p>

<p><code>javadocJar</code>タスクに寄ってjarファイルに固められたjavadocが、</p>

<p>発行されるようになります。</p>

<p>では、実行してみましょう。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="n">clean</span> <span class="n">test</span> <span class="n">publish</span>
</span><span class='line'><span class="o">:</span><span class="n">clean</span>
</span><span class='line'><span class="o">:</span><span class="n">compileJava</span>
</span><span class='line'><span class="o">:</span><span class="n">processResources</span> <span class="n">UP</span><span class="o">-</span><span class="n">TO</span><span class="o">-</span><span class="n">DATE</span>
</span><span class='line'><span class="o">:</span><span class="n">classes</span>
</span><span class='line'><span class="o">:</span><span class="n">compileTestJava</span>
</span><span class='line'><span class="o">:</span><span class="n">processTestResources</span> <span class="n">UP</span><span class="o">-</span><span class="n">TO</span><span class="o">-</span><span class="n">DATE</span>
</span><span class='line'><span class="o">:</span><span class="n">testClasses</span>
</span><span class='line'><span class="o">:</span><span class="n">test</span>
</span><span class='line'><span class="o">:</span><span class="n">generatePomFileForSamplePublication</span>
</span><span class='line'><span class="o">:</span><span class="n">jar</span>
</span><span class='line'><span class="o">:</span><span class="n">javadoc</span>
</span><span class='line'><span class="o">:</span><span class="n">javadocJar</span>
</span><span class='line'><span class="o">:</span><span class="n">sourceJar</span>
</span><span class='line'><span class="o">:</span><span class="n">publishSamplePublicationToMavenRepository</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0.jar to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">maven</span><span class="o">-</span><span class="n">sample</span><span class="o">-</span><span class="n">repo</span><span class="s">/</span>
</span><span class='line'><span class="s">Transferring 1K from remote</span>
</span><span class='line'><span class="s">Uploaded 1K</span>
</span><span class='line'><span class="s">Uploading: org/</span><span class="n">mikeneck</span><span class="s">/sample/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/1.0/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">doc</span><span class="o">.</span><span class="na">html</span> <span class="n">to</span> <span class="n">repository</span> <span class="n">remote</span> <span class="n">at</span> <span class="nl">file:</span><span class="s">/Users/</span><span class="n">mike</span><span class="s">/maven-sample-repo/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">0</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">0</span><span class="n">K</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0-sources.jar to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">maven</span><span class="o">-</span><span class="n">sample</span><span class="o">-</span><span class="n">repo</span><span class="s">/</span>
</span><span class='line'><span class="s">Transferring 1K from remote</span>
</span><span class='line'><span class="s">Uploaded 1K</span>
</span><span class='line'><span class="s">Uploading: org/</span><span class="n">mikeneck</span><span class="s">/sample/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/1.0/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">javadoc</span><span class="o">.</span><span class="na">jar</span> <span class="n">to</span> <span class="n">repository</span> <span class="n">remote</span> <span class="n">at</span> <span class="nl">file:</span><span class="s">/Users/</span><span class="n">mike</span><span class="s">/maven-sample-repo/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">33</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">33</span><span class="n">K</span>
</span><span class='line'><span class="o">:</span><span class="n">publish</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUILD</span> <span class="n">SUCCESSFUL</span>
</span><span class='line'>
</span><span class='line'><span class="n">Total</span> <span class="nl">time:</span> <span class="mf">25.84</span> <span class="n">secs</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記の標準出力からソースとjavadocが出力されていることがわかります。</p>

<p>実際に出力されたファイルを確認してみます。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">cd</span> <span class="s">/Users/</span><span class="n">mike</span><span class="s">/maven-sample-repo/</span><span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span>
</span><span class='line'><span class="n">$</span> <span class="n">ls</span> <span class="o">-</span><span class="n">la</span>
</span><span class='line'><span class="n">total</span> <span class="mi">184</span>
</span><span class='line'><span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>  <span class="mi">17</span> <span class="n">mike</span>  <span class="n">mike</span>   <span class="mi">578</span><span class="n">B</span>  <span class="mi">6</span> <span class="mi">19</span> <span class="mi">17</span><span class="o">:</span><span class="mi">40</span> <span class="o">.</span>
</span><span class='line'><span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span>   <span class="mi">6</span> <span class="n">mike</span>  <span class="n">mike</span>   <span class="mi">204</span><span class="n">B</span>  <span class="mi">6</span> <span class="mi">19</span> <span class="mi">17</span><span class="o">:</span><span class="mi">05</span> <span class="o">..</span>
</span><span class='line'><span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--</span>   <span class="mi">1</span> <span class="n">mike</span>  <span class="n">mike</span>   <span class="mi">346</span><span class="n">B</span>  <span class="mi">6</span> <span class="mi">19</span> <span class="mi">17</span><span class="o">:</span><span class="mi">40</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">doc</span><span class="o">.</span><span class="na">html</span>
</span><span class='line'><span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--</span>   <span class="mi">1</span> <span class="n">mike</span>  <span class="n">mike</span>    <span class="mi">32</span><span class="n">B</span>  <span class="mi">6</span> <span class="mi">19</span> <span class="mi">17</span><span class="o">:</span><span class="mi">40</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">doc</span><span class="o">.</span><span class="na">html</span><span class="o">.</span><span class="na">md5</span>
</span><span class='line'><span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--</span>   <span class="mi">1</span> <span class="n">mike</span>  <span class="n">mike</span>    <span class="mi">40</span><span class="n">B</span>  <span class="mi">6</span> <span class="mi">19</span> <span class="mi">17</span><span class="o">:</span><span class="mi">40</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">doc</span><span class="o">.</span><span class="na">html</span><span class="o">.</span><span class="na">sha1</span>
</span><span class='line'><span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--</span>   <span class="mi">1</span> <span class="n">mike</span>  <span class="n">mike</span>    <span class="mi">33</span><span class="n">K</span>  <span class="mi">6</span> <span class="mi">19</span> <span class="mi">17</span><span class="o">:</span><span class="mi">40</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">javadoc</span><span class="o">.</span><span class="na">jar</span>
</span><span class='line'><span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--</span>   <span class="mi">1</span> <span class="n">mike</span>  <span class="n">mike</span>    <span class="mi">32</span><span class="n">B</span>  <span class="mi">6</span> <span class="mi">19</span> <span class="mi">17</span><span class="o">:</span><span class="mi">40</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">javadoc</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">md5</span>
</span><span class='line'><span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--</span>   <span class="mi">1</span> <span class="n">mike</span>  <span class="n">mike</span>    <span class="mi">40</span><span class="n">B</span>  <span class="mi">6</span> <span class="mi">19</span> <span class="mi">17</span><span class="o">:</span><span class="mi">40</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">javadoc</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">sha1</span>
</span><span class='line'><span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--</span>   <span class="mi">1</span> <span class="n">mike</span>  <span class="n">mike</span>   <span class="mi">927</span><span class="n">B</span>  <span class="mi">6</span> <span class="mi">19</span> <span class="mi">17</span><span class="o">:</span><span class="mi">40</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">sources</span><span class="o">.</span><span class="na">jar</span>
</span><span class='line'><span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--</span>   <span class="mi">1</span> <span class="n">mike</span>  <span class="n">mike</span>    <span class="mi">32</span><span class="n">B</span>  <span class="mi">6</span> <span class="mi">19</span> <span class="mi">17</span><span class="o">:</span><span class="mi">40</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">sources</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">md5</span>
</span><span class='line'><span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--</span>   <span class="mi">1</span> <span class="n">mike</span>  <span class="n">mike</span>    <span class="mi">40</span><span class="n">B</span>  <span class="mi">6</span> <span class="mi">19</span> <span class="mi">17</span><span class="o">:</span><span class="mi">40</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">sources</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">sha1</span>
</span><span class='line'><span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--</span>   <span class="mi">1</span> <span class="n">mike</span>  <span class="n">mike</span>   <span class="mf">1.1</span><span class="n">K</span>  <span class="mi">6</span> <span class="mi">19</span> <span class="mi">17</span><span class="o">:</span><span class="mi">40</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">jar</span>
</span><span class='line'><span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--</span>   <span class="mi">1</span> <span class="n">mike</span>  <span class="n">mike</span>    <span class="mi">32</span><span class="n">B</span>  <span class="mi">6</span> <span class="mi">19</span> <span class="mi">17</span><span class="o">:</span><span class="mi">40</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">md5</span>
</span><span class='line'><span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--</span>   <span class="mi">1</span> <span class="n">mike</span>  <span class="n">mike</span>    <span class="mi">40</span><span class="n">B</span>  <span class="mi">6</span> <span class="mi">19</span> <span class="mi">17</span><span class="o">:</span><span class="mi">40</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">sha1</span>
</span><span class='line'><span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--</span>   <span class="mi">1</span> <span class="n">mike</span>  <span class="n">mike</span>   <span class="mi">404</span><span class="n">B</span>  <span class="mi">6</span> <span class="mi">19</span> <span class="mi">17</span><span class="o">:</span><span class="mi">40</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">pom</span>
</span><span class='line'><span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--</span>   <span class="mi">1</span> <span class="n">mike</span>  <span class="n">mike</span>    <span class="mi">32</span><span class="n">B</span>  <span class="mi">6</span> <span class="mi">19</span> <span class="mi">17</span><span class="o">:</span><span class="mi">40</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">pom</span><span class="o">.</span><span class="na">md5</span>
</span><span class='line'><span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--</span>   <span class="mi">1</span> <span class="n">mike</span>  <span class="n">mike</span>    <span class="mi">40</span><span class="n">B</span>  <span class="mi">6</span> <span class="mi">19</span> <span class="mi">17</span><span class="o">:</span><span class="mi">40</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">pom</span><span class="o">.</span><span class="na">sha1</span>
</span></code></pre></td></tr></table></div></figure>


<h2>複数回、成果物を発行する</h2>

<p>これまでの例では<code>sample</code>という発行タスクにいろいろなものを詰め込んでいました。</p>

<p>たとえば、javadocだけとか、sourcesファイルだけとか発行したい場合、</p>

<p>成果物の発行タスクを切り分けたいような場面があるかと思います。</p>

<p>その場合、<code>publications</code>の下の記述を変えることで、成果物の発行タスクを分けることができます。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="s1">&#39;java&#39;</span>
</span><span class='line'><span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="s1">&#39;maven-publish&#39;</span>
</span><span class='line'><span class="c1">// project information</span>
</span><span class='line'><span class="n">group</span> <span class="o">=</span> <span class="s1">&#39;org.mikeneck.sample&#39;</span>
</span><span class='line'><span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;1.0&#39;</span>
</span><span class='line'><span class="c1">// zip sources</span>
</span><span class='line'><span class="n">task</span> <span class="nf">sourceJar</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">sourceSets</span><span class="o">.</span><span class="na">main</span><span class="o">.</span><span class="na">allJava</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// zip javadocs</span>
</span><span class='line'><span class="n">task</span> <span class="nf">javadocJar</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">,</span> <span class="n">dependsOn</span> <span class="o">:</span> <span class="n">javadoc</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">javadoc</span><span class="o">.</span><span class="na">destinationDir</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// publishing description</span>
</span><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// only java archives</span>
</span><span class='line'>        <span class="n">sample</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">from</span> <span class="n">components</span><span class="o">.</span><span class="na">java</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="c1">// publish documents</span>
</span><span class='line'>        <span class="n">documents</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">artifact</span> <span class="o">(</span><span class="s1">&#39;document.html&#39;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;doc&#39;</span>
</span><span class='line'>                <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;html&#39;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">artifact</span> <span class="n">sourceJar</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;sources&#39;</span>
</span><span class='line'>                <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;jar&#39;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">artifact</span> <span class="n">javadocJar</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;javadoc&#39;</span>
</span><span class='line'>                <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;jar&#39;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">maven</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">url</span> <span class="s1">&#39;file://Users/mike/maven-sample-repo&#39;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで、メインのjarを発行するタスクと、</p>

<p>ドキュメント類を発行するタスクを切り分けることができました。</p>

<p>実際、タスクにはどのようなものがあるか確認します。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="n">tasks</span>
</span><span class='line'><span class="o">:</span><span class="n">tasks</span>
</span><span class='line'>
</span><span class='line'><span class="o">------------------------------------------------------------</span>
</span><span class='line'><span class="n">All</span> <span class="n">tasks</span> <span class="n">runnable</span> <span class="n">from</span> <span class="n">root</span> <span class="n">project</span>
</span><span class='line'><span class="o">------------------------------------------------------------</span>
</span><span class='line'>
</span><span class='line'><span class="n">Build</span> <span class="n">tasks</span>
</span><span class='line'><span class="o">-----------</span>
</span><span class='line'><span class="n">assemble</span> <span class="o">-</span> <span class="n">Assembles</span> <span class="n">the</span> <span class="n">outputs</span> <span class="n">of</span> <span class="k">this</span> <span class="n">project</span><span class="o">.</span>
</span><span class='line'><span class="n">build</span> <span class="o">-</span> <span class="n">Assembles</span> <span class="n">and</span> <span class="n">tests</span> <span class="k">this</span> <span class="n">project</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="err">…中略…</span>
</span><span class='line'>
</span><span class='line'><span class="n">Publishing</span> <span class="n">tasks</span>
</span><span class='line'><span class="o">----------------</span>
</span><span class='line'><span class="n">publish</span> <span class="o">-</span> <span class="n">Publishes</span> <span class="n">all</span> <span class="n">publications</span> <span class="n">produced</span> <span class="n">by</span> <span class="k">this</span> <span class="n">project</span><span class="o">.</span>
</span><span class='line'><span class="n">publishDocumentsPublicationToMavenLocal</span> <span class="o">-</span> <span class="n">Publishes</span> <span class="n">Maven</span> <span class="n">publication</span> <span class="s1">&#39;documents&#39;</span> <span class="n">to</span> <span class="n">the</span> <span class="n">local</span> <span class="n">Maven</span> <span class="n">repository</span><span class="o">.</span>
</span><span class='line'><span class="n">publishDocumentsPublicationToMavenRepository</span> <span class="o">-</span> <span class="n">Publishes</span> <span class="n">Maven</span> <span class="n">publication</span> <span class="s1">&#39;documents&#39;</span> <span class="n">to</span> <span class="n">Maven</span> <span class="n">repository</span> <span class="s1">&#39;maven&#39;</span><span class="o">.</span>
</span><span class='line'><span class="n">publishSamplePublicationToMavenLocal</span> <span class="o">-</span> <span class="n">Publishes</span> <span class="n">Maven</span> <span class="n">publication</span> <span class="s1">&#39;sample&#39;</span> <span class="n">to</span> <span class="n">the</span> <span class="n">local</span> <span class="n">Maven</span> <span class="n">repository</span><span class="o">.</span>
</span><span class='line'><span class="n">publishSamplePublicationToMavenRepository</span> <span class="o">-</span> <span class="n">Publishes</span> <span class="n">Maven</span> <span class="n">publication</span> <span class="s1">&#39;sample&#39;</span> <span class="n">to</span> <span class="n">Maven</span> <span class="n">repository</span> <span class="s1">&#39;maven&#39;</span><span class="o">.</span>
</span><span class='line'><span class="n">publishToMavenLocal</span> <span class="o">-</span> <span class="n">Publishes</span> <span class="n">all</span> <span class="n">Maven</span> <span class="n">publications</span> <span class="n">produced</span> <span class="n">by</span> <span class="k">this</span> <span class="n">project</span> <span class="n">to</span> <span class="n">the</span> <span class="n">local</span> <span class="n">Maven</span> <span class="n">cache</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="err">…中略…</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUILD</span> <span class="n">SUCCESSFUL</span>
</span><span class='line'>
</span><span class='line'><span class="n">Total</span> <span class="nl">time:</span> <span class="mf">21.853</span> <span class="n">secs</span>
</span></code></pre></td></tr></table></div></figure>


<p>Publishing tasksには次のようなエントリーが入っています。</p>

<ul>
<li><code>publish</code> すべてを指定したレポジトリーに発行する</li>
<li><code>publicDocumentsPublication…</code> <code>documents</code>で指定したアーカイブを発行します。</li>
<li><code>publishSamplePublication…</code> <code>sample</code>で指定したアーカイブを発行します。</li>
<li><code>publishToMavenLocal</code> すべてをmaven localレポジトリーに発行します。</li>
</ul>


<p>という形で、<code>publishing/publications</code>で複数のアーカイブ発行を指定することで、タスクが生成されます。</p>

<p>さて、ここでは、<code>publish</code>タスクを実行してみたいと思います。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="n">clean</span> <span class="n">test</span> <span class="n">publish</span>
</span><span class='line'><span class="o">:</span><span class="n">clean</span>
</span><span class='line'><span class="o">:</span><span class="n">compileJava</span>
</span><span class='line'><span class="o">:</span><span class="n">processResources</span> <span class="n">UP</span><span class="o">-</span><span class="n">TO</span><span class="o">-</span><span class="n">DATE</span>
</span><span class='line'><span class="o">:</span><span class="n">classes</span>
</span><span class='line'><span class="o">:</span><span class="n">compileTestJava</span>
</span><span class='line'><span class="o">:</span><span class="n">processTestResources</span> <span class="n">UP</span><span class="o">-</span><span class="n">TO</span><span class="o">-</span><span class="n">DATE</span>
</span><span class='line'><span class="o">:</span><span class="n">testClasses</span>
</span><span class='line'><span class="o">:</span><span class="n">test</span>
</span><span class='line'><span class="o">:</span><span class="n">generatePomFileForDocumentsPublication</span>
</span><span class='line'><span class="o">:</span><span class="n">javadoc</span>
</span><span class='line'><span class="o">:</span><span class="n">javadocJar</span>
</span><span class='line'><span class="o">:</span><span class="n">sourceJar</span>
</span><span class='line'><span class="o">:</span><span class="n">publishDocumentsPublicationToMavenRepository</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0.pom to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">maven</span><span class="o">-</span><span class="n">sample</span><span class="o">-</span><span class="n">repo</span><span class="s">/</span>
</span><span class='line'><span class="s">Transferring 0K from remote</span>
</span><span class='line'><span class="s">Uploaded 0K</span>
</span><span class='line'><span class="s">Uploading: org/</span><span class="n">mikeneck</span><span class="s">/sample/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/1.0/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">doc</span><span class="o">.</span><span class="na">html</span> <span class="n">to</span> <span class="n">repository</span> <span class="n">remote</span> <span class="n">at</span> <span class="nl">file:</span><span class="s">/Users/</span><span class="n">mike</span><span class="s">/maven-sample-repo/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">0</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">0</span><span class="n">K</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0-sources.jar to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">maven</span><span class="o">-</span><span class="n">sample</span><span class="o">-</span><span class="n">repo</span><span class="s">/</span>
</span><span class='line'><span class="s">Transferring 1K from remote</span>
</span><span class='line'><span class="s">Uploaded 1K</span>
</span><span class='line'><span class="s">Uploading: org/</span><span class="n">mikeneck</span><span class="s">/sample/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/1.0/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">javadoc</span><span class="o">.</span><span class="na">jar</span> <span class="n">to</span> <span class="n">repository</span> <span class="n">remote</span> <span class="n">at</span> <span class="nl">file:</span><span class="s">/Users/</span><span class="n">mike</span><span class="s">/maven-sample-repo/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">33</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">33</span><span class="n">K</span>
</span><span class='line'><span class="o">:</span><span class="n">generatePomFileForSamplePublication</span>
</span><span class='line'><span class="o">:</span><span class="n">jar</span>
</span><span class='line'><span class="o">:</span><span class="n">publishSamplePublicationToMavenRepository</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0.jar to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">maven</span><span class="o">-</span><span class="n">sample</span><span class="o">-</span><span class="n">repo</span><span class="o">/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">1</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">1</span><span class="n">K</span>
</span><span class='line'><span class="o">:</span><span class="n">publish</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUILD</span> <span class="n">SUCCESSFUL</span>
</span><span class='line'>
</span><span class='line'><span class="n">Total</span> <span class="nl">time:</span> <span class="mf">12.33</span> <span class="n">secs</span>
</span></code></pre></td></tr></table></div></figure>


<p>標準出力を見るとわかりますが、<strong>アルファベット順</strong>にタスクが実行されます。</p>

<p>そして、もう一つ気になるところがありますね。</p>

<p>各タスクの前に、<code>generatePomFileFor[タスク名]</code>というタスクが実行されています。</p>

<p>これらが発行するpomは何かを調べてみます。</p>

<p>まず、すこしスクリプトを変更します。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="s1">&#39;java&#39;</span>
</span><span class='line'><span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="s1">&#39;maven-publish&#39;</span>
</span><span class='line'><span class="c1">// project information</span>
</span><span class='line'><span class="n">group</span> <span class="o">=</span> <span class="s1">&#39;org.mikeneck.sample&#39;</span>
</span><span class='line'><span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;1.0&#39;</span>
</span><span class='line'><span class="c1">// repositories</span>
</span><span class='line'><span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">mavenCentral</span> <span class="o">()</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// dependencies</span>
</span><span class='line'><span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">compile</span> <span class="s1">&#39;org.jsoup:jsoup:1.6.3&#39;</span>
</span><span class='line'>    <span class="n">testCompile</span> <span class="s1">&#39;junit:junit:4.11&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// zip sources</span>
</span><span class='line'><span class="n">task</span> <span class="nf">sourceJar</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">sourceSets</span><span class="o">.</span><span class="na">main</span><span class="o">.</span><span class="na">allJava</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// zip javadocs</span>
</span><span class='line'><span class="n">task</span> <span class="nf">javadocJar</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">,</span> <span class="n">dependsOn</span> <span class="o">:</span> <span class="n">javadoc</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">javadoc</span><span class="o">.</span><span class="na">destinationDir</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// publishing description</span>
</span><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">sample</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">from</span> <span class="n">components</span><span class="o">.</span><span class="na">java</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">documents</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">artifact</span> <span class="o">(</span><span class="s1">&#39;document.html&#39;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;doc&#39;</span>
</span><span class='line'>                <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;html&#39;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">artifact</span> <span class="n">sourceJar</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;sources&#39;</span>
</span><span class='line'>                <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;jar&#39;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">artifact</span> <span class="n">javadocJar</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;javadoc&#39;</span>
</span><span class='line'>                <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;jar&#39;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">maven</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">url</span> <span class="s1">&#39;file://Users/mike/maven-sample-repo&#39;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>dependencies</code>を追加しました。</p>

<p>この状態で、sampleの方を実行してみます。</p>

<blockquote><p>なお、このタスクの実行において、タスクの指定に省略名を使用しています。</p>

<p>gradleでは<code>publishToMavenRepository</code>のような単語の頭文字が大文字になっているタスクを</p>

<p>頭文字だけを選択して<code>pTMR</code>のように省略することができます。</p></blockquote>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="n">clean</span> <span class="n">pSPTMR</span>
</span><span class='line'><span class="o">:</span><span class="n">clean</span>
</span><span class='line'><span class="o">:</span><span class="n">generatePomFileForSamplePublication</span>
</span><span class='line'><span class="o">:</span><span class="n">compileJava</span>
</span><span class='line'><span class="o">:</span><span class="n">processResources</span> <span class="n">UP</span><span class="o">-</span><span class="n">TO</span><span class="o">-</span><span class="n">DATE</span>
</span><span class='line'><span class="o">:</span><span class="n">classes</span>
</span><span class='line'><span class="o">:</span><span class="n">jar</span>
</span><span class='line'><span class="o">:</span><span class="n">publishSamplePublicationToMavenRepository</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0.jar to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">maven</span><span class="o">-</span><span class="n">sample</span><span class="o">-</span><span class="n">repo</span><span class="o">/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">1</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">1</span><span class="n">K</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUILD</span> <span class="n">SUCCESSFUL</span>
</span><span class='line'>
</span><span class='line'><span class="n">Total</span> <span class="nl">time:</span> <span class="mf">2.498</span> <span class="n">secs</span>
</span></code></pre></td></tr></table></div></figure>


<p>さて、この結果出力されたpomは次のようになります。</p>

<figure class='code'><figcaption><span>sample-project-1.0.pom</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;project</span> <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span> <span class="na">xmlns=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0&quot;</span>
</span><span class='line'>    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>org.mikeneck.sample<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>sample-project<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>1.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;dependencies&gt;</span>
</span><span class='line'>    <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;groupId&gt;</span>org.jsoup<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;artifactId&gt;</span>jsoup<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;version&gt;</span>1.6.3<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;scope&gt;</span>runtime<span class="nt">&lt;/scope&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/dependencies&gt;</span>
</span><span class='line'><span class="nt">&lt;/project&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>一方、documentの方を実行してみます。</p>

<figure class='code'><figcaption><span>sample-project-1.0.pom</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>$ gradle clean pDPTMR
</span><span class='line'>:clean
</span><span class='line'>:generatePomFileForDocumentsPublication
</span><span class='line'>:compileJava
</span><span class='line'>:processResources UP-TO-DATE
</span><span class='line'>:classes
</span><span class='line'>:javadoc
</span><span class='line'>:javadocJar
</span><span class='line'>:sourceJar
</span><span class='line'>:publishDocumentsPublicationToMavenRepository
</span><span class='line'>Uploading: org/mikeneck/sample/sample-project/1.0/sample-project-1.0.pom to repository remote at file:/Users/mike/maven-sample-repo/
</span><span class='line'>Transferring 0K from remote
</span><span class='line'>Uploaded 0K
</span><span class='line'>Uploading: org/mikeneck/sample/sample-project/1.0/sample-project-1.0-doc.html to repository remote at file:/Users/mike/maven-sample-repo/
</span><span class='line'>Transferring 0K from remote
</span><span class='line'>Uploaded 0K
</span><span class='line'>Uploading: org/mikeneck/sample/sample-project/1.0/sample-project-1.0-sources.jar to repository remote at file:/Users/mike/maven-sample-repo/
</span><span class='line'>Transferring 1K from remote
</span><span class='line'>Uploaded 1K
</span><span class='line'>Uploading: org/mikeneck/sample/sample-project/1.0/sample-project-1.0-javadoc.jar to repository remote at file:/Users/mike/maven-sample-repo/
</span><span class='line'>Transferring 33K from remote
</span><span class='line'>Uploaded 33K
</span><span class='line'>
</span><span class='line'>BUILD SUCCESSFUL
</span><span class='line'>
</span><span class='line'>Total time: 4.961 secs
</span></code></pre></td></tr></table></div></figure>


<p>この結果出力されたpomは次のとおり、<code>&lt;dependencies&gt;</code>〜<code>&lt;/dependencies&gt;</code>の部分の記述がなくなります。</p>

<figure class='code'><figcaption><span>sample-project-1.0.pom</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;project</span> <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span> <span class="na">xmlns=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0&quot;</span>
</span><span class='line'>    <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>org.mikeneck.sample<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>sample-project<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>1.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;packaging&gt;</span>pom<span class="nt">&lt;/packaging&gt;</span>
</span><span class='line'><span class="nt">&lt;/project&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>この違いは、前者のタスクにおいてdependenciesの情報を利用するのに対して、</p>

<p>後者はdependenciesを使わないことにあると勝手に理解しています。</p>

<p>したがって、複数回にわたって成果物を発行する場合は、</p>

<p>pomの生成について気をつけなければなりません。</p>

<h2>pomを変更する</h2>

<p>前回のポストで記述した通り、maven centralに登録するライブラリーについては、</p>

<p>発行するpomにいくつか追加情報を与えなければならない場合があります。</p>

<p>また、Jettyのservletを用いる場合は、</p>

<p>jetty-orbitという存在しないartifactを避けるために、</p>

<p>直接dependencyを書けない場合などがあります。</p>

<p>そのような場合に、pomを書き換える必要が生じます。</p>

<h3>publicationコンテナのpomオブジェクトを用いる</h3>

<p>maven-publishプラグインではpublicationコンテナにて</p>

<p>pomオブジェクトを介して発行されるpomにアクセスすることができます。</p>

<p>先ほどのビルドスクリプトにpomを生成するタスクを追加します。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="s1">&#39;java&#39;</span>
</span><span class='line'><span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="s1">&#39;maven-publish&#39;</span>
</span><span class='line'><span class="c1">// project information</span>
</span><span class='line'><span class="n">group</span> <span class="o">=</span> <span class="s1">&#39;org.mikeneck.sample&#39;</span>
</span><span class='line'><span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;1.0&#39;</span>
</span><span class='line'><span class="c1">// repositories</span>
</span><span class='line'><span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">mavenCentral</span> <span class="o">()</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// dependencies</span>
</span><span class='line'><span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">compile</span> <span class="s1">&#39;org.jsoup:jsoup:1.6.3&#39;</span>
</span><span class='line'>    <span class="n">testCompile</span> <span class="s1">&#39;junit:junit:4.11&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// zip sources</span>
</span><span class='line'><span class="n">task</span> <span class="nf">sourceJar</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">sourceSets</span><span class="o">.</span><span class="na">main</span><span class="o">.</span><span class="na">allJava</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// zip javadocs</span>
</span><span class='line'><span class="n">task</span> <span class="nf">javadocJar</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">,</span> <span class="n">dependsOn</span> <span class="o">:</span> <span class="n">javadoc</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">javadoc</span><span class="o">.</span><span class="na">destinationDir</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// publishing description</span>
</span><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">sample</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">from</span> <span class="n">components</span><span class="o">.</span><span class="na">java</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">documents</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">artifact</span> <span class="o">(</span><span class="s1">&#39;document.html&#39;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;doc&#39;</span>
</span><span class='line'>                <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;html&#39;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">artifact</span> <span class="n">sourceJar</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;sources&#39;</span>
</span><span class='line'>                <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;jar&#39;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">artifact</span> <span class="n">javadocJar</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;javadoc&#39;</span>
</span><span class='line'>                <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;jar&#39;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="c1">// editing pom file with builder style</span>
</span><span class='line'>        <span class="n">pomOnly</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">pom</span><span class="o">.</span><span class="na">withXml</span> <span class="o">{</span>
</span><span class='line'>                <span class="kt">def</span> <span class="n">node</span> <span class="o">=</span> <span class="n">asNode</span><span class="o">()</span>
</span><span class='line'>                <span class="n">node</span><span class="o">.</span><span class="na">children</span><span class="o">().</span><span class="na">last</span><span class="o">()</span> <span class="o">+</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">resolveStrategy</span> <span class="o">=</span> <span class="n">Closure</span><span class="o">.</span><span class="na">DELEGATE_FIRST</span>
</span><span class='line'>                    <span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">project</span><span class="o">.</span><span class="na">configurations</span><span class="o">.</span><span class="na">compile</span><span class="o">.</span><span class="na">dependencies</span><span class="o">.</span><span class="na">each</span> <span class="o">{</span><span class="n">dep</span> <span class="o">-&gt;</span>
</span><span class='line'>                            <span class="n">dependency</span> <span class="o">{</span>
</span><span class='line'>                                <span class="n">groupId</span> <span class="n">dep</span><span class="o">.</span><span class="na">group</span>
</span><span class='line'>                                <span class="n">artifactId</span> <span class="n">dep</span><span class="o">.</span><span class="na">name</span>
</span><span class='line'>                                <span class="n">version</span> <span class="n">dep</span><span class="o">.</span><span class="na">version</span>
</span><span class='line'>                            <span class="o">}</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                    <span class="n">licenses</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">license</span> <span class="o">{</span>
</span><span class='line'>                            <span class="n">name</span> <span class="s1">&#39;The Apache Software License, Version 2.0&#39;</span>
</span><span class='line'>                            <span class="n">url</span> <span class="s1">&#39;http://www.apache.org/license/LICENSE-2.0.txt&#39;</span>
</span><span class='line'>                            <span class="n">distribution</span> <span class="s1">&#39;repo&#39;</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">maven</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">url</span> <span class="s1">&#39;file://Users/mike/maven-sample-repo&#39;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>pomオブジェクトの<code>withXml</code>メソッドの引数の<code>Closure</code>は、</p>

<p><code>org.gradle.api.XmlProvider</code>のメソッドを呼び出すことができます。</p>

<p>そして、<code>asNode()</code>メソッドによりpomファイルを<code>groovy.util.Node</code>の形で取得出来ます。</p>

<p><code>asNode()</code>で返ってくる<code>Node</code>の一番トップの部分は<code>&lt;project&gt;</code>要素です。</p>

<p>この要素の子要素を取得し、最後の要素に<code>plus</code>メソッドで要素を追加します。</p>

<p>追加する<code>Closure</code>は、<code>groovy.util.NodeBuilder</code>と同等のDSLによって、</p>

<p>pomに要素を追加していくことができます。</p>

<p>では、このタスクを実行してみます。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="n">clean</span> <span class="n">pPOPTMR</span>
</span><span class='line'><span class="o">:</span><span class="n">clean</span>
</span><span class='line'><span class="o">:</span><span class="n">generatePomFileForPomOnlyPublication</span>
</span><span class='line'><span class="o">:</span><span class="n">publishPomOnlyPublicationToMavenRepository</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0.pom to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">maven</span><span class="o">-</span><span class="n">sample</span><span class="o">-</span><span class="n">repo</span><span class="o">/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">1</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">1</span><span class="n">K</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUILD</span> <span class="n">SUCCESSFUL</span>
</span><span class='line'>
</span><span class='line'><span class="n">Total</span> <span class="nl">time:</span> <span class="mf">5.813</span> <span class="n">secs</span>
</span></code></pre></td></tr></table></div></figure>


<p>発行されたpomファイルは次のようになります。</p>

<figure class='code'><figcaption><span>sample-project-1.0.pom</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span> <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>org.mikeneck.sample<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>sample-project<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>1.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;packaging&gt;</span>pom<span class="nt">&lt;/packaging&gt;</span>
</span><span class='line'>  <span class="nt">&lt;dependencies&gt;</span>
</span><span class='line'>    <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;groupId&gt;</span>org.jsoup<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;artifactId&gt;</span>jsoup<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;version&gt;</span>1.6.3<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/dependencies&gt;</span>
</span><span class='line'>  <span class="nt">&lt;licenses&gt;</span>
</span><span class='line'>    <span class="nt">&lt;license&gt;</span>
</span><span class='line'>      <span class="nt">&lt;name&gt;</span>The Apache Software License, Version 2.0<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;url&gt;</span>http://www.apache.org/license/LICENSE-2.0.txt<span class="nt">&lt;/url&gt;</span>
</span><span class='line'>      <span class="nt">&lt;distribution&gt;</span>repo<span class="nt">&lt;/distribution&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/license&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/licenses&gt;</span>
</span><span class='line'><span class="nt">&lt;/project&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>PGP署名ファイルの発行</h2>

<p>少し話題が飛びますが、</p>

<p>maven central repositoryにライブラリーを発行する場合、</p>

<p>各アーカイブファイルとpomファイルに対してPGP(Pretty Good Privacy)署名が必要となります。</p>

<h3>PGP署名って…？</h3>

<p>PGP署名を簡単に説明すると以下のようになります。</p>

<ul>
<li>配布物を元に、配布元で非公開鍵で暗号化して署名を作る</li>
<li>受け取り側で署名に対して公開鍵で復号化したものと、配布物とを比較する</li>
<li>一致していれば配布物が正しいもの(改ざんされていない)と判定される</li>
</ul>


<p>というファイルの信頼性を確認する仕組みです。</p>

<p>なお、PGPツールとしては、PGPの仕様RFC4880に準拠した、</p>

<p><a href="http://www.gnupg.org">GnuPG(Gnu Privacy Guard)</a>を使うのが一般的なようです。</p>

<p>なお、GnuPGの現在のバージョンは2.0です。</p>

<p>また、Javaでの実装ではBCPGが有名です。</p>

<p>また、gradle本題も<code>bcpg-jdk15-1.46</code>を利用しています。</p>

<p><a href="https://googledrive.com/host/0B4hhdHWLP7RRNzktQnBvNjBnZE0"><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRNzktQnBvNjBnZE0" style="width : 300px;"/></a></p>

<h3>署名タスクを作成する</h3>

<p>mavenプラグイン + signプラグインであれば、以下の様な記述で署名を作成することが可能です。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="o">[</span><span class="s1">&#39;maven&#39;</span><span class="o">,</span> <span class="s1">&#39;signing&#39;</span><span class="o">].</span><span class="na">each</span> <span class="o">{</span><span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="n">it</span><span class="o">}</span>
</span><span class='line'><span class="n">artifacts</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">jar</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">signing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">sign</span> <span class="n">configurations</span><span class="o">.</span><span class="na">archives</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>しかし、maven-publishプラグインでは、明示的に署名ファイルも取り扱いたいので、</p>

<p>一工夫が必要になります。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="c1">// plugins see(1)</span>
</span><span class='line'><span class="o">[</span><span class="s1">&#39;maven-publish&#39;</span><span class="o">,</span> <span class="s1">&#39;signing&#39;</span><span class="o">].</span><span class="na">each</span> <span class="o">{</span><span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="n">it</span><span class="o">}</span>
</span><span class='line'><span class="c1">// zip sources. see(4)</span>
</span><span class='line'><span class="n">task</span> <span class="nf">sourceJar</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">sourceSets</span><span class="o">.</span><span class="na">main</span><span class="o">.</span><span class="na">allJava</span>
</span><span class='line'>    <span class="c1">// add classifier to jar file</span>
</span><span class='line'>    <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;sources&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// zip javadocs. see(4)</span>
</span><span class='line'><span class="n">task</span> <span class="nf">javadocJar</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">,</span> <span class="n">dependsOn</span> <span class="o">:</span> <span class="n">javadoc</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">javadoc</span><span class="o">.</span><span class="na">destinationDir</span>
</span><span class='line'>    <span class="c1">// add classifier to jar file</span>
</span><span class='line'>    <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;javadoc&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// collect artifacts. see(3)</span>
</span><span class='line'><span class="n">artifacts</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">jar</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">sourceJar</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">javadocJar</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// sign task. see(2)</span>
</span><span class='line'><span class="n">task</span> <span class="nf">signArchives</span> <span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Sign</span><span class="o">,</span> <span class="n">dependsOn</span> <span class="o">:</span> <span class="o">[</span><span class="n">jar</span><span class="o">,</span> <span class="n">sourceJar</span><span class="o">,</span> <span class="n">javadocJar</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">sign</span> <span class="n">configurations</span><span class="o">.</span><span class="na">archives</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// execute sign task. see(7)</span>
</span><span class='line'><span class="n">task</span> <span class="nf">preparePublication</span> <span class="o">(</span><span class="n">dependsOn</span> <span class="o">:</span> <span class="n">signArchives</span><span class="o">)</span>
</span><span class='line'><span class="c1">// extracting signature files with classifier and extension. see(5)</span>
</span><span class='line'><span class="kt">def</span> <span class="n">getSignatureFiles</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">allFiles</span> <span class="o">=</span> <span class="n">tasks</span><span class="o">.</span><span class="na">signArchives</span><span class="o">.</span><span class="na">signatureFiles</span><span class="o">.</span><span class="na">collect</span><span class="o">{</span><span class="n">it</span><span class="o">}</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">signedSources</span> <span class="o">=</span> <span class="n">allFiles</span><span class="o">.</span><span class="na">find</span> <span class="o">{</span> <span class="n">it</span><span class="o">.</span><span class="na">name</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s1">&#39;-sources&#39;</span><span class="o">)</span> <span class="o">}</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">signedJavadoc</span> <span class="o">=</span> <span class="n">allFiles</span><span class="o">.</span><span class="na">find</span> <span class="o">{</span> <span class="n">it</span><span class="o">.</span><span class="na">name</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s1">&#39;-javadoc&#39;</span><span class="o">)</span> <span class="o">}</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">signedJar</span> <span class="o">=</span> <span class="o">(</span><span class="n">allFiles</span> <span class="o">-</span> <span class="o">[</span><span class="n">signedSources</span><span class="o">,</span> <span class="n">signedJavadoc</span><span class="o">])[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">[</span>
</span><span class='line'>            <span class="o">[</span><span class="nl">archive:</span> <span class="n">signedSources</span><span class="o">,</span> <span class="nl">classifier:</span> <span class="s1">&#39;sources&#39;</span><span class="o">,</span> <span class="nl">extension:</span> <span class="s1">&#39;jar.asc&#39;</span><span class="o">],</span>
</span><span class='line'>            <span class="o">[</span><span class="nl">archive:</span> <span class="n">signedJavadoc</span><span class="o">,</span> <span class="nl">classifier:</span> <span class="s1">&#39;javadoc&#39;</span><span class="o">,</span> <span class="nl">extension:</span> <span class="s1">&#39;jar.asc&#39;</span><span class="o">],</span>
</span><span class='line'>            <span class="o">[</span><span class="nl">archive:</span> <span class="n">signedJar</span><span class="o">,</span>     <span class="nl">classifier:</span> <span class="kc">null</span><span class="o">,</span>      <span class="nl">extension:</span> <span class="s1">&#39;jar.asc&#39;</span><span class="o">]</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// publishing artifacts</span>
</span><span class='line'>        <span class="n">jars</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">from</span> <span class="n">components</span><span class="o">.</span><span class="na">java</span>
</span><span class='line'>            <span class="o">[</span>
</span><span class='line'>                    <span class="o">[</span><span class="n">jarTask</span> <span class="o">:</span> <span class="n">tasks</span><span class="o">.</span><span class="na">sourceJar</span><span class="o">,</span>  <span class="n">classifier</span> <span class="o">:</span> <span class="s1">&#39;sources&#39;</span><span class="o">,</span> <span class="n">extension</span> <span class="o">:</span> <span class="s1">&#39;jar&#39;</span><span class="o">],</span>
</span><span class='line'>                    <span class="o">[</span><span class="n">jarTask</span> <span class="o">:</span> <span class="n">tasks</span><span class="o">.</span><span class="na">javadocJar</span><span class="o">,</span> <span class="n">classifier</span> <span class="o">:</span> <span class="s1">&#39;javadoc&#39;</span><span class="o">,</span> <span class="n">extension</span> <span class="o">:</span> <span class="s1">&#39;jar&#39;</span><span class="o">]</span>
</span><span class='line'>            <span class="o">].</span><span class="na">each</span> <span class="o">{</span><span class="n">archive</span> <span class="o">-&gt;</span>
</span><span class='line'>                <span class="n">artifact</span> <span class="o">(</span><span class="n">archive</span><span class="o">.</span><span class="na">jarTask</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">classifier</span> <span class="o">=</span> <span class="n">archive</span><span class="o">.</span><span class="na">classifier</span>
</span><span class='line'>                    <span class="n">extension</span>  <span class="o">=</span> <span class="n">archive</span><span class="o">.</span><span class="na">classifier</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="c1">// publishing signature files. see(6)</span>
</span><span class='line'>        <span class="n">jarSignatures</span> <span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">getSignatureFiles</span><span class="o">().</span><span class="na">each</span> <span class="o">{</span><span class="n">signedArchive</span> <span class="o">-&gt;</span>
</span><span class='line'>                <span class="n">artifact</span> <span class="o">(</span><span class="n">signedArchive</span><span class="o">.</span><span class="na">archive</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">classifier</span> <span class="o">=</span> <span class="n">signedArchive</span><span class="o">.</span><span class="na">classifier</span>
</span><span class='line'>                    <span class="n">extension</span>  <span class="o">=</span> <span class="n">signedArchive</span><span class="o">.</span><span class="na">extension</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="c1">// publishing pom file</span>
</span><span class='line'>        <span class="n">pom</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">pom</span><span class="o">.</span><span class="na">withXml</span> <span class="o">{</span>
</span><span class='line'>                <span class="kt">def</span> <span class="n">node</span> <span class="o">=</span> <span class="n">asNode</span><span class="o">()</span>
</span><span class='line'>                <span class="n">node</span><span class="o">.</span><span class="na">children</span><span class="o">().</span><span class="na">last</span><span class="o">()</span> <span class="o">+</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">resolveStrategy</span> <span class="o">=</span> <span class="n">Closure</span><span class="o">.</span><span class="na">DELEGATE_FIRST</span>
</span><span class='line'>                    <span class="n">name</span> <span class="s1">&#39;sample-project&#39;</span>
</span><span class='line'>                    <span class="n">description</span> <span class="s1">&#39;give information of gradle maven-publish plugin&#39;</span>
</span><span class='line'>                    <span class="n">url</span> <span class="n">projectUrl</span>
</span><span class='line'>                    <span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">project</span><span class="o">.</span><span class="na">configurations</span><span class="o">.</span><span class="na">compile</span><span class="o">.</span><span class="na">dependencies</span><span class="o">.</span><span class="na">each</span> <span class="o">{</span><span class="n">dep</span> <span class="o">-&gt;</span>
</span><span class='line'>                            <span class="n">dependency</span> <span class="o">{</span>
</span><span class='line'>                                <span class="n">groupId</span> <span class="n">dep</span><span class="o">.</span><span class="na">group</span>
</span><span class='line'>                                <span class="n">artifactId</span> <span class="n">dep</span><span class="o">.</span><span class="na">name</span>
</span><span class='line'>                                <span class="n">version</span> <span class="n">dep</span><span class="o">.</span><span class="na">version</span>
</span><span class='line'>                            <span class="o">}</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                    <span class="n">licenses</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">license</span> <span class="o">{</span>
</span><span class='line'>                            <span class="n">name</span> <span class="s1">&#39;The Apache Software License, Version 2.0&#39;</span>
</span><span class='line'>                            <span class="n">url</span> <span class="s1">&#39;http://www.apache.org/license/LICENSE-2.0.txt&#39;</span>
</span><span class='line'>                            <span class="n">distribution</span> <span class="s1">&#39;repo&#39;</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                    <span class="n">scm</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">url</span> <span class="n">github</span>
</span><span class='line'>                        <span class="n">connection</span> <span class="n">scmUrl</span>
</span><span class='line'>                        <span class="n">developerConnection</span> <span class="n">developerUrl</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                    <span class="n">developers</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">developer</span> <span class="o">{</span>
</span><span class='line'>                            <span class="n">id</span> <span class="s1">&#39;mike_neck&#39;</span>
</span><span class='line'>                            <span class="n">name</span> <span class="s1">&#39;Shinya Mochida&#39;</span>
</span><span class='line'>                            <span class="n">email</span> <span class="s1">&#39;mike &lt;at&gt; mikeneck.org&#39;</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">fladDirs</span> <span class="s2">&quot;${project.projectDirs}/artifacts&quot;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>変更点は次のとおりです。</p>

<h4>(1) signingプラグインを導入します。</h4>

<p>signingプラグインではmavenプラグインと連携して次のように署名を作成することができます。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">artifacts</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">jar</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">javadocJar</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">sourceJar</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">signing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">sign</span> <span class="n">configurations</span><span class="o">.</span><span class="na">archives</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>しかし、mavenプラグインを使わないので、上記の方法では望みの署名ファイルを取得出来ません。</p>

<h4>(2) <code>Sign</code>タイプのタスクを作成する</h4>

<p>signingプラグインが入っているので、<code>type</code>が<code>Sign</code>のタスクを定義することができます。</p>

<p>このタスクを作成しておくと、指定したファイルに対して署名を作成することができます。</p>

<p>なお、このタスクは事前に署名対象のファイルがあることが前提なので、</p>

<p><code>jar</code>、<code>javadocJar</code>、<code>sourceJar</code>タスクに依存しています。</p>

<h4>(3) 成果物を一つの変数でアクセスできるようにする</h4>

<p><code>artifacts{}</code>ブロックでは指定した<code>configuration</code>に成果物を登録することができます。</p>

<p>次の例では<code>archives</code> configurationにjarタスク、javadocJarタスク、sourceJarタスクの成果を</p>

<p>登録します。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">artifacts</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">jar</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">javadocJar</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">sourceJar</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これによって、<code>configurations.archives</code>というプロパティから、</p>

<p>各種タスクの成果物にアクセスできるようになります。</p>

<h4>(4) <code>Jar</code>タイプのタスクにclassifierを指定して、成果物のファイル名を修正します。</h4>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="c1">// zip sources</span>
</span><span class='line'><span class="n">task</span> <span class="nf">sourceJar</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">sourceSets</span><span class="o">.</span><span class="na">main</span><span class="o">.</span><span class="na">allJava</span>
</span><span class='line'>    <span class="c1">// add classifier to jar file</span>
</span><span class='line'>    <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;sources&#39;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これによって、作成されるsourcesJarのファイル名に<code>-sources</code>が含まれるようになります。</p>

<h4>(5) 署名ファイルを取り出します</h4>

<p><code>type</code>が<code>Sign</code>のタスクの<code>getSignatureFiles()</code>メソッドは、署名したファイルのリストを返します。</p>

<p>それらを<code>classifier</code>によって、わけて取り出して、</p>

<p>改めて<code>classifier</code>と<code>extension</code>を付与します。</p>

<h4>(6) 署名ファイルをそれぞれ発行します。</h4>

<p>上記の(5)のクロージャー<code>getSignatureFiles</code>によって、</p>

<p>署名ファイルと<code>classifier</code>と<code>extension</code>を取得し、</p>

<p>それぞれartifactとして登録、発行します。</p>

<h4>(7) 事前に実行しておくタスクをまとめたタスクを追加</h4>

<p>署名ファイルを作成するタスクを確実に実行しておくために、</p>

<p><code>preparePublication</code>タスクを作成します。</p>

<p>これを<code>publish</code>タスクの前に実行します。</p>

<hr />

<p>それでは<code>publish</code>タスクを実行してみます。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$gradle</span> <span class="n">clean</span> <span class="n">pP</span> <span class="n">publish</span>
</span><span class='line'><span class="o">:</span><span class="n">clean</span>
</span><span class='line'><span class="o">:</span><span class="n">compileJava</span>
</span><span class='line'><span class="o">:</span><span class="n">processResources</span> <span class="n">UP</span><span class="o">-</span><span class="n">TO</span><span class="o">-</span><span class="n">DATE</span>
</span><span class='line'><span class="o">:</span><span class="n">classes</span>
</span><span class='line'><span class="o">:</span><span class="n">jar</span>
</span><span class='line'><span class="o">:</span><span class="n">javadoc</span>
</span><span class='line'><span class="o">:</span><span class="n">javadocJar</span>
</span><span class='line'><span class="o">:</span><span class="n">sourceJar</span>
</span><span class='line'><span class="o">:</span><span class="n">signArchives</span>
</span><span class='line'><span class="o">:</span><span class="n">preparePublication</span>
</span><span class='line'><span class="o">:</span><span class="n">generatePomFileForJarSignaturesPublication</span>
</span><span class='line'><span class="o">:</span><span class="n">publishJarSignaturesPublicationToMavenRepository</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0.jar.asc to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">IdeaProjects</span><span class="s">/sample-project/</span><span class="n">artifacts</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">0</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">0</span><span class="n">K</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0-sources.jar.asc to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">IdeaProjects</span><span class="s">/sample-project/</span><span class="n">artifacts</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">0</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">0</span><span class="n">K</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0-javadoc.jar.asc to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">IdeaProjects</span><span class="s">/sample-project/</span><span class="n">artifacts</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">0</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">0</span><span class="n">K</span>
</span><span class='line'><span class="o">:</span><span class="n">generatePomFileForJarsPublication</span>
</span><span class='line'><span class="o">:</span><span class="n">publishJarsPublicationToMavenRepository</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0.jar to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">IdeaProjects</span><span class="s">/sample-project/</span><span class="n">artifacts</span><span class="s">/</span>
</span><span class='line'><span class="s">Transferring 1K from remote</span>
</span><span class='line'><span class="s">Uploaded 1K</span>
</span><span class='line'><span class="s">Uploading: org/</span><span class="n">mikeneck</span><span class="s">/sample/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/1.0/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">sources</span><span class="o">.</span><span class="na">jar</span> <span class="n">to</span> <span class="n">repository</span> <span class="n">remote</span> <span class="n">at</span> <span class="nl">file:</span><span class="s">/Users/</span><span class="n">mike</span><span class="s">/IdeaProjects/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/artifacts/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">1</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">1</span><span class="n">K</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0-javadoc.jar to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">IdeaProjects</span><span class="s">/sample-project/</span><span class="n">artifacts</span><span class="s">/</span>
</span><span class='line'><span class="s">Transferring 33K from remote</span>
</span><span class='line'><span class="s">Uploaded 33K</span>
</span><span class='line'><span class="s">:generatePomFileForPomPublication</span>
</span><span class='line'><span class="s">:publishPomPublicationToMavenRepository</span>
</span><span class='line'><span class="s">Uploading: org/</span><span class="n">mikeneck</span><span class="s">/sample/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/1.0/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">pom</span> <span class="n">to</span> <span class="n">repository</span> <span class="n">remote</span> <span class="n">at</span> <span class="nl">file:</span><span class="s">/Users/</span><span class="n">mike</span><span class="s">/IdeaProjects/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/artifacts/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">1</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">1</span><span class="n">K</span>
</span><span class='line'><span class="o">:</span><span class="n">publish</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUILD</span> <span class="n">SUCCESSFUL</span>
</span><span class='line'>
</span><span class='line'><span class="n">Total</span> <span class="nl">time:</span> <span class="mf">10.894</span> <span class="n">secs</span>
</span></code></pre></td></tr></table></div></figure>


<p>さて、署名ファイルが作成されているか確認します。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">cd</span> <span class="s">/Users/</span><span class="n">mike</span><span class="s">/IdeaProjects/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/artifacts/</span><span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span>
</span><span class='line'><span class="n">$</span> <span class="n">ls</span> <span class="o">|</span> <span class="n">grep</span> <span class="n">asc</span>
</span><span class='line'><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">javadoc</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">asc</span>
</span><span class='line'><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">javadoc</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">asc</span><span class="o">.</span><span class="na">md5</span>
</span><span class='line'><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">javadoc</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">asc</span><span class="o">.</span><span class="na">sha1</span>
</span><span class='line'><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">sources</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">asc</span>
</span><span class='line'><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">sources</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">asc</span><span class="o">.</span><span class="na">md5</span>
</span><span class='line'><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">sources</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">asc</span><span class="o">.</span><span class="na">sha1</span>
</span><span class='line'><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">asc</span>
</span><span class='line'><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">asc</span><span class="o">.</span><span class="na">md5</span>
</span><span class='line'><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">asc</span><span class="o">.</span><span class="na">sha1</span>
</span></code></pre></td></tr></table></div></figure>


<p>それぞれ署名ファイルが作成されているようです。</p>

<p>では、署名ファイルを検証してみましょう。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">gpg2</span> <span class="o">--</span><span class="n">verify</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">javadoc</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">asc</span>
</span><span class='line'><span class="nl">gpg:</span> <span class="n">Signature</span> <span class="n">made</span> <span class="err">木</span>  <span class="mi">6</span><span class="s">/20 18:05:08 2013 JST using RSA key ID ABC12345</span>
</span><span class='line'><span class="s">gpg: Good signature from &quot;Shinya Mochida (Groovy/</span><span class="n">JavaScript</span> <span class="n">Developer</span> <span class="k">in</span> <span class="n">Japan</span><span class="o">)</span> <span class="o">&lt;</span><span class="n">mike</span><span class="nd">@mikeneck.org</span><span class="o">&gt;</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">$ gpg2 --verify sample-project-1.0-sources.jar.asc</span>
</span><span class='line'><span class="s2">gpg: Signature made 木  6/20 18:05:08 2013 JST using RSA key ID ABC12345</span>
</span><span class='line'><span class="s2">gpg: Good signature from &quot;</span><span class="n">Shinya</span> <span class="n">Mochida</span> <span class="o">(</span><span class="n">Groovy</span><span class="s">/JavaScript Developer in Japan) &lt;mike@mikeneck.org&gt;&quot;</span>
</span><span class='line'><span class="s">$ gpg2 --verify sample-project-1.0.jar.asc</span>
</span><span class='line'><span class="s">gpg: Signature made 木  6/</span><span class="mi">20</span> <span class="mi">18</span><span class="o">:</span><span class="mi">05</span><span class="o">:</span><span class="mi">08</span> <span class="mi">2013</span> <span class="n">JST</span> <span class="n">using</span> <span class="n">RSA</span> <span class="n">key</span> <span class="n">ID</span> <span class="n">ABC12345</span>
</span><span class='line'><span class="nl">gpg:</span> <span class="n">Good</span> <span class="n">signature</span> <span class="n">from</span> <span class="s2">&quot;Shinya Mochida (Groovy/JavaScript Developer in Japan) &lt;mike@mikeneck.org&gt;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>ちゃんと署名できていることが確認できました。</p>

<h2>課題</h2>

<p>さて、jarファイルの署名をすることは出来ました。</p>

<h4>pom署名ファイル問題</h4>

<p>しかし、残念なことにpomファイルの署名ができていません。</p>

<p>上述のpomファイルを変更するというところで記述した</p>

<p><code>org.gradle.api.XmlProvider</code>の実装クラスは</p>

<p><code>org.gradle.api.internal.xml.XmlTransformer.XmlProviderImpl</code>です。</p>

<p>そのクラスには<code>public void writeTo(java.io.File file)</code>というメソッドがあります。</p>

<p>そのメソッドを介してpomファイルを出力することが可能です。</p>

<p>したがって、次の手順でpomファイルの署名も発行することが可能ではないかと</p>

<p>考えられます。</p>

<ol>
<li>pom出力タスク中でpomファイルを書き出し</li>
<li>pom出力タスク中で書きだしたpomファイルの署名をするタスクを実行</li>
<li>pomファイルの署名をするタスクから署名ファイルを取得</li>
<li>署名ファイルをartifactとして発行</li>
</ol>


<p>上記の手順を実行するようにビルドスクリプトを書いてみます。</p>

<p>以下、一部抜粋。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="c1">// pom file</span>
</span><span class='line'><span class="n">ext</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">pomFilePath</span> <span class="o">=</span> <span class="s2">&quot;${project.projectDir}/tmp/pom.xml&quot;</span>
</span><span class='line'>    <span class="n">pomFile</span> <span class="o">=</span> <span class="n">file</span><span class="o">(</span><span class="n">pomFilePath</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// task for signing pom</span>
</span><span class='line'><span class="n">task</span> <span class="nf">signPom</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Sign</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">sign</span> <span class="n">pomFile</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// getting a signature of pom</span>
</span><span class='line'><span class="kt">def</span> <span class="n">getPomSignatrure</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">project</span><span class="o">.</span><span class="na">tasks</span><span class="o">.</span><span class="na">signPom</span><span class="o">.</span><span class="na">signatureFiles</span><span class="o">.</span><span class="na">collect</span><span class="o">{</span><span class="n">it</span><span class="o">}[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// publish pom</span>
</span><span class='line'>        <span class="n">pom</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">pom</span><span class="o">.</span><span class="na">withXml</span> <span class="o">{</span>
</span><span class='line'>                <span class="kt">def</span> <span class="n">node</span> <span class="o">=</span> <span class="n">asNode</span><span class="o">()</span>
</span><span class='line'>                <span class="n">node</span><span class="o">.</span><span class="na">chidren</span><span class="o">().</span><span class="na">last</span><span class="o">()</span> <span class="o">+</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">resolveStrategy</span> <span class="o">=</span> <span class="n">Closure</span><span class="o">.</span><span class="na">DELEGATE_FIRST</span>
</span><span class='line'>                        <span class="n">project</span><span class="o">.</span><span class="na">configurations</span><span class="o">.</span><span class="na">compile</span><span class="o">.</span><span class="na">dependencies</span><span class="o">.</span><span class="na">each</span> <span class="o">{</span><span class="n">dep</span> <span class="o">-&gt;</span>
</span><span class='line'>                            <span class="n">dependency</span> <span class="o">{</span>
</span><span class='line'>                                <span class="n">groupId</span> <span class="n">dep</span><span class="o">.</span><span class="na">group</span>
</span><span class='line'>                                <span class="n">artifactId</span> <span class="n">dep</span><span class="o">.</span><span class="na">name</span>
</span><span class='line'>                                <span class="n">version</span> <span class="n">dep</span><span class="o">.</span><span class="na">version</span>
</span><span class='line'>                            <span class="o">}</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="n">writeTo</span><span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">)</span>
</span><span class='line'>                <span class="n">project</span><span class="o">.</span><span class="na">tasks</span><span class="o">.</span><span class="na">signPom</span><span class="o">.</span><span class="na">execute</span><span class="o">()</span>
</span><span class='line'>                <span class="n">artifact</span> <span class="o">(</span><span class="n">getPomSignature</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">classifier</span> <span class="o">=</span> <span class="kc">null</span>
</span><span class='line'>                    <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;pom.asc&#39;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ではpublishタスクを実行してみます。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="o">--</span><span class="n">daemon</span> <span class="n">clean</span> <span class="n">pP</span> <span class="n">publish</span>
</span><span class='line'><span class="o">:</span><span class="n">clean</span>
</span><span class='line'><span class="o">:</span><span class="n">compileJava</span>
</span><span class='line'><span class="o">:</span><span class="n">processResources</span> <span class="n">UP</span><span class="o">-</span><span class="n">TO</span><span class="o">-</span><span class="n">DATE</span>
</span><span class='line'><span class="o">:</span><span class="n">classes</span>
</span><span class='line'><span class="o">:</span><span class="n">jar</span>
</span><span class='line'><span class="o">:</span><span class="n">javadoc</span>
</span><span class='line'><span class="o">:</span><span class="n">javadocJar</span>
</span><span class='line'><span class="o">:</span><span class="n">sourceJar</span>
</span><span class='line'><span class="o">:</span><span class="n">signArchives</span>
</span><span class='line'><span class="o">:</span><span class="n">preparePublication</span>
</span><span class='line'><span class="o">:</span><span class="n">generatePomFileForJarSignaturesPublication</span>
</span><span class='line'><span class="o">:</span><span class="n">publishJarSignaturesPublicationToMavenRepository</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0.jar.asc to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">IdeaProjects</span><span class="s">/sample-project/</span><span class="n">artifacts</span><span class="s">/</span>
</span><span class='line'><span class="s">Transferring 0K from remote</span>
</span><span class='line'><span class="s">Uploaded 0K</span>
</span><span class='line'><span class="s">Uploading: org/</span><span class="n">mikeneck</span><span class="s">/sample/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/1.0/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">sources</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">asc</span> <span class="n">to</span> <span class="n">repository</span> <span class="n">remote</span> <span class="n">at</span> <span class="nl">file:</span><span class="s">/Users/</span><span class="n">mike</span><span class="s">/IdeaProjects/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/artifacts/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">0</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">0</span><span class="n">K</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0-javadoc.jar.asc to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">IdeaProjects</span><span class="s">/sample-project/</span><span class="n">artifacts</span><span class="s">/</span>
</span><span class='line'><span class="s">Transferring 0K from remote</span>
</span><span class='line'><span class="s">Uploaded 0K</span>
</span><span class='line'><span class="s">:generatePomFileForJarsPublication</span>
</span><span class='line'><span class="s">:publishJarsPublicationToMavenRepository</span>
</span><span class='line'><span class="s">Uploading: org/</span><span class="n">mikeneck</span><span class="s">/sample/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/1.0/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">jar</span> <span class="n">to</span> <span class="n">repository</span> <span class="n">remote</span> <span class="n">at</span> <span class="nl">file:</span><span class="s">/Users/</span><span class="n">mike</span><span class="s">/IdeaProjects/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/artifacts/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">1</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">1</span><span class="n">K</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0-sources.jar to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">IdeaProjects</span><span class="s">/sample-project/</span><span class="n">artifacts</span><span class="s">/</span>
</span><span class='line'><span class="s">Transferring 1K from remote</span>
</span><span class='line'><span class="s">Uploaded 1K</span>
</span><span class='line'><span class="s">Uploading: org/</span><span class="n">mikeneck</span><span class="s">/sample/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/1.0/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">javadoc</span><span class="o">.</span><span class="na">jar</span> <span class="n">to</span> <span class="n">repository</span> <span class="n">remote</span> <span class="n">at</span> <span class="nl">file:</span><span class="s">/Users/</span><span class="n">mike</span><span class="s">/IdeaProjects/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/artifacts/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">33</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">33</span><span class="n">K</span>
</span><span class='line'><span class="o">:</span><span class="n">generatePomFileForPomPublication</span>
</span><span class='line'><span class="o">:</span><span class="n">publishPomPublicationToMavenRepository</span> <span class="n">FAILED</span>
</span><span class='line'>
</span><span class='line'><span class="nl">FAILURE:</span> <span class="n">Build</span> <span class="n">failed</span> <span class="n">with</span> <span class="n">an</span> <span class="n">exception</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="n">What</span> <span class="n">went</span> <span class="nl">wrong:</span>
</span><span class='line'><span class="n">Execution</span> <span class="n">failed</span> <span class="k">for</span> <span class="n">task</span> <span class="s1">&#39;:publishPomPublicationToMavenRepository&#39;</span><span class="o">.</span>
</span><span class='line'><span class="o">&gt;</span> <span class="n">Failed</span> <span class="n">to</span> <span class="n">publish</span> <span class="n">publication</span> <span class="s1">&#39;pom&#39;</span> <span class="n">to</span> <span class="n">repository</span> <span class="s1">&#39;maven&#39;</span>
</span><span class='line'>   <span class="o">&gt;</span> <span class="n">Invalid</span> <span class="n">publication</span> <span class="s1">&#39;pom&#39;</span><span class="o">:</span> <span class="n">artifact</span> <span class="n">file</span> <span class="n">does</span> <span class="n">not</span> <span class="nl">exist:</span> <span class="s1">&#39;/Users/mike/IdeaProjects/sample-project/tmp/pom.xml.asc&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="nl">Try:</span>
</span><span class='line'><span class="n">Run</span> <span class="n">with</span> <span class="o">--</span><span class="n">stacktrace</span> <span class="n">option</span> <span class="n">to</span> <span class="n">get</span> <span class="n">the</span> <span class="n">stack</span> <span class="n">trace</span><span class="o">.</span> <span class="n">Run</span> <span class="n">with</span> <span class="o">--</span><span class="n">info</span> <span class="n">or</span> <span class="o">--</span><span class="n">debug</span> <span class="n">option</span> <span class="n">to</span> <span class="n">get</span> <span class="n">more</span> <span class="n">log</span> <span class="n">output</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUILD</span> <span class="n">FAILED</span>
</span><span class='line'>
</span><span class='line'><span class="n">Total</span> <span class="nl">time:</span> <span class="mf">5.357</span> <span class="n">secs</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>publishPomPublicationToMavenRepository</code>タスクで落ちてしまっています。</p>

<p>理由は署名ファイルが見つからないということです。</p>

<p>では、該当のディレクトリーの中身を見てみます。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">ls</span> <span class="n">temp</span>
</span><span class='line'><span class="n">pom</span><span class="o">.</span><span class="na">xml</span>
</span></code></pre></td></tr></table></div></figure>


<p>pomファイルだけしか出力されていません。</p>

<p>したがって、署名タスクが実行できてない状態になっているわけです。</p>

<p>実行されたタスクを挙げてみると、このようになっています。</p>

<ul>
<li>:clean</li>
<li>:compileJava</li>
<li>:processResources UP-TO-DATE</li>
<li>:classes</li>
<li>:jar</li>
<li>:javadoc</li>
<li>:javadocJar</li>
<li>:sourceJar</li>
<li>:signArchives</li>
<li>:preparePublication</li>
<li>:generatePomFileForJarSignaturesPublication</li>
<li>:publishJarSignaturesPublicationToMavenRepository</li>
<li>:generatePomFileForJarsPublication</li>
<li>:publishJarsPublicationToMavenRepository</li>
<li>:generatePomFileForPomPublication</li>
<li>:publishPomPublicationToMavenRepository FAILED</li>
</ul>


<p>よくみてみると、signPomタスクは実行されていません。</p>

<p>というわけで、明示的にsignPomタスクを実行する必要があるわけですが、</p>

<p>(<code>Task#execute()</code>で呼び出さないということ)</p>

<p><code>Task#dependsOn</code>でsignPomタスクを指定しても、発行できないだけでなく、</p>

<p>実際にはpublishing-publicationのコンテキストでは<code>dependsOn</code>が使えません。</p>

<p>先ほどのビルドスクリプトを一部変更してみます。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// 中略</span>
</span><span class='line'>        <span class="n">pom</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">dependsOn</span> <span class="n">project</span><span class="o">.</span><span class="na">tasks</span><span class="o">.</span><span class="na">signPom</span>
</span><span class='line'>            <span class="n">pom</span><span class="o">.</span><span class="na">withXml</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// 中略</span>
</span><span class='line'>                <span class="n">writeTo</span><span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">)</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">artifact</span> <span class="o">(</span><span class="n">getPomSignature</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">classifier</span> <span class="o">=</span> <span class="kc">null</span>
</span><span class='line'>                <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;pom.asc&#39;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>このビルドスクリプトをパースさせると次のようなエラーが発生します。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="n">tasks</span>
</span><span class='line'><span class="n">Picked</span> <span class="n">up</span> <span class="nl">_JAVA_OPTIONS:</span> <span class="o">-</span><span class="n">Dfile</span><span class="o">.</span><span class="na">encoding</span><span class="o">=</span><span class="n">UTF</span><span class="o">-</span><span class="mi">8</span>
</span><span class='line'>
</span><span class='line'><span class="nl">FAILURE:</span> <span class="n">Build</span> <span class="n">failed</span> <span class="n">with</span> <span class="n">an</span> <span class="n">exception</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="nl">Where:</span>
</span><span class='line'><span class="n">Build</span> <span class="n">file</span> <span class="s1">&#39;/Users/mike/IdeaProjects/sample-project/build.gradle&#39;</span> <span class="nl">line:</span> <span class="mi">90</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="n">What</span> <span class="n">went</span> <span class="nl">wrong:</span>
</span><span class='line'><span class="n">A</span> <span class="n">problem</span> <span class="n">occurred</span> <span class="n">configuring</span> <span class="n">root</span> <span class="n">project</span> <span class="s1">&#39;sample-project&#39;</span><span class="o">.</span>
</span><span class='line'><span class="o">&gt;</span> <span class="n">Cannot</span> <span class="n">create</span> <span class="n">a</span> <span class="n">Publication</span> <span class="n">named</span> <span class="s1">&#39;dependsOn&#39;</span> <span class="n">because</span> <span class="k">this</span> <span class="n">container</span> <span class="n">does</span> <span class="n">not</span> <span class="n">support</span> <span class="n">creating</span> <span class="n">elements</span> <span class="n">by</span> <span class="n">name</span> <span class="n">alone</span><span class="o">.</span> <span class="n">Please</span> <span class="n">specify</span> <span class="n">which</span> <span class="n">subtype</span> <span class="n">of</span> <span class="n">Publication</span> <span class="n">to</span> <span class="n">create</span><span class="o">.</span> <span class="n">Known</span> <span class="n">subtypes</span> <span class="nl">are:</span> <span class="n">MavenPublication</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="nl">Try:</span>
</span><span class='line'><span class="n">Run</span> <span class="n">with</span> <span class="o">--</span><span class="n">stacktrace</span> <span class="n">option</span> <span class="n">to</span> <span class="n">get</span> <span class="n">the</span> <span class="n">stack</span> <span class="n">trace</span><span class="o">.</span> <span class="n">Run</span> <span class="n">with</span> <span class="o">--</span><span class="n">info</span> <span class="n">or</span> <span class="o">--</span><span class="n">debug</span> <span class="n">option</span> <span class="n">to</span> <span class="n">get</span> <span class="n">more</span> <span class="n">log</span> <span class="n">output</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUILD</span> <span class="n">FAILED</span>
</span><span class='line'>
</span><span class='line'><span class="n">Total</span> <span class="nl">time:</span> <span class="mf">13.805</span> <span class="n">secs</span>
</span></code></pre></td></tr></table></div></figure>


<p>たとえ、これがDSL上問題がなくても、</p>

<p>pomファイルの出力はsignPomタスクの後に実行されるので、</p>

<p>エラーが発生することは予見できます。</p>

<h4>現状考えられるpom署名ファイル回避方法</h4>

<p>gradleではダイナミックにタスクの定義ができます。</p>

<p>これを利用して、pomファイルがない場合は、</p>

<p>pomファイルの生成を行い、</p>

<p>一時的なファイルに対して発行を行います。</p>

<p>そして、pomファイルが存在する場合には、</p>

<p>署名タスクを実行して、</p>

<p>artifact登録して、maven repositoryへ発行します。</p>

<p>整理すると…</p>

<ul>
<li>maven publishプラグインを二回実行する。</li>
<li>pomファイルが存在しない場合は、signPomを実行しない、<code>withXml</code>で<code>writeTo</code>を使ってpomファイルを出力する。</li>
<li>pomファイルが存在する場合は、signPomを先に実行しておいて、署名ファイルもartifactとして発行する</li>
</ul>


<p>ということになります。</p>

<p>ビルドスクリプトを以下に示します(該当部分のみ)。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="c1">// dynamic definition of preparePublication</span>
</span><span class='line'><span class="k">if</span> <span class="o">(</span><span class="n">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">task</span> <span class="nf">preparePublication</span> <span class="o">(</span><span class="n">dependsOn</span> <span class="o">:</span> <span class="o">[</span><span class="n">signArchives</span><span class="o">,</span> <span class="n">signPom</span><span class="o">])</span>
</span><span class='line'><span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">task</span> <span class="nf">preparePublication</span> <span class="o">(</span><span class="n">dependsOn</span> <span class="o">:</span> <span class="n">signArchives</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// publishing if pomFile exists</span>
</span><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// 中略</span>
</span><span class='line'>        <span class="n">pom</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">dependsOn</span> <span class="n">project</span><span class="o">.</span><span class="na">tasks</span><span class="o">.</span><span class="na">signPom</span>
</span><span class='line'>            <span class="n">pom</span><span class="o">.</span><span class="na">withXml</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// 中略</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(!</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">writeTo</span><span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">)</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">artifact</span> <span class="o">(</span><span class="n">getPomSignature</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">classifier</span> <span class="o">=</span> <span class="kc">null</span>
</span><span class='line'>                    <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;pom.asc&#39;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">delete</span><span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">)</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>…で、これは実は失敗しました。</p>

<p>ヒントは、発行されるpomの<code>&lt;packaging&gt;&lt;/packaging&gt;</code>にあります。</p>

<ul>
<li>jarSignaturesタスクの場合は<code>&lt;packaging&gt;jar.asc&lt;/packaging&gt;</code></li>
<li>jarsタスクの場合は<code>&lt;packaging&gt;&lt;/packaging&gt;</code>要素なし</li>
<li>pomタスクの場合はpomFileが存在する場合は<code>&lt;packaging&gt;pom.asc&lt;/packaging&gt;</code>、pomFileが存在しない場合は<code>&lt;packaging&gt;</code>要素なし</li>
</ul>


<p>となります。</p>

<p>pomFileが存在する場合に署名タスクを実行するという戦略をとっていたわけですが、</p>

<p>signPomタスクはpomFileが存在しない場合のpomファイル、</p>

<p>つまり<code>&lt;packaging&gt;</code>要素なしのものを元に署名を行うため、</p>

<p>同時に発行されるpomファイルが<code>&lt;packaging&gt;pom.asc&lt;/packaging&gt;</code>を持ってしまうために、</p>

<p>署名ファイルが不適切なものになってしまうという不具合が発生してしまいました。</p>

<h4>改めてpomファイルの発行と、署名タスクの戦略を考えなおす</h4>

<h5>projectのメインのpom出力について</h5>

<p>先ほどの<code>&lt;packaging&gt;</code>要素に関しては、</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="kt">def</span> <span class="n">node</span> <span class="o">=</span> <span class="o">=</span> <span class="n">asNode</span><span class="o">()</span>
</span><span class='line'><span class="kt">def</span> <span class="n">packagingNode</span> <span class="o">=</span> <span class="n">node</span><span class="o">.</span><span class="na">children</span><span class="o">().</span><span class="na">find</span><span class="o">{</span><span class="n">it</span><span class="o">.</span><span class="na">name</span><span class="o">().</span><span class="na">localPart</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s1">&#39;packaging&#39;</span><span class="o">)}</span>
</span><span class='line'><span class="n">node</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">packageingNode</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>とやっても、発行されるartifactの<code>extension</code>によって、<code>&lt;packaging&gt;</code>要素が追加されてしまいます。</p>

<p>したがって、pomファイルの修正はjarファイルの発行タスクと同時に実施するのが望ましい形であると言えます。</p>

<p>なぜならば、jarファイルの発行タスクではすべての<code>extension</code>が<code>jar</code>であるため、</p>

<p>適切なpomファイルが作成されうるためです。</p>

<p>また、これはpomの署名ファイルの発行の元になるために、</p>

<p>ここでpomファイルの書き出しをしておく必要があります。</p>

<h5>署名ファイルの生成について</h5>

<p>pomファイルが存在している場合にのみ、署名タスクを実行、</p>

<p>署名ファイルアップロードするタスクが実行できるようにします。</p>

<h5>タスクの実行順について</h5>

<p>前述のとおり、pomファイルは後から実行されるタスクで上書きされていくので、</p>

<p>jarが発行されるタスクが一番最後に実施されるようにする必要があります。</p>

<p>その他の署名ファイルの発行タスクは、その先に実行されるようにします。</p>

<h4>以上の戦略に基づいたビルドスクリプト</h4>

<p>実行順序などに気をつけてビルドスクリプトを更新しました。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="c1">// declaration of plugins</span>
</span><span class='line'><span class="o">[</span><span class="s1">&#39;java&#39;</span><span class="o">,</span> <span class="s1">&#39;maven-publish&#39;</span><span class="o">,</span> <span class="s1">&#39;idea&#39;</span><span class="o">,</span> <span class="s1">&#39;signing&#39;</span><span class="o">].</span><span class="na">each</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="n">it</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// dynamic properties</span>
</span><span class='line'><span class="n">ext</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">pomFilePath</span> <span class="o">=</span> <span class="s2">&quot;${project.projectDir}/tmp/pom.xml&quot;</span>
</span><span class='line'>    <span class="n">pomFile</span> <span class="o">=</span> <span class="n">file</span><span class="o">(</span><span class="n">pomFilePath</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// project information</span>
</span><span class='line'><span class="n">group</span> <span class="o">=</span> <span class="s1">&#39;org.mikeneck.sample&#39;</span>
</span><span class='line'><span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;1.0&#39;</span>
</span><span class='line'><span class="c1">// repository management</span>
</span><span class='line'><span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">mavenCentral</span> <span class="o">()</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// dependency management</span>
</span><span class='line'><span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">compile</span> <span class="s1">&#39;org.jsoup:jsoup:1.6.3&#39;</span>
</span><span class='line'>    <span class="n">testCompile</span> <span class="s1">&#39;junit:junit:4.11&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// zip sources</span>
</span><span class='line'><span class="n">task</span> <span class="nf">sourceJar</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">sourceSets</span><span class="o">.</span><span class="na">main</span><span class="o">.</span><span class="na">allJava</span>
</span><span class='line'>    <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;sources&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// zip javadoc</span>
</span><span class='line'><span class="n">task</span> <span class="nf">javadocJar</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">,</span> <span class="n">dependsOn</span> <span class="o">:</span> <span class="n">javadoc</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">javadoc</span><span class="o">.</span><span class="na">destinationDir</span>
</span><span class='line'>    <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;javadoc&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// configuration for pom signing</span>
</span><span class='line'><span class="n">configurations</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">pom</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// extract artifacts for publishing signatures</span>
</span><span class='line'><span class="n">artifacts</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">jar</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">sourceJar</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">javadocJar</span>
</span><span class='line'>    <span class="nf">if</span> <span class="o">(</span><span class="n">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">pom</span> <span class="n">pomFile</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// jar signin</span>
</span><span class='line'><span class="n">task</span> <span class="nf">signArchives</span> <span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Sign</span><span class="o">,</span> <span class="n">dependsOn</span> <span class="o">:</span> <span class="o">[</span><span class="n">jar</span><span class="o">,</span> <span class="n">sourceJar</span><span class="o">,</span> <span class="n">javadocJar</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">sign</span> <span class="n">configurations</span><span class="o">.</span><span class="na">archives</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// getting signature files</span>
</span><span class='line'><span class="kt">def</span> <span class="n">getSignatureFiles</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">allFiles</span> <span class="o">=</span> <span class="n">tasks</span><span class="o">.</span><span class="na">signArchives</span><span class="o">.</span><span class="na">signatureFiles</span><span class="o">.</span><span class="na">collect</span><span class="o">{</span><span class="n">it</span><span class="o">}</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">signedSources</span> <span class="o">=</span> <span class="n">allFiles</span><span class="o">.</span><span class="na">find</span> <span class="o">{</span> <span class="n">it</span><span class="o">.</span><span class="na">name</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s1">&#39;-sources&#39;</span><span class="o">)</span> <span class="o">}</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">signedJavadoc</span> <span class="o">=</span> <span class="n">allFiles</span><span class="o">.</span><span class="na">find</span> <span class="o">{</span> <span class="n">it</span><span class="o">.</span><span class="na">name</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s1">&#39;-javadoc&#39;</span><span class="o">)</span> <span class="o">}</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">signedJar</span> <span class="o">=</span> <span class="o">(</span><span class="n">allFiles</span> <span class="o">-</span> <span class="o">[</span><span class="n">signedSources</span><span class="o">,</span> <span class="n">signedJavadoc</span><span class="o">])[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">[</span>
</span><span class='line'>            <span class="o">[</span><span class="nl">archive:</span> <span class="n">signedSources</span><span class="o">,</span> <span class="nl">classifier:</span> <span class="s1">&#39;sources&#39;</span><span class="o">,</span> <span class="nl">extension:</span> <span class="s1">&#39;jar.asc&#39;</span><span class="o">],</span>
</span><span class='line'>            <span class="o">[</span><span class="nl">archive:</span> <span class="n">signedJavadoc</span><span class="o">,</span> <span class="nl">classifier:</span> <span class="s1">&#39;javadoc&#39;</span><span class="o">,</span> <span class="nl">extension:</span> <span class="s1">&#39;jar.asc&#39;</span><span class="o">],</span>
</span><span class='line'>            <span class="o">[</span><span class="nl">archive:</span> <span class="n">signedJar</span><span class="o">,</span>     <span class="nl">classifier:</span> <span class="kc">null</span><span class="o">,</span>      <span class="nl">extension:</span> <span class="s1">&#39;jar.asc&#39;</span><span class="o">]</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// signing pom file</span>
</span><span class='line'><span class="n">task</span> <span class="nf">signPom</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Sign</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">sign</span> <span class="n">configurations</span><span class="o">.</span><span class="na">pom</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// prepare publication tasks depends on existence of pom file</span>
</span><span class='line'><span class="k">if</span> <span class="o">(</span><span class="n">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">task</span> <span class="nf">preparePublication</span> <span class="o">(</span><span class="n">dependsOn</span> <span class="o">:</span> <span class="o">[</span><span class="n">signArchives</span><span class="o">,</span> <span class="n">signPom</span><span class="o">])</span>
</span><span class='line'><span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">task</span> <span class="nf">preparePublication</span> <span class="o">(</span><span class="n">dependsOn</span> <span class="o">:</span> <span class="n">signArchives</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// getting pom signature</span>
</span><span class='line'><span class="kt">def</span> <span class="n">getPomSignature</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">project</span><span class="o">.</span><span class="na">tasks</span><span class="o">.</span><span class="na">signPom</span><span class="o">.</span><span class="na">signatureFiles</span><span class="o">.</span><span class="na">collect</span><span class="o">{</span><span class="n">it</span><span class="o">}[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// jar publication -- this will be executed last</span>
</span><span class='line'>        <span class="n">mainJar</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">from</span> <span class="n">components</span><span class="o">.</span><span class="na">java</span>
</span><span class='line'>            <span class="o">[</span>
</span><span class='line'>                    <span class="o">[</span><span class="n">jarTask</span> <span class="o">:</span> <span class="n">sourceJar</span><span class="o">,</span>  <span class="n">classifier</span> <span class="o">:</span> <span class="s1">&#39;sources&#39;</span><span class="o">,</span> <span class="n">extension</span> <span class="o">:</span> <span class="s1">&#39;jar&#39;</span><span class="o">],</span>
</span><span class='line'>                    <span class="o">[</span><span class="n">jarTask</span> <span class="o">:</span> <span class="n">javadocJar</span><span class="o">,</span> <span class="n">classifier</span> <span class="o">:</span> <span class="s1">&#39;javadoc&#39;</span><span class="o">,</span> <span class="n">extension</span> <span class="o">:</span> <span class="s1">&#39;jar&#39;</span><span class="o">]</span>
</span><span class='line'>            <span class="o">].</span><span class="na">each</span> <span class="o">{</span><span class="n">archive</span> <span class="o">-&gt;</span>
</span><span class='line'>                <span class="n">artifact</span> <span class="o">(</span><span class="n">archive</span><span class="o">.</span><span class="na">jarTask</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">classifier</span> <span class="o">=</span> <span class="n">archive</span><span class="o">.</span><span class="na">classifier</span>
</span><span class='line'>                    <span class="n">extension</span>  <span class="o">=</span> <span class="n">archive</span><span class="o">.</span><span class="na">extension</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">pom</span><span class="o">.</span><span class="na">withXml</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">Node</span> <span class="n">node</span> <span class="o">=</span> <span class="n">asNode</span><span class="o">()</span>
</span><span class='line'>                <span class="n">node</span><span class="o">.</span><span class="na">children</span><span class="o">().</span><span class="na">last</span><span class="o">()</span> <span class="o">+</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">resolveStrategy</span> <span class="o">=</span> <span class="n">Closure</span><span class="o">.</span><span class="na">DELEGATE_FIRST</span>
</span><span class='line'>                    <span class="n">packaging</span> <span class="s1">&#39;jar&#39;</span>
</span><span class='line'>                    <span class="n">licenses</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">license</span> <span class="o">{</span>
</span><span class='line'>                            <span class="n">name</span> <span class="s1">&#39;The Apache Software License, Version 2.0&#39;</span>
</span><span class='line'>                            <span class="n">url</span> <span class="s1">&#39;http://www.apache.org/license/LICENSE-2.0.txt&#39;</span>
</span><span class='line'>                            <span class="n">distribution</span> <span class="s1">&#39;repo&#39;</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(!</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">writeTo</span><span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">)</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="c1">// publication of jar signatures</span>
</span><span class='line'>        <span class="n">jarSignatures</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">getSignatureFiles</span><span class="o">().</span><span class="na">each</span> <span class="o">{</span><span class="n">signature</span> <span class="o">-&gt;</span>
</span><span class='line'>                <span class="n">artifact</span> <span class="o">(</span><span class="n">signature</span><span class="o">.</span><span class="na">archive</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">classifier</span> <span class="o">=</span> <span class="n">signature</span><span class="o">.</span><span class="na">classifier</span>
</span><span class='line'>                    <span class="n">extension</span>  <span class="o">=</span> <span class="n">signature</span><span class="o">.</span><span class="na">extension</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="c1">// publication of pom signatures depends on existence of pom file.</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>            <span class="s1">&#39;gpg-pom&#39;</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">artifact</span> <span class="o">(</span><span class="n">getPomSignature</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">classifier</span> <span class="o">=</span> <span class="kc">null</span>
</span><span class='line'>                    <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;pom.asc&#39;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">maven</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// siwtch repository location by existence of pom file</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// target repository</span>
</span><span class='line'>                <span class="n">url</span> <span class="s2">&quot;file:/${project.projectDir}/artifacts&quot;</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// temporary repository</span>
</span><span class='line'>                <span class="n">url</span> <span class="s2">&quot;file:/${project.projectDir}/tmp&quot;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>publish タスクは二度実行します。</p>

<p>一度目はpomファイルを生成するだけが目的です。</p>

<p>二度目はpomの署名も生成して、すべてをmaven repositoryにアップロードします。</p>

<h4>一度目のpublishタスク実行結果</h4>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="o">--</span><span class="n">daemon</span> <span class="n">clean</span> <span class="n">pP</span> <span class="n">publish</span>
</span><span class='line'><span class="o">:</span><span class="n">clean</span>
</span><span class='line'><span class="o">:</span><span class="n">compileJava</span>
</span><span class='line'><span class="o">:</span><span class="n">processResources</span> <span class="n">UP</span><span class="o">-</span><span class="n">TO</span><span class="o">-</span><span class="n">DATE</span>
</span><span class='line'><span class="o">:</span><span class="n">classes</span>
</span><span class='line'><span class="o">:</span><span class="n">jar</span>
</span><span class='line'><span class="o">:</span><span class="n">javadoc</span>
</span><span class='line'><span class="o">:</span><span class="n">javadocJar</span>
</span><span class='line'><span class="o">:</span><span class="n">sourceJar</span>
</span><span class='line'><span class="o">:</span><span class="n">signArchives</span>
</span><span class='line'><span class="o">:</span><span class="n">preparePublication</span>
</span><span class='line'><span class="o">:</span><span class="n">generatePomFileForJarSignaturesPublication</span>
</span><span class='line'><span class="o">:</span><span class="n">publishJarSignaturesPublicationToMavenRepository</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0.jar.asc to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">IdeaProjects</span><span class="s">/sample-project/</span><span class="n">tmp</span><span class="s">/</span>
</span><span class='line'><span class="s">Transferring 0K from remote</span>
</span><span class='line'><span class="s">Uploaded 0K</span>
</span><span class='line'><span class="s">Uploading: org/</span><span class="n">mikeneck</span><span class="s">/sample/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/1.0/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">sources</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">asc</span> <span class="n">to</span> <span class="n">repository</span> <span class="n">remote</span> <span class="n">at</span> <span class="nl">file:</span><span class="s">/Users/</span><span class="n">mike</span><span class="s">/IdeaProjects/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/tmp/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">0</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">0</span><span class="n">K</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0-javadoc.jar.asc to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">IdeaProjects</span><span class="s">/sample-project/</span><span class="n">tmp</span><span class="s">/</span>
</span><span class='line'><span class="s">Transferring 0K from remote</span>
</span><span class='line'><span class="s">Uploaded 0K</span>
</span><span class='line'><span class="s">:generatePomFileForMainJarPublication</span>
</span><span class='line'><span class="s">:publishMainJarPublicationToMavenRepository</span>
</span><span class='line'><span class="s">Uploading: org/</span><span class="n">mikeneck</span><span class="s">/sample/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/1.0/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">jar</span> <span class="n">to</span> <span class="n">repository</span> <span class="n">remote</span> <span class="n">at</span> <span class="nl">file:</span><span class="s">/Users/</span><span class="n">mike</span><span class="s">/IdeaProjects/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/tmp/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">1</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">1</span><span class="n">K</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0-sources.jar to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">IdeaProjects</span><span class="s">/sample-project/</span><span class="n">tmp</span><span class="s">/</span>
</span><span class='line'><span class="s">Transferring 1K from remote</span>
</span><span class='line'><span class="s">Uploaded 1K</span>
</span><span class='line'><span class="s">Uploading: org/</span><span class="n">mikeneck</span><span class="s">/sample/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/1.0/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">javadoc</span><span class="o">.</span><span class="na">jar</span> <span class="n">to</span> <span class="n">repository</span> <span class="n">remote</span> <span class="n">at</span> <span class="nl">file:</span><span class="s">/Users/</span><span class="n">mike</span><span class="s">/IdeaProjects/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/tmp/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">33</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">33</span><span class="n">K</span>
</span><span class='line'><span class="o">:</span><span class="n">publish</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUILD</span> <span class="n">SUCCESSFUL</span>
</span><span class='line'>
</span><span class='line'><span class="n">Total</span> <span class="nl">time:</span> <span class="mf">21.149</span> <span class="n">secs</span>
</span></code></pre></td></tr></table></div></figure>


<p>これは、あくまでpomファイルの生成を目的にしたpublish タスクです。</p>

<p>念の為にpomファイルを確認しておきます。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">cat</span> <span class="n">tmp</span><span class="s">/pom.xml</span>
</span><span class='line'><span class="s">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="s">&lt;project xmlns=&quot;http://maven.apache.org/</span><span class="n">POM</span><span class="s">/4.0.0&quot; xsi:schemaLocation=&quot;http://maven.apache.org/</span><span class="n">POM</span><span class="s">/4.0.0 http://maven.apache.org/</span><span class="n">xsd</span><span class="s">/maven-4.0.0.xsd&quot; xmlns:xsi=&quot;http://www.w3.org/</span><span class="mi">2001</span><span class="s">/XMLSchema-instance&quot;&gt;</span>
</span><span class='line'><span class="s">  &lt;modelVersion&gt;4.0.0&lt;/</span><span class="n">modelVersion</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">groupId</span><span class="o">&gt;</span><span class="n">org</span><span class="o">.</span><span class="na">mikeneck</span><span class="o">.</span><span class="na">sample</span><span class="o">&lt;</span><span class="s">/groupId&gt;</span>
</span><span class='line'><span class="s">  &lt;artifactId&gt;sample-project&lt;/</span><span class="n">artifactId</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">version</span><span class="o">&gt;</span><span class="mf">1.0</span><span class="o">&lt;</span><span class="s">/version&gt;</span>
</span><span class='line'><span class="s">  &lt;dependencies&gt;</span>
</span><span class='line'><span class="s">    &lt;dependency&gt;</span>
</span><span class='line'><span class="s">      &lt;groupId&gt;org.jsoup&lt;/</span><span class="n">groupId</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">artifactId</span><span class="o">&gt;</span><span class="n">jsoup</span><span class="o">&lt;</span><span class="s">/artifactId&gt;</span>
</span><span class='line'><span class="s">      &lt;version&gt;1.6.3&lt;/</span><span class="n">version</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">scope</span><span class="o">&gt;</span><span class="n">runtime</span><span class="o">&lt;</span><span class="s">/scope&gt;</span>
</span><span class='line'><span class="s">    &lt;/</span><span class="n">dependency</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="s">/dependencies&gt;</span>
</span><span class='line'><span class="s">  &lt;packaging&gt;jar&lt;/</span><span class="n">packaging</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">licenses</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">license</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">name</span><span class="o">&gt;</span><span class="n">The</span> <span class="n">Apache</span> <span class="n">Software</span> <span class="n">License</span><span class="o">,</span> <span class="n">Version</span> <span class="mf">2.0</span><span class="o">&lt;</span><span class="s">/name&gt;</span>
</span><span class='line'><span class="s">      &lt;url&gt;http://www.apache.org/</span><span class="n">license</span><span class="s">/LICENSE-2.0.txt&lt;/</span><span class="n">url</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">distribution</span><span class="o">&gt;</span><span class="n">repo</span><span class="o">&lt;</span><span class="s">/distribution&gt;</span>
</span><span class='line'><span class="s">    &lt;/</span><span class="n">license</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="s">/licenses&gt;</span>
</span><span class='line'><span class="s">&lt;/</span><span class="n">project</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これが次に実行するpublishタスクにて署名されてmaven repositoryにアップロードされます。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="o">--</span><span class="n">daemon</span> <span class="n">clean</span> <span class="n">pP</span> <span class="n">publish</span>
</span><span class='line'><span class="o">:</span><span class="n">clean</span>
</span><span class='line'><span class="o">:</span><span class="n">compileJava</span>
</span><span class='line'><span class="o">:</span><span class="n">processResources</span> <span class="n">UP</span><span class="o">-</span><span class="n">TO</span><span class="o">-</span><span class="n">DATE</span>
</span><span class='line'><span class="o">:</span><span class="n">classes</span>
</span><span class='line'><span class="o">:</span><span class="n">jar</span>
</span><span class='line'><span class="o">:</span><span class="n">javadoc</span>
</span><span class='line'><span class="o">:</span><span class="n">javadocJar</span>
</span><span class='line'><span class="o">:</span><span class="n">sourceJar</span>
</span><span class='line'><span class="o">:</span><span class="n">signArchives</span>
</span><span class='line'><span class="o">:</span><span class="n">signPom</span> <span class="n">UP</span><span class="o">-</span><span class="n">TO</span><span class="o">-</span><span class="n">DATE</span>
</span><span class='line'><span class="o">:</span><span class="n">preparePublication</span>
</span><span class='line'><span class="o">:</span><span class="n">generatePomFileForGpg</span><span class="o">-</span><span class="n">pomPublication</span>
</span><span class='line'><span class="o">:</span><span class="n">publishGpg</span><span class="o">-</span><span class="n">pomPublicationToMavenRepository</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0.pom.asc to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">IdeaProjects</span><span class="s">/sample-project/</span><span class="n">artifacts</span><span class="s">/</span>
</span><span class='line'><span class="s">Transferring 0K from remote</span>
</span><span class='line'><span class="s">Uploaded 0K</span>
</span><span class='line'><span class="s">:generatePomFileForJarSignaturesPublication</span>
</span><span class='line'><span class="s">:publishJarSignaturesPublicationToMavenRepository</span>
</span><span class='line'><span class="s">Uploading: org/</span><span class="n">mikeneck</span><span class="s">/sample/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/1.0/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">asc</span> <span class="n">to</span> <span class="n">repository</span> <span class="n">remote</span> <span class="n">at</span> <span class="nl">file:</span><span class="s">/Users/</span><span class="n">mike</span><span class="s">/IdeaProjects/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/artifacts/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">0</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">0</span><span class="n">K</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0-sources.jar.asc to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">IdeaProjects</span><span class="s">/sample-project/</span><span class="n">artifacts</span><span class="s">/</span>
</span><span class='line'><span class="s">Transferring 0K from remote</span>
</span><span class='line'><span class="s">Uploaded 0K</span>
</span><span class='line'><span class="s">Uploading: org/</span><span class="n">mikeneck</span><span class="s">/sample/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/1.0/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">javadoc</span><span class="o">.</span><span class="na">jar</span><span class="o">.</span><span class="na">asc</span> <span class="n">to</span> <span class="n">repository</span> <span class="n">remote</span> <span class="n">at</span> <span class="nl">file:</span><span class="s">/Users/</span><span class="n">mike</span><span class="s">/IdeaProjects/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/artifacts/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">0</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">0</span><span class="n">K</span>
</span><span class='line'><span class="o">:</span><span class="n">generatePomFileForMainJarPublication</span>
</span><span class='line'><span class="o">:</span><span class="n">publishMainJarPublicationToMavenRepository</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0.jar to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">IdeaProjects</span><span class="s">/sample-project/</span><span class="n">artifacts</span><span class="s">/</span>
</span><span class='line'><span class="s">Transferring 1K from remote</span>
</span><span class='line'><span class="s">Uploaded 1K</span>
</span><span class='line'><span class="s">Uploading: org/</span><span class="n">mikeneck</span><span class="s">/sample/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/1.0/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">-</span><span class="n">sources</span><span class="o">.</span><span class="na">jar</span> <span class="n">to</span> <span class="n">repository</span> <span class="n">remote</span> <span class="n">at</span> <span class="nl">file:</span><span class="s">/Users/</span><span class="n">mike</span><span class="s">/IdeaProjects/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/artifacts/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">1</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">1</span><span class="n">K</span>
</span><span class='line'><span class="nl">Uploading:</span> <span class="n">org</span><span class="s">/mikeneck/</span><span class="n">sample</span><span class="s">/sample-project/</span><span class="mf">1.0</span><span class="s">/sample-project-1.0-javadoc.jar to repository remote at file:/</span><span class="n">Users</span><span class="s">/mike/</span><span class="n">IdeaProjects</span><span class="s">/sample-project/</span><span class="n">artifacts</span><span class="o">/</span>
</span><span class='line'><span class="n">Transferring</span> <span class="mi">33</span><span class="n">K</span> <span class="n">from</span> <span class="n">remote</span>
</span><span class='line'><span class="n">Uploaded</span> <span class="mi">33</span><span class="n">K</span>
</span><span class='line'><span class="o">:</span><span class="n">publish</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUILD</span> <span class="n">SUCCESSFUL</span>
</span><span class='line'>
</span><span class='line'><span class="n">Total</span> <span class="nl">time:</span> <span class="mf">8.249</span> <span class="n">secs</span>
</span></code></pre></td></tr></table></div></figure>


<p>pom.ascファイルが無事発行されたようです。</p>

<p>それでは、適切なファイルであるかどうか、検証します。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">cd</span> <span class="n">artifacts</span><span class="s">/org/</span><span class="n">mikeneck</span><span class="s">/sample/</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="s">/1.0/</span>
</span><span class='line'><span class="n">$</span> <span class="n">gpg2</span> <span class="o">--</span><span class="n">verify</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">pom</span><span class="o">.</span><span class="na">asc</span>
</span><span class='line'><span class="nl">gpg:</span> <span class="n">Signature</span> <span class="n">made</span> <span class="err">金</span>  <span class="mi">6</span><span class="s">/21 04:56:06 2013 JST using RSA key ID ABC12345</span>
</span><span class='line'><span class="s">gpg: Good signature from &quot;Shinya Mochida (Groovy/</span><span class="n">JavaScript</span> <span class="n">Developer</span> <span class="k">in</span> <span class="n">Japan</span><span class="o">)</span> <span class="o">&lt;</span><span class="n">mike</span><span class="nd">@mikeneck.org</span><span class="o">&gt;</span><span class="err">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>適切なファイルであることが検証できたようです。</p>

<p>また、pomファイルの<code>&lt;packaging&gt;</code>の部分がちゃんと<code>jar</code>になっているか</p>

<p>確認しておきます。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">cat</span> <span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="na">pom</span>
</span><span class='line'><span class="o">&lt;?</span><span class="n">xml</span> <span class="n">version</span><span class="o">=</span><span class="s2">&quot;1.0&quot;</span> <span class="n">encoding</span><span class="o">=</span><span class="s2">&quot;UTF-8&quot;</span><span class="o">?&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">project</span> <span class="n">xmlns</span><span class="o">=</span><span class="s2">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="nl">xsi:</span><span class="n">schemaLocation</span><span class="o">=</span><span class="s2">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span> <span class="nl">xmlns:</span><span class="n">xsi</span><span class="o">=</span><span class="s2">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">modelVersion</span><span class="o">&gt;</span><span class="mf">4.0</span><span class="o">.</span><span class="mi">0</span><span class="o">&lt;</span><span class="s">/modelVersion&gt;</span>
</span><span class='line'><span class="s">  &lt;groupId&gt;org.mikeneck.sample&lt;/</span><span class="n">groupId</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">artifactId</span><span class="o">&gt;</span><span class="n">sample</span><span class="o">-</span><span class="n">project</span><span class="o">&lt;</span><span class="s">/artifactId&gt;</span>
</span><span class='line'><span class="s">  &lt;version&gt;1.0&lt;/</span><span class="n">version</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">dependencies</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">dependency</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">groupId</span><span class="o">&gt;</span><span class="n">org</span><span class="o">.</span><span class="na">jsoup</span><span class="o">&lt;</span><span class="s">/groupId&gt;</span>
</span><span class='line'><span class="s">      &lt;artifactId&gt;jsoup&lt;/</span><span class="n">artifactId</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">version</span><span class="o">&gt;</span><span class="mf">1.6</span><span class="o">.</span><span class="mi">3</span><span class="o">&lt;</span><span class="s">/version&gt;</span>
</span><span class='line'><span class="s">      &lt;scope&gt;runtime&lt;/</span><span class="n">scope</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="s">/dependency&gt;</span>
</span><span class='line'><span class="s">  &lt;/</span><span class="n">dependencies</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">packaging</span><span class="o">&gt;</span><span class="n">jar</span><span class="o">&lt;</span><span class="s">/packaging&gt;</span>
</span><span class='line'><span class="s">  &lt;licenses&gt;</span>
</span><span class='line'><span class="s">    &lt;license&gt;</span>
</span><span class='line'><span class="s">      &lt;name&gt;The Apache Software License, Version 2.0&lt;/</span><span class="n">name</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">url</span><span class="o">&gt;</span><span class="nl">http:</span><span class="c1">//www.apache.org/license/LICENSE-2.0.txt&lt;/url&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">distribution</span><span class="o">&gt;</span><span class="n">repo</span><span class="o">&lt;</span><span class="s">/distribution&gt;</span>
</span><span class='line'><span class="s">    &lt;/</span><span class="n">license</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="s">/licenses&gt;</span>
</span><span class='line'><span class="s">&lt;/</span><span class="n">project</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>ちゃんと<code>jar</code>になっているようなので、</p>

<p>全体的に成功であると判断出来ます。</p>

<h2>結論</h2>

<p>完成されたbuild.gradleファイルを再掲します。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="c1">// declaration of plugins</span>
</span><span class='line'><span class="o">[</span><span class="s1">&#39;java&#39;</span><span class="o">,</span> <span class="s1">&#39;maven-publish&#39;</span><span class="o">,</span> <span class="s1">&#39;idea&#39;</span><span class="o">,</span> <span class="s1">&#39;signing&#39;</span><span class="o">].</span><span class="na">each</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="n">it</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// dynamic properties</span>
</span><span class='line'><span class="n">ext</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">pomFilePath</span> <span class="o">=</span> <span class="s2">&quot;${project.projectDir}/tmp/pom.xml&quot;</span>
</span><span class='line'>    <span class="n">pomFile</span> <span class="o">=</span> <span class="n">file</span><span class="o">(</span><span class="n">pomFilePath</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// project information</span>
</span><span class='line'><span class="n">group</span> <span class="o">=</span> <span class="s1">&#39;org.mikeneck.sample&#39;</span>
</span><span class='line'><span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;1.0&#39;</span>
</span><span class='line'><span class="c1">// repository management</span>
</span><span class='line'><span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">mavenCentral</span> <span class="o">()</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// dependency management</span>
</span><span class='line'><span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">compile</span> <span class="s1">&#39;org.jsoup:jsoup:1.6.3&#39;</span>
</span><span class='line'>    <span class="n">testCompile</span> <span class="s1">&#39;junit:junit:4.11&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// zip sources</span>
</span><span class='line'><span class="n">task</span> <span class="nf">sourceJar</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">sourceSets</span><span class="o">.</span><span class="na">main</span><span class="o">.</span><span class="na">allJava</span>
</span><span class='line'>    <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;sources&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// zip javadoc</span>
</span><span class='line'><span class="n">task</span> <span class="nf">javadocJar</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">,</span> <span class="n">dependsOn</span> <span class="o">:</span> <span class="n">javadoc</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">javadoc</span><span class="o">.</span><span class="na">destinationDir</span>
</span><span class='line'>    <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;javadoc&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// configuration for pom signing</span>
</span><span class='line'><span class="n">configurations</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">pom</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// extract artifacts for publishing signatures</span>
</span><span class='line'><span class="n">artifacts</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">jar</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">sourceJar</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">javadocJar</span>
</span><span class='line'>    <span class="nf">if</span> <span class="o">(</span><span class="n">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">pom</span> <span class="n">pomFile</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// jar signin</span>
</span><span class='line'><span class="n">task</span> <span class="nf">signArchives</span> <span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Sign</span><span class="o">,</span> <span class="n">dependsOn</span> <span class="o">:</span> <span class="o">[</span><span class="n">jar</span><span class="o">,</span> <span class="n">sourceJar</span><span class="o">,</span> <span class="n">javadocJar</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">sign</span> <span class="n">configurations</span><span class="o">.</span><span class="na">archives</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// getting signature files</span>
</span><span class='line'><span class="kt">def</span> <span class="n">getSignatureFiles</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">allFiles</span> <span class="o">=</span> <span class="n">tasks</span><span class="o">.</span><span class="na">signArchives</span><span class="o">.</span><span class="na">signatureFiles</span><span class="o">.</span><span class="na">collect</span><span class="o">{</span><span class="n">it</span><span class="o">}</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">signedSources</span> <span class="o">=</span> <span class="n">allFiles</span><span class="o">.</span><span class="na">find</span> <span class="o">{</span> <span class="n">it</span><span class="o">.</span><span class="na">name</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s1">&#39;-sources&#39;</span><span class="o">)</span> <span class="o">}</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">signedJavadoc</span> <span class="o">=</span> <span class="n">allFiles</span><span class="o">.</span><span class="na">find</span> <span class="o">{</span> <span class="n">it</span><span class="o">.</span><span class="na">name</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s1">&#39;-javadoc&#39;</span><span class="o">)</span> <span class="o">}</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">signedJar</span> <span class="o">=</span> <span class="o">(</span><span class="n">allFiles</span> <span class="o">-</span> <span class="o">[</span><span class="n">signedSources</span><span class="o">,</span> <span class="n">signedJavadoc</span><span class="o">])[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">[</span>
</span><span class='line'>            <span class="o">[</span><span class="nl">archive:</span> <span class="n">signedSources</span><span class="o">,</span> <span class="nl">classifier:</span> <span class="s1">&#39;sources&#39;</span><span class="o">,</span> <span class="nl">extension:</span> <span class="s1">&#39;jar.asc&#39;</span><span class="o">],</span>
</span><span class='line'>            <span class="o">[</span><span class="nl">archive:</span> <span class="n">signedJavadoc</span><span class="o">,</span> <span class="nl">classifier:</span> <span class="s1">&#39;javadoc&#39;</span><span class="o">,</span> <span class="nl">extension:</span> <span class="s1">&#39;jar.asc&#39;</span><span class="o">],</span>
</span><span class='line'>            <span class="o">[</span><span class="nl">archive:</span> <span class="n">signedJar</span><span class="o">,</span>     <span class="nl">classifier:</span> <span class="kc">null</span><span class="o">,</span>      <span class="nl">extension:</span> <span class="s1">&#39;jar.asc&#39;</span><span class="o">]</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// signing pom file</span>
</span><span class='line'><span class="n">task</span> <span class="nf">signPom</span><span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Sign</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">sign</span> <span class="n">configurations</span><span class="o">.</span><span class="na">pom</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// prepare publication tasks depends on existence of pom file</span>
</span><span class='line'><span class="k">if</span> <span class="o">(</span><span class="n">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">task</span> <span class="nf">preparePublication</span> <span class="o">(</span><span class="n">dependsOn</span> <span class="o">:</span> <span class="o">[</span><span class="n">signArchives</span><span class="o">,</span> <span class="n">signPom</span><span class="o">])</span>
</span><span class='line'><span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">task</span> <span class="nf">preparePublication</span> <span class="o">(</span><span class="n">dependsOn</span> <span class="o">:</span> <span class="n">signArchives</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// getting pom signature</span>
</span><span class='line'><span class="kt">def</span> <span class="n">getPomSignature</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">project</span><span class="o">.</span><span class="na">tasks</span><span class="o">.</span><span class="na">signPom</span><span class="o">.</span><span class="na">signatureFiles</span><span class="o">.</span><span class="na">collect</span><span class="o">{</span><span class="n">it</span><span class="o">}[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// jar publication -- this will be executed last</span>
</span><span class='line'>        <span class="n">mainJar</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">from</span> <span class="n">components</span><span class="o">.</span><span class="na">java</span>
</span><span class='line'>            <span class="o">[</span>
</span><span class='line'>                    <span class="o">[</span><span class="n">jarTask</span> <span class="o">:</span> <span class="n">sourceJar</span><span class="o">,</span>  <span class="n">classifier</span> <span class="o">:</span> <span class="s1">&#39;sources&#39;</span><span class="o">,</span> <span class="n">extension</span> <span class="o">:</span> <span class="s1">&#39;jar&#39;</span><span class="o">],</span>
</span><span class='line'>                    <span class="o">[</span><span class="n">jarTask</span> <span class="o">:</span> <span class="n">javadocJar</span><span class="o">,</span> <span class="n">classifier</span> <span class="o">:</span> <span class="s1">&#39;javadoc&#39;</span><span class="o">,</span> <span class="n">extension</span> <span class="o">:</span> <span class="s1">&#39;jar&#39;</span><span class="o">]</span>
</span><span class='line'>            <span class="o">].</span><span class="na">each</span> <span class="o">{</span><span class="n">archive</span> <span class="o">-&gt;</span>
</span><span class='line'>                <span class="n">artifact</span> <span class="o">(</span><span class="n">archive</span><span class="o">.</span><span class="na">jarTask</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">classifier</span> <span class="o">=</span> <span class="n">archive</span><span class="o">.</span><span class="na">classifier</span>
</span><span class='line'>                    <span class="n">extension</span>  <span class="o">=</span> <span class="n">archive</span><span class="o">.</span><span class="na">extension</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">pom</span><span class="o">.</span><span class="na">withXml</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">Node</span> <span class="n">node</span> <span class="o">=</span> <span class="n">asNode</span><span class="o">()</span>
</span><span class='line'>                <span class="n">node</span><span class="o">.</span><span class="na">children</span><span class="o">().</span><span class="na">last</span><span class="o">()</span> <span class="o">+</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">resolveStrategy</span> <span class="o">=</span> <span class="n">Closure</span><span class="o">.</span><span class="na">DELEGATE_FIRST</span>
</span><span class='line'>                    <span class="n">packaging</span> <span class="s1">&#39;jar&#39;</span>
</span><span class='line'>                    <span class="n">licenses</span> <span class="o">{</span>
</span><span class='line'>                        <span class="n">license</span> <span class="o">{</span>
</span><span class='line'>                            <span class="n">name</span> <span class="s1">&#39;The Apache Software License, Version 2.0&#39;</span>
</span><span class='line'>                            <span class="n">url</span> <span class="s1">&#39;http://www.apache.org/license/LICENSE-2.0.txt&#39;</span>
</span><span class='line'>                            <span class="n">distribution</span> <span class="s1">&#39;repo&#39;</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(!</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">writeTo</span><span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">)</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="c1">// publication of jar signatures</span>
</span><span class='line'>        <span class="n">jarSignatures</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">getSignatureFiles</span><span class="o">().</span><span class="na">each</span> <span class="o">{</span><span class="n">signature</span> <span class="o">-&gt;</span>
</span><span class='line'>                <span class="n">artifact</span> <span class="o">(</span><span class="n">signature</span><span class="o">.</span><span class="na">archive</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">classifier</span> <span class="o">=</span> <span class="n">signature</span><span class="o">.</span><span class="na">classifier</span>
</span><span class='line'>                    <span class="n">extension</span>  <span class="o">=</span> <span class="n">signature</span><span class="o">.</span><span class="na">extension</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="c1">// publication of pom signatures depends on existence of pom file.</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>            <span class="s1">&#39;gpg-pom&#39;</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">artifact</span> <span class="o">(</span><span class="n">getPomSignature</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">classifier</span> <span class="o">=</span> <span class="kc">null</span>
</span><span class='line'>                    <span class="n">extension</span>  <span class="o">=</span> <span class="s1">&#39;pom.asc&#39;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">maven</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// siwtch repository location by existence of pom file</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">ext</span><span class="o">.</span><span class="na">pomFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// target repository</span>
</span><span class='line'>                <span class="n">url</span> <span class="s2">&quot;file:/${project.projectDir}/artifacts&quot;</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// temporary repository</span>
</span><span class='line'>                <span class="n">url</span> <span class="s2">&quot;file:/${project.projectDir}/tmp&quot;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>そして、artifactを発行するために、</p>

<p>次のコマンドを二度発行します。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="n">clean</span> <span class="n">pP</span> <span class="n">publish</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで、maven repositoryへ署名ファイル付きのリリースができるようになります。</p>

<p>次回は、今回の記事の要約文を掲載する予定です。</p>

<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gradle 1.4以降から追加されているmaven-publishプラグインでは、まだmaven central レポジトリーに上げられないようです。]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/15/publishing-artifact-with-gradles-new-maven-publish-plugin-is-currently-unavailable/"/>
    <updated>2013-06-15T15:53:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/15/publishing-artifact-with-gradles-new-maven-publish-plugin-is-currently-unavailable</id>
    <content type="html"><![CDATA[<p><img src="http://www.gradle.org/forum-assets/images/gradle_logo.gif"/></p>

<p>こんにちわ、みけです。</p>

<p>あ、また、例によって記事が長いので、</p>

<p>結論だけ見たい人は前半部分だけを見て下さい。 &ndash; 大体5分以内。</p>

<p>で、gradleでのmaven centralへのライブラリー登録方法を知りたい方は中盤部分まで読んで下さい。 &ndash; トータル15分。</p>

<p>で、僕の強引なgradle遊びまで読みたい方は最後まで読むといいかもしれません。 &ndash; トータル30分。</p>

<hr />

<p><strong>前半部分</strong></p>

<p>ここ数日gradle1.4以降についかされた<strong>maven-publish</strong>プラグインを使って</p>

<p>maven centralへのライブラリー登録方法を調べていましたが、</p>

<h1>maven-publishプラグインでのmaven central repoへの登録はまだサポートされてません</h1>

<p>ようです。</p>

<p>元記事はこちらです。</p>

<ul>
<li><a href="http://forums.gradle.org/gradle/topics/how_to_publish_artifacts_signatures_asc_files_using_maven_publish_plugin">How to publish artifacts signatures (.asc files) using maven-publish plugin?</a></li>
</ul>


<p>以下、簡単な意訳＋要約文</p>

<blockquote><h3>質問</h3>

<p>maven-publishプラグインを使ってレポジトリー情報の設定と、それと別個に、singningプラグインを使ってartifactsへのサインを行うことができますが、それらを連携させることができません。</p>

<p>どのようにすればmaven-publishプラグインで、artifactsとサインファイル(.ascファイル)をアップロードするようにできますか？</p>

<h3>回答</h3>

<p>今のところmaven-publishプラグインを使ってartifactとsignatureをアップロードすることはサポートされていません。<strong>Gradle</strong>に「.asc」ファイル(サインしたファイル)が通常のartifactではなく、特別なartifactであることを伝える手段がないことが問題となっています。</p>

<p><a href="https://github.com/gradle/gradle/blob/master/design-docs/publication-model.md">こちらのロードマップ</a>を参照下さい。なお、この機能に関する優先順位は高くありません。</p>

<h3>再質問</h3>

<p>現在、古い方法でのアップロードはサポートされていますか？それとも手作業でやらないと駄目ですか？</p>

<h3>回答</h3>

<p>古い方法でのアップロードは利用できます。</p>

<h3>提案</h3>

<p>ありがとうございました。</p>

<p>ところで、ドキュメントの方で新しいプラグインではmaven centralにアップロード出来ないという記述がないので追加してもらえますか？</p></blockquote>

<p>とのことで、maven-publishプラグインでのmaven central repoへのアップロードはまだ対応されていないようです。これはこれで従来のmavenプラグインよりも便利なので、maven centralへのアップロードも可能になって欲しいとろこです。</p>

<hr />

<p><strong>中盤部分</strong></p>

<p>なお、日本語でも情報は入手出来ますが、念の為にこちらにも記述しておきます。</p>

<h1>現状のgradleを用いたmaven centralへのアップロード方法</h1>

<p>概要は、山本裕介氏のこちらの記事を参照して下さい。</p>

<ul>
<li><a href="http://samuraism.jp/diary/2012/05/03/1336047480000.html">【最新版】Maven Central Repository へのライブラリ登録方法 #maven</a></li>
</ul>


<p>また、gradleでの方法についてはこちらを参照して下さい。</p>

<ul>
<li><a href="http://jedicoder.blogspot.jp/2011/11/automated-gradle-project-deployment-to.html">Automated Gradle project deployment to Sonatype OSS Repository(英語)</a></li>
<li><a href="http://d.hatena.ne.jp/int128/20130409/1365434513">GradleでMaven Central Repositoryに成果物をリリースする(日本語)</a></li>
</ul>


<p>両方の記事に共通していますが、Sonatypeからmaven centralにアップロードする場合は、</p>

<ul>
<li>PGPによる署名の作成</li>
<li>求められた規約の順守</li>
</ul>


<p>が求められます。</p>

<h3>なんでこんな面倒くさいのか？</h3>

<p>maven centralにおいてあるライブラリーの品質や、pomなどの情報がバラバラで、一定の品質を保てなかったからのようです。</p>

<p>詳しくはこちらをお読み下さい(英語)。</p>

<ul>
<li><a href="http://www.sonatype.com/people/2010/01/nexus-oss-ecosystem/">Improve The Central Repository and the Supporting the Maven Ecosystem</a></li>
</ul>


<p>central repositoryの品質向上のためにmaven central repoでは下記の規約を儲けています。</p>

<h3>pom.xmlへの要求事項</h3>

<ul>
<li><code>&lt;modelVersion&gt;</code> &ndash; <code>4.0.0</code>を設定する</li>
<li><code>&lt;groupId&gt;</code> &ndash; 申請するときにもgroupIdの申請が必要です。Sonatypeに申請するときはベースになるドメイン名で申請する必要があります。例えば、「<code>org.mikeneck</code>」は大丈夫ですが、「<code>mikeneck</code>」という<strong>groupId</strong>では駄目です。</li>
<li><code>&lt;artifactId&gt;</code> &ndash; ライブラリーの名前ですね。</li>
<li><code>&lt;version&gt;</code> &ndash; バージョン番号です。なお、<code>1.0.0-SNAPSHOT</code>というような<code>SNAPSHOT</code>というバージョンはSonatypeではmaven central repoには乗せてくれませんの、注意して下さい。</li>
<li><code>&lt;packaging&gt;</code> &ndash; 基本的には<code>jar</code>です。</li>
<li><code>&lt;name&gt;</code> &ndash; プロジェクトの名前です。</li>
<li><code>&lt;description&gt;</code> &ndash; ライブラリーに関する情報です。何をしてくれるライブラリーであるかを記述します。</li>
<li><code>&lt;url&gt;</code> &ndash; プロジェクトのurlを設定します。</li>
<li><code>&lt;licenses&gt;</code> &ndash; ライセンスに関する情報を設定します。中には下記の情報が一つ以上入っていることが求められます。</li>
<li><code>&lt;license&gt;&lt;name&gt;</code> &ndash; ライセンス名(ApacheライセンスとかLGPLとか)</li>
<li><code>&lt;license&gt;&lt;url&gt;</code> &ndash; ライセンス条項のurlを記述します</li>
<li><code>&lt;license&gt;&lt;distribution&gt;</code> &ndash; <code>repo</code>を設定します。</li>
<li><code>&lt;scm&gt;&lt;url&gt;</code> &ndash; レポジトリーのurlを記述します。git-hubの場合はsshのアドレス設定します。bitbucketのMercurialの場合はレポジトリーをWebで見る場合のurlを記述します。</li>
<li><code>&lt;scm&gt;&lt;connection&gt;</code> &ndash; git-hubであればsshのところで得られるurlの先頭に<code>scm:git:</code>を加えます。bitbucketのMercurialの場合はWebで見る場合のアドレスの先頭に<code>scm:hg:</code>を付与します。</li>
<li><code>&lt;developers&gt;</code> &ndash; 開発者情報を記入します。その中の構成は次のとおりです。</li>
<li><code>&lt;developer&gt;&lt;id&gt;</code> &ndash; 開発者のID。通名とかでも良いようです。僕の場合は<code>mike_neck</code>を記入します。</li>
<li><code>&lt;developer&gt;&lt;name&gt;</code> &ndash; 開発者の名前です。僕の場合は<code>Shinya Mochida</code>になります。</li>
<li><code>&lt;developer&gt;&lt;email&gt;</code> &ndash; 開発者のメールアドレスです。僕の場合は<code>mike &lt;at&gt; mikeneck.org</code>としています。</li>
</ul>


<h3>配布するファイルへの規約</h3>

<ul>
<li><code>&lt;packaging&gt;</code>が<code>jar</code>の場合にはjarファイルにはjavaクラスが入っていること</li>
<li>名前が<code>projectname-version-javadoc.jar</code>というjavadocのjarが入っていること</li>
<li>名前が<code>projectname-version-sources.jar</code>というソースのjarが入っていること</li>
<li>すべてのartifact(<code>pom.xml</code>、<code>projectname-version.jar</code>、<code>projectname-version-javadoc.jar</code>、<code>projectname-version-sources.jar</code>)に対してPGPによる署名がなされていること</li>
<li>公開鍵が公開鍵サーバーから取得可能になっていること</li>
</ul>


<p>となっています。</p>

<p>また、何らかの理由でjavadocのjarやsourcesのjarが作られない場合でも、READMEというファイルを含んだjavadocのjarよsourcesのjarを作る必要があります。</p>

<h3>gradleでmaven centralにアップロードするためのbuild.gradle</h3>

<p>では、サンプルのbuild.gradleをここに上げておきます。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="o">[</span><span class="s1">&#39;groovy&#39;</span><span class="o">,</span> <span class="s1">&#39;signing&#39;</span><span class="o">,</span> <span class="s1">&#39;maven&#39;</span><span class="o">,</span> <span class="s1">&#39;idea&#39;</span><span class="o">].</span><span class="na">each</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="n">it</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// project information</span>
</span><span class='line'><span class="n">sourceCompatibility</span> <span class="o">=</span> <span class="n">jdkVersion</span>
</span><span class='line'><span class="n">targetCompatibility</span> <span class="o">=</span> <span class="n">jdkVersion</span>
</span><span class='line'><span class="n">group</span> <span class="o">=</span> <span class="s1">&#39;org.jojo.sample&#39;</span>
</span><span class='line'><span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;1.0&#39;</span>
</span><span class='line'><span class="c1">// dependency management</span>
</span><span class='line'><span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">mavenCentral</span> <span class="o">()</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">compile</span> <span class="s1">&#39;org.codehaus.groovy:groovy-all:2.1.3&#39;</span>
</span><span class='line'>    <span class="n">testCompile</span> <span class="s1">&#39;org.spockframework:spock-core:0.7-groovy-2.0&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// compile options</span>
</span><span class='line'><span class="n">tasks</span><span class="o">.</span><span class="na">withType</span><span class="o">(</span><span class="n">Compile</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">options</span><span class="o">.</span><span class="na">encoding</span> <span class="o">=</span> <span class="s1">&#39;UTF-8&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// javadoc settings (making template locale en_US)</span>
</span><span class='line'><span class="n">javadoc</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">options</span><span class="o">.</span><span class="na">locale</span> <span class="o">=</span> <span class="s1">&#39;en_US&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// creating jars</span>
</span><span class='line'><span class="n">task</span> <span class="nf">sourcesJar</span> <span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;sources&#39;</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">sourceSets</span><span class="o">.</span><span class="na">main</span><span class="o">.</span><span class="na">allSource</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">task</span> <span class="nf">javadocJar</span> <span class="o">(</span><span class="n">type</span> <span class="o">:</span> <span class="n">Jar</span><span class="o">,</span> <span class="n">dependsOn</span> <span class="o">:</span> <span class="n">javadoc</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">classifier</span> <span class="o">=</span> <span class="s1">&#39;javadoc&#39;</span>
</span><span class='line'>    <span class="n">from</span> <span class="n">javadoc</span><span class="o">.</span><span class="na">destinationDir</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// collect artifacts to be signed</span>
</span><span class='line'><span class="n">artifacts</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">jar</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">sourceJar</span>
</span><span class='line'>    <span class="n">archives</span> <span class="n">javadocJar</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// sign artifacts</span>
</span><span class='line'><span class="n">signing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">sign</span> <span class="n">configurations</span><span class="o">.</span><span class="na">archives</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// uploading artifacts</span>
</span><span class='line'><span class="n">uploadArchives</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">repositories</span><span class="o">.</span><span class="na">mavenDeployer</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">beforeDeployment</span> <span class="o">{</span><span class="n">MavenDeployment</span> <span class="n">deployment</span> <span class="o">-&gt;</span>
</span><span class='line'>            <span class="n">signPom</span><span class="o">(</span><span class="n">deployment</span><span class="o">)</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">repository</span> <span class="o">(</span><span class="n">url</span> <span class="o">:</span> <span class="n">sonatypeUrl</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">authentication</span> <span class="o">(</span>
</span><span class='line'>                    <span class="n">userName</span> <span class="o">:</span> <span class="n">sonatypeUsername</span><span class="o">,</span>
</span><span class='line'>                    <span class="n">password</span> <span class="o">:</span> <span class="n">sonatypePassword</span><span class="o">)</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">pom</span><span class="o">.</span><span class="na">project</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">name</span> <span class="n">project</span><span class="o">.</span><span class="na">name</span>
</span><span class='line'>            <span class="n">packaging</span> <span class="s1">&#39;jar&#39;</span>
</span><span class='line'>            <span class="n">description</span> <span class="s1">&#39;sample project&#39;</span>
</span><span class='line'>            <span class="n">url</span> <span class="n">projectUrl</span>
</span><span class='line'>            <span class="n">licenses</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">license</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">name</span> <span class="s1">&#39;The Apache Software License, Version 2.0&#39;</span>
</span><span class='line'>                    <span class="n">url</span> <span class="s1">&#39;http://www.apache.org/license/LICENSE-2.0.txt&#39;</span>
</span><span class='line'>                    <span class="n">distribution</span> <span class="s1">&#39;repo&#39;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">scm</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">url</span> <span class="n">githubUrl</span>
</span><span class='line'>                <span class="n">connection</span> <span class="s2">&quot;scm:git:${githubUrl}&quot;</span>
</span><span class='line'>                <span class="n">developerConnection</span> <span class="s2">&quot;scm:git:${githubUrl}&quot;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="n">developers</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">developer</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">id</span> <span class="s1">&#39;jojo&#39;</span>
</span><span class='line'>                    <span class="n">name</span> <span class="s1">&#39;Jonathan Joester&#39;</span>
</span><span class='line'>                    <span class="n">email</span> <span class="s1">&#39;mike &lt;at&gt; mikeneck.org&#39;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>また、よく使いまわす変数については<code>gradle.properties</code>に書いておきます。</p>

<figure class='code'><figcaption><span>gradle.properties</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">jdkVersion</span><span class="o">=</span>1.7
</span><span class='line'><span class="nv">projectUrl</span><span class="o">=</span>https://github.com/mike-neck/mike-neck.github.com
</span><span class='line'><span class="nv">github</span><span class="o">=</span>git@github.com:mike-neck/mike-neck.github.com.git
</span></code></pre></td></tr></table></div></figure>


<p>また、署名関連の変数などについては<code>~/.gradle/gradle.properties</code>に書いておきます。</p>

<figure class='code'><figcaption><span>gradle.properties</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># siging information</span>
</span><span class='line'>signing.keyId<span class="o">=</span>ABCD1234
</span><span class='line'>signing.password<span class="o">=</span>HOGEpassword00
</span><span class='line'>signing.secretKeyRingFile<span class="o">=</span>/Users/username/.gnupg/secring.gpg
</span><span class='line'><span class="c"># sonatype information</span>
</span><span class='line'><span class="nv">sonatypeUrl</span><span class="o">=</span>https://oss.sonatype.org/service/local/staging/deploy/maven2/
</span><span class='line'><span class="nv">sonatypeUsername</span><span class="o">=</span>username
</span><span class='line'><span class="nv">sonatypePassword</span><span class="o">=</span>password
</span></code></pre></td></tr></table></div></figure>


<p>あとは、<code>gradle</code>コマンドで<code>uploadArchives</code>を記述すれば、</p>

<p>Sonatypeの方にアップロードされます。</p>

<figure class='code'><figcaption><span>gradle.properties</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gradle uploadArchives
</span></code></pre></td></tr></table></div></figure>


<p>なお、事前にSonatypeでの<a href="http://goo.gl/XXfRl">JIRAでissueを登録しておくこと</a>や、</p>

<p><a href="http://goo.gl/w9Exz">Nexus UIで最終的なステージング操作</a>をする必要があります。</p>

<p>参考までに、僕が以前作ったissueのリンクを張っておきます。</p>

<p><a href="https://issues.sonatype.org/browse/OSSRH-4119">OSSRH-4119 request for creating repository for Graffiti-mike</a></p>

<p><a href="https://googledrive.com/host/0B4hhdHWLP7RRN0diTW1CSGptaHM"><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRN0diTW1CSGptaHM" style="width : 520px;"/></a></p>

<p>中盤終わり</p>

<hr />

<h3>gradleであそぶコーナー</h3>

<p><strong>TBD</strong>と書きたいのですが…</p>

<p>上記の古いgradleでのアーカイブアップロードの方法は、</p>

<p>やや難点があります。</p>

<figure class='code'><figcaption><span>gradle.properties</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gradle tasks
</span><span class='line'>------------------------------------------------------------
</span><span class='line'>All tasks runnable from root project
</span><span class='line'>------------------------------------------------------------
</span><span class='line'>
</span><span class='line'>Build tasks
</span><span class='line'>-----------
</span><span class='line'>assemble - Assembles the outputs of this project.
</span><span class='line'>build - Assembles and tests this project.
</span><span class='line'>buildDependents - Assembles and tests this project and all projects that depend on it.
</span><span class='line'>buildNeeded - Assembles and tests this project and all projects it depends on.
</span><span class='line'>clean - Deletes the build directory.
</span><span class='line'>jar - Assembles a jar archive containing the main classes.
</span><span class='line'>
</span><span class='line'>Documentation tasks
</span><span class='line'>-------------------
</span><span class='line'>groovydoc - Generates Groovydoc API documentation <span class="k">for </span>the main <span class="nb">source </span>code.
</span><span class='line'>javadoc - Generates Javadoc API documentation <span class="k">for </span>the main <span class="nb">source </span>code.
</span><span class='line'>
</span><span class='line'>Help tasks
</span><span class='line'>----------
</span><span class='line'>dependencies - Displays all dependencies declared in root project <span class="s1">&#39;properties-builder&#39;</span>.
</span><span class='line'>dependencyInsight - Displays the insight into a specific dependency in root project <span class="s1">&#39;properties-builder&#39;</span>.
</span><span class='line'><span class="nb">help</span> - Displays a <span class="nb">help </span>message
</span><span class='line'>projects - Displays the sub-projects of root project <span class="s1">&#39;properties-builder&#39;</span>.
</span><span class='line'>properties - Displays the properties of root project <span class="s1">&#39;properties-builder&#39;</span>.
</span><span class='line'>tasks - Displays the tasks runnable from root project <span class="s1">&#39;properties-builder&#39;</span> <span class="o">(</span>some of the displayed tasks may belong to subprojects<span class="o">)</span>.
</span><span class='line'>
</span><span class='line'>IDE tasks
</span><span class='line'>---------
</span><span class='line'>cleanIdea - Cleans IDEA project files <span class="o">(</span>IML, IPR<span class="o">)</span>
</span><span class='line'>idea - Generates IDEA project files <span class="o">(</span>IML, IPR, IWS<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Upload tasks
</span><span class='line'>------------
</span><span class='line'>uploadArchives - Uploads all artifacts belonging to configuration <span class="s1">&#39;:archives&#39;</span>
</span><span class='line'>
</span><span class='line'>Verification tasks
</span><span class='line'>------------------
</span><span class='line'>check - Runs all checks.
</span><span class='line'><span class="nb">test</span> - Runs the unit tests.
</span><span class='line'>
</span><span class='line'>Other tasks
</span><span class='line'>-----------
</span><span class='line'>cleanIdeaWorkspace
</span><span class='line'>install - Installs the <span class="s1">&#39;archives&#39;</span> artifacts into the <span class="nb">local </span>Maven repository.
</span><span class='line'>wrapper
</span><span class='line'>
</span><span class='line'>Rules
</span><span class='line'>-----
</span><span class='line'>Pattern: build&lt;ConfigurationName&gt;: Assembles the artifacts of a configuration.
</span><span class='line'>Pattern: upload&lt;ConfigurationName&gt;: Assembles and uploads the artifacts belonging to a configuration.
</span><span class='line'>Pattern: clean&lt;TaskName&gt;: Cleans the output files of a task.
</span><span class='line'>
</span><span class='line'>To see all tasks and more detail, run with --all.
</span><span class='line'>
</span><span class='line'>BUILD SUCCESSFUL
</span><span class='line'>
</span><span class='line'>Total <span class="nb">time</span>: 10.478 secs
</span></code></pre></td></tr></table></div></figure>


<p>uploadArchivesのところを見ると、</p>

<p><code>archives</code> configurationに登録されているすべてのartifactsをアップロードする</p>

<p>と書かれています。</p>

<p>ただ、これだと、ひとつのアップロードしか書いていくことができないので、</p>

<p>非常に面倒です。</p>

<p>たとえば、こういった局面があります。</p>

<ul>
<li>in-houseリポジトリーにも登録する</li>
<li>maven centralにも登録する</li>
<li>異なるartifactsをアップロードする</li>
<li>dependenciesにトリッキーなことをしているので、dependenciesの記述を書き換えたい</li>
</ul>


<p>こういったケースでは、</p>

<p>一つ一つ別々のタスクとして記述をしていかないとできない場合があります。</p>

<p>gradleは柔軟性も求めるツールなので、</p>

<p>これらの要望も吸収して</p>

<p>簡単な記述でできるように常に進化を遂げています。</p>

<p>それを満たす機能が、今回のテーマの<strong>maven-publish</strong>プラグインです。</p>

<p><strong>maven-publish</strong>プラグインでは<code>archives</code> configuration以外の成果物も</p>

<p>柔軟に発行できますし、依存性を書き換えることもできます。</p>

<p>記述はこんな感じになります。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="o">[</span><span class="s1">&#39;groovy&#39;</span><span class="o">,</span> <span class="s1">&#39;maven-publish&#39;</span><span class="o">].</span><span class="na">each</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="n">it</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">// 中略</span>
</span><span class='line'><span class="n">publishing</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">publications</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">ourMavenServer</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">from</span> <span class="n">components</span><span class="o">.</span><span class="na">java</span>
</span><span class='line'>            <span class="n">artifact</span> <span class="n">sourceJar</span>
</span><span class='line'>            <span class="n">pom</span><span class="o">.</span><span class="na">withXml</span> <span class="o">{</span>
</span><span class='line'>                <span class="kt">def</span> <span class="n">node</span> <span class="o">=</span> <span class="n">asNode</span><span class="o">()</span>
</span><span class='line'>                <span class="n">node</span><span class="o">.</span><span class="na">removeNode</span><span class="o">(</span><span class="n">node</span><span class="o">.</span><span class="na">dependencies</span><span class="o">[</span><span class="mi">0</span><span class="o">])</span>
</span><span class='line'>                <span class="n">asNode</span><span class="o">().</span><span class="na">children</span><span class="o">().</span><span class="na">last</span><span class="o">()</span> <span class="o">+</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">resolveStrategy</span> <span class="o">=</span> <span class="n">CLosure</span><span class="o">.</span><span class="na">DELEGATE_FIRST</span>
</span><span class='line'>                    <span class="c1">// writing additional pom elements with builder style</span>
</span><span class='line'>                    <span class="n">name</span> <span class="s1">&#39;our-subproject&#39;</span>
</span><span class='line'>                    <span class="n">description</span> <span class="s1">&#39;our-subproject description&#39;</span>
</span><span class='line'>                    <span class="n">url</span> <span class="s1">&#39;https://www.google.com&#39;</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>                <span class="c1">// overwrite dependencies</span>
</span><span class='line'>                <span class="n">asNode</span><span class="o">().</span><span class="na">dependencies</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">replaceNode</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">resolveStrategy</span> <span class="o">=</span> <span class="n">Closure</span><span class="o">.</span><span class="na">DELEGATE_FIRST</span>
</span><span class='line'>                    <span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>                        <span class="kt">def</span> <span class="n">dep</span> <span class="o">=</span> <span class="n">project</span><span class="o">.</span><span class="na">configurations</span><span class="o">.</span><span class="na">another</span><span class="o">.</span><span class="na">dependencies</span>
</span><span class='line'>                        <span class="n">dep</span><span class="o">.</span><span class="na">each</span> <span class="o">{</span><span class="n">d</span> <span class="o">-&gt;</span>
</span><span class='line'>                            <span class="n">dependency</span> <span class="o">{</span>
</span><span class='line'>                                <span class="n">groupId</span> <span class="n">d</span><span class="o">.</span><span class="na">group</span>
</span><span class='line'>                                <span class="n">artifactId</span> <span class="n">d</span><span class="o">.</span><span class="na">name</span>
</span><span class='line'>                                <span class="n">version</span> <span class="n">d</span><span class="o">.</span><span class="na">version</span>
</span><span class='line'>                                <span class="n">scope</span> <span class="s1">&#39;compile&#39;</span>
</span><span class='line'>                            <span class="o">}</span>
</span><span class='line'>                        <span class="o">}</span>
</span><span class='line'>                    <span class="o">}</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">repositories</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">maven</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">name</span> <span class="s1">&#39;in-house&#39;</span>
</span><span class='line'>            <span class="n">url</span> <span class="s1">&#39;https://repos.mycompany.com/nexus/service/local/staging/deploy/maven2/&#39;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記の例でやっていることは</p>

<ul>
<li>ドキュメント読まないのでclassesとsourcesだけをアーカイブ化</li>
<li>ちろっとpom.xmlに情報を追加</li>
<li>dependenciesを書き換え</li>
</ul>


<p>一般常識的に考えれば、dependenciesの書き換えはマズイと思われますが…</p>

<p>某有名なライブラリーのpom.xmlでありもしないartifactを参照しているライブラリーがあり、</p>

<p><code>compile</code> configurationではプロジェクトのdependencyを指定するのではなく、</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">configurations</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">another</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>と異なるconfigurationを設定して、</p>

<p>プロジェクトのdependencyを設定する場合などがあります。</p>

<p>某有名ライブラリーとは<strong>org.eclipse.jetty:jetty-server</strong>というんですけどね…</p>

<hr />

<p>さて、もう少し遊んでいるんですが、</p>

<p>それは別の記事にしますね。</p>

<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gradleのjavadocタスクでjavadocを英語で出力する方法]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/13/how-to-generate-javadoc-in-english-on-japanese-environment/"/>
    <updated>2013-06-13T22:39:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/13/how-to-generate-javadoc-in-english-on-japanese-environment</id>
    <content type="html"><![CDATA[<p><img src="http://www.gradle.org/img/gradle_logo.gif"/></p>

<p>こんにちわ、みけです。</p>

<p>表題の件はこの記事の前半部分に書いています。</p>

<p>なので、必要な人は前半部分だけ読んで下さい。</p>

<hr />

<p>大した話ではありませんが、</p>

<h1>gradleのjavadocタスクで出力されるjavadocが日本語で出力される</h1>

<p>のがちょっと残念な時があります。</p>

<p><code>java</code>プラグインを入れていれば、<code>javadoc</code>タスクが自動で追加されます。</p>

<p>僕のような日本語環境でやっている人だと、</p>

<p>頑張ってjavadocを英語で書いても、</p>

<p>テンプレートが日本語で出力されてしまいます。</p>

<p>会社で日本語を使っていて、</p>

<p>javadocが日本語でないと困る場合は、</p>

<p>全然問題ないとおもいますが…</p>

<p>オープンソースなソフトウェアを開発している場合、</p>

<p>javadocが日本語だとなんか若干困ります。</p>

<p>(まあ、だいたいjavadocのテンプレートなんで、何が出力されているかなんてわかりますけどね…)</p>

<h1><code>javadoc</code>タスクの設定で<code>options.locale</code>に<code>en_US</code>を指定すればいいです</h1>

<p>つまり、以下のとおりになります。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="s1">&#39;java&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">javadoc</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">options</span><span class="o">.</span><span class="na">locale</span> <span class="o">=</span> <span class="s1">&#39;en_US&#39;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>本題、終わり</strong></p>

<hr />

<p>ちなみに、僕の得意技はtypoなので、間違えてこんなビルドスクリプト書いてました。</p>

<p><strong>(誤)</strong></p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="s1">&#39;java&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">javadoc</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">options</span><span class="o">.</span><span class="na">local</span> <span class="o">=</span> <span class="s1">&#39;en_US&#39;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これを実行したら、こんなエラーが出力されました。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">gradle</span> <span class="n">javadoc</span>
</span><span class='line'><span class="n">Picked</span> <span class="n">up</span> <span class="nl">_JAVA_OPTIONS:</span> <span class="o">-</span><span class="n">Dfile</span><span class="o">.</span><span class="na">encoding</span><span class="o">=</span><span class="n">UTF</span><span class="o">-</span><span class="mi">8</span>
</span><span class='line'>
</span><span class='line'><span class="nl">FAILURE:</span> <span class="n">Build</span> <span class="n">failed</span> <span class="n">with</span> <span class="n">an</span> <span class="n">exception</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="nl">Where:</span>
</span><span class='line'><span class="n">Script</span> <span class="s1">&#39;/Users/mike/myprojects/sample/build.gradle&#39;</span> <span class="nl">line:</span> <span class="mi">4</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="n">What</span> <span class="n">went</span> <span class="nl">wrong:</span>
</span><span class='line'><span class="n">A</span> <span class="n">problem</span> <span class="n">occurred</span> <span class="n">evaluating</span> <span class="n">script</span><span class="o">.</span>
</span><span class='line'><span class="o">&gt;</span> <span class="n">No</span> <span class="n">such</span> <span class="nl">property:</span> <span class="n">local</span> <span class="k">for</span> <span class="nl">class:</span> <span class="n">org</span><span class="o">.</span><span class="na">gradle</span><span class="o">.</span><span class="na">external</span><span class="o">.</span><span class="na">javadoc</span><span class="o">.</span><span class="na">StandardJavadocDocletOptions</span>
</span><span class='line'>  <span class="n">Possible</span> <span class="nl">solutions:</span> <span class="n">locale</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="nl">Try:</span>
</span><span class='line'><span class="n">Run</span> <span class="n">with</span> <span class="o">--</span><span class="n">stacktrace</span> <span class="n">option</span> <span class="n">to</span> <span class="n">get</span> <span class="n">the</span> <span class="n">stack</span> <span class="n">trace</span><span class="o">.</span> <span class="n">Run</span> <span class="n">with</span> <span class="o">--</span><span class="n">info</span> <span class="n">or</span> <span class="o">--</span><span class="n">debug</span> <span class="n">option</span> <span class="n">to</span> <span class="n">get</span> <span class="n">more</span> <span class="n">log</span> <span class="n">output</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="n">BUILD</span> <span class="n">FAILED</span>
</span><span class='line'>
</span><span class='line'><span class="n">Total</span> <span class="nl">time:</span> <span class="mf">8.941</span> <span class="n">secs</span>
</span></code></pre></td></tr></table></div></figure>


<p>gradle曰く</p>

<blockquote><p><code>local</code>なんてオプションないよ、<code>locale</code>じゃない？</p></blockquote>

<p>というわけで、</p>

<h1>gradleさん正しい答えを教えてくれたりと、親切ですね。</h1>

<p>本当に親切なツールです。</p>

<p>しかし、</p>

<h1>本当に親切なのはgroovyの思想</h1>

<p>です。</p>

<p>例えば次のようなgroovyのスクリプトがあるとします。</p>

<figure class='code'><figcaption><span>error.groovy</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="kt">def</span> <span class="n">range</span> <span class="o">=</span> <span class="mi">1</span><span class="o">..</span><span class="mi">10</span>
</span><span class='line'><span class="n">range</span><span class="o">.</span><span class="na">colect</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">println</span> <span class="o">(</span><span class="n">it</span> <span class="o">*</span> <span class="n">it</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これを実行するとこういうエラーが出力されます。</p>

<figure class='code'><figcaption><span>error.groovy</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">groovy</span> <span class="n">error</span><span class="o">.</span><span class="na">groovy</span>
</span><span class='line'><span class="nl">Caught:</span> <span class="n">groovy</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">MissingMethodException</span><span class="o">:</span> <span class="n">No</span> <span class="n">signature</span> <span class="n">of</span> <span class="nl">method:</span> <span class="n">groovy</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">IntRange</span><span class="o">.</span><span class="na">colect</span><span class="o">()</span> <span class="n">is</span> <span class="n">applicable</span> <span class="k">for</span> <span class="n">argument</span> <span class="nl">types:</span> <span class="o">(</span><span class="n">error$_run_closure1</span><span class="o">)</span> <span class="nl">values:</span> <span class="o">[</span><span class="n">error$_run_closure1</span><span class="err">@</span><span class="mi">639</span><span class="n">d564</span><span class="o">]</span>
</span><span class='line'><span class="n">Possible</span> <span class="nl">solutions:</span> <span class="n">collect</span><span class="o">(),</span> <span class="n">collect</span><span class="o">(),</span> <span class="n">collect</span><span class="o">(</span><span class="n">groovy</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Closure</span><span class="o">),</span> <span class="n">collect</span><span class="o">(</span><span class="n">groovy</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Closure</span><span class="o">),</span> <span class="n">collect</span><span class="o">(</span><span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">Collection</span><span class="o">,</span> <span class="n">groovy</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Closure</span><span class="o">),</span> <span class="n">collect</span><span class="o">(</span><span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">Collection</span><span class="o">,</span> <span class="n">groovy</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Closure</span><span class="o">)</span>
</span><span class='line'><span class="n">groovy</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">MissingMethodException</span><span class="o">:</span> <span class="n">No</span> <span class="n">signature</span> <span class="n">of</span> <span class="nl">method:</span> <span class="n">groovy</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">IntRange</span><span class="o">.</span><span class="na">colect</span><span class="o">()</span> <span class="n">is</span> <span class="n">applicable</span> <span class="k">for</span> <span class="n">argument</span> <span class="nl">types:</span> <span class="o">(</span><span class="n">error$_run_closure1</span><span class="o">)</span> <span class="nl">values:</span> <span class="o">[</span><span class="n">error$_run_closure1</span><span class="err">@</span><span class="mi">639</span><span class="n">d564</span><span class="o">]</span>
</span><span class='line'><span class="n">Possible</span> <span class="nl">solutions:</span> <span class="n">collect</span><span class="o">(),</span> <span class="n">collect</span><span class="o">(),</span> <span class="n">collect</span><span class="o">(</span><span class="n">groovy</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Closure</span><span class="o">),</span> <span class="n">collect</span><span class="o">(</span><span class="n">groovy</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Closure</span><span class="o">),</span> <span class="n">collect</span><span class="o">(</span><span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">Collection</span><span class="o">,</span> <span class="n">groovy</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Closure</span><span class="o">),</span> <span class="n">collect</span><span class="o">(</span><span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">Collection</span><span class="o">,</span> <span class="n">groovy</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Closure</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">error</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">error</span><span class="o">.</span><span class="na">groovy</span><span class="o">:</span><span class="mi">2</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>存在しないメソッドを呼び出した時に、</p>

<p><strong>Possible solutions</strong>ということで、</p>

<p>サジェストしてくれます。</p>

<p>また、有名な例ですが、Power Assertもあります。</p>

<figure class='code'><figcaption><span>error.groovy</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="kt">def</span> <span class="n">list</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">]</span>
</span><span class='line'><span class="k">assert</span> <span class="n">list</span> <span class="o">-</span> <span class="o">[</span><span class="mi">1</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">6</span><span class="o">]</span> <span class="o">==</span> <span class="o">[</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>これを実行すると、このように表示されます。</p>

<figure class='code'><figcaption><span>error.groovy</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">$</span> <span class="n">groovy</span> <span class="n">error</span><span class="o">.</span><span class="na">groovy</span>
</span><span class='line'><span class="nl">Caught:</span> <span class="n">Assertion</span> <span class="nl">failed:</span>
</span><span class='line'>
</span><span class='line'><span class="k">assert</span> <span class="n">list</span> <span class="o">-</span> <span class="o">[</span><span class="mi">1</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">6</span><span class="o">]</span> <span class="o">==</span> <span class="o">[</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">]</span>
</span><span class='line'>       <span class="o">|</span>    <span class="o">|</span>         <span class="o">|</span>
</span><span class='line'>       <span class="o">|</span>    <span class="o">[</span><span class="mi">2</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">5</span><span class="o">]</span> <span class="kc">false</span>
</span><span class='line'>       <span class="o">[</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">5</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">Assertion</span> <span class="nl">failed:</span>
</span><span class='line'>
</span><span class='line'><span class="k">assert</span> <span class="n">list</span> <span class="o">-</span> <span class="o">[</span><span class="mi">1</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">6</span><span class="o">]</span> <span class="o">==</span> <span class="o">[</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">]</span>
</span><span class='line'>       <span class="o">|</span>    <span class="o">|</span>         <span class="o">|</span>
</span><span class='line'>       <span class="o">|</span>    <span class="o">[</span><span class="mi">2</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">5</span><span class="o">]</span> <span class="kc">false</span>
</span><span class='line'>       <span class="o">[</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">5</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">at</span> <span class="n">error</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">error</span><span class="o">.</span><span class="na">groovy</span><span class="o">:</span><span class="mi">2</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>ただ、求めている結果と実際の結果が<strong>違う</strong>という表示だけでなく、</p>

<p>実際の値を示してくれます。</p>

<p>つまり一言で言えば、</p>

<h1>groovyの半分は優しさでできています</h1>

<p>なお、この機能はもともとからgroovyにあったわけではなく、</p>

<p>Spockというテスティングフレームワークから採用された機能です。</p>

<p>groovyの思想では、こういった、(・∀・)ｲｲﾈ!!な機能を</p>

<p>どんどん取り込んでいくというのがあると思っています。</p>

<p>まあ、元々、javaを良い感じで書きたいといった思想から生まれている言語ですし、</p>

<p>実際に、rubyなど他の言語のいいところを借りたりしているので、</p>

<p>後発の優位性を遺憾なく発揮しているわけですが…</p>

<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gradleプロジェクトは、gradleを使うよりも、gradlewを使うことがオススメです]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/13/opening-gradle-slash-gradle-with-gradle-will-fail-please-use-gradlew/"/>
    <updated>2013-06-13T02:41:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/13/opening-gradle-slash-gradle-with-gradle-will-fail-please-use-gradlew</id>
    <content type="html"><![CDATA[<p><img src="http://www.gradle.org/img/gradle_logo.gif"/></p>

<p>みけです。</p>

<p>最近、Java開発者のgradleへの注目には眼を見張るものがあります。</p>

<p>gradle1.0-m2くらいから使っていた僕も、</p>

<p>参考になるような記事がたくさんあります。</p>

<p>みなさんありがとうございます。</p>

<h1>gradleのすばらしさ</h1>

<p>僕はgradleいいよという時に、いつも聞かれるのですが、</p>

<h3>AntとMavenにくらべてgradleの何がいいの？</h3>

<p>という質問があります。</p>

<p>DSLで書けるとか、</p>

<p>dependencyの指定が簡単とか、</p>

<p>まあ、各種ツールに精通すれば、</p>

<p>別にantでもmavenでも変わりません。</p>

<p>あえてそれでもgradleを選ぶ理由を上げるなら、</p>

<p><strong>gradle wrapper</strong>の存在です。</p>

<p>チームで開発する場合、開発環境をチーム内で同じにしておくことが重要です。</p>

<p>メンバーの開発マシンの</p>

<p>antのバーション、mavenのバージョン、</p>

<p>これらが違ったということでビルドに失敗して、</p>

<p>その原因追求のために時間がかかるということも</p>

<p>よくある話です。</p>

<p>一方で、gradleでは</p>

<p><strong>gradle wrapper</strong>を用いれば、</p>

<p>ビルドツールのバージョンに振り回されることはありません。</p>

<p>あまりピンとこないかもしれませんが、</p>

<p>実例をあげてみます。</p>

<h2>gradle本体をIntelliJ IDEAに取り込む</h2>

<p>gradle DSLを読んでいて、どうしてもわからないことがある場合、</p>

<p>gradle本体のソースを読むことがあります。</p>

<p>最新(2013/06/12時点)のソースを落としてきて、</p>

<p><code>gradle idea</code>タスクを実行してみます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gradle --version
</span><span class='line'>
</span><span class='line'>------------------------------------------------------------
</span><span class='line'>Gradle 1.6
</span><span class='line'>------------------------------------------------------------
</span><span class='line'>
</span><span class='line'>Gradle build time: 2013年5月7日 9時12分14秒 UTC
</span><span class='line'>Groovy: 1.8.6
</span><span class='line'>Ant: Apache Ant(TM) version 1.8.4 compiled on May 22 2012
</span><span class='line'>Ivy: 2.2.0
</span><span class='line'>JVM: 1.7.0_13 (Oracle Corporation 23.7-b01)
</span><span class='line'>OS: Mac OS X 10.8.4 x86_64
</span><span class='line'>
</span><span class='line'>$ gradle idea
</span><span class='line'>:buildSrc:clean
</span><span class='line'>:buildSrc:compileJava UP-TO-DATE
</span><span class='line'>:buildSrc:compileGroovy
</span><span class='line'>:buildSrc:processResources
</span><span class='line'>:buildSrc:classes
</span><span class='line'>:buildSrc:jar
</span><span class='line'>:buildSrc:assemble
</span><span class='line'>:buildSrc:checkstyleMain
</span><span class='line'>:buildSrc:compileTestJava UP-TO-DATE
</span><span class='line'>:buildSrc:compileTestGroovy
</span><span class='line'>:buildSrc:processTestResources
</span><span class='line'>:buildSrc:testClasses
</span><span class='line'>:buildSrc:checkstyleTest UP-TO-DATE
</span><span class='line'>:buildSrc:codenarcMain
</span><span class='line'>:buildSrc:codenarcTest
</span><span class='line'>:buildSrc:test
</span><span class='line'>:buildSrc:check
</span><span class='line'>:buildSrc:build
</span><span class='line'>
</span><span class='line'>FAILURE: Build failed with an exception.
</span><span class='line'>
</span><span class='line'>* Where:
</span><span class='line'>Script '/Users/mike/IdeaProjects/gradle/gradle/gradle/integTest.gradle' line: 32
</span><span class='line'>
</span><span class='line'>* What went wrong:
</span><span class='line'>A problem occurred evaluating script.
</span><span class='line'>&gt; Failed to notify action.
</span><span class='line'>   &gt; Could not find property 'reports' on task ':announce:integTest'.
</span><span class='line'>
</span><span class='line'>* Try:
</span><span class='line'>Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.
</span><span class='line'>
</span><span class='line'>BUILD FAILED
</span><span class='line'>
</span><span class='line'>Total time: 54.695 secs</span></code></pre></td></tr></table></div></figure>


<p>最新のgradle(バージョン1.6)でエラーが発生します。</p>

<p>ビルドスクリプト:buildSrcプロジェクトのテスト中に落ちてしまいます。</p>

<p>一方、プロジェクトに付属している<strong>wapper</strong>で実行してみます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./gradlew --version
</span><span class='line'>
</span><span class='line'>------------------------------------------------------------
</span><span class='line'>Gradle 1.7-20130519231153+0000
</span><span class='line'>------------------------------------------------------------
</span><span class='line'>
</span><span class='line'>Build time:   2013-05-19 23:11:53 UTC
</span><span class='line'>Build number: none
</span><span class='line'>Revision:     9a7199efaf72c620b33f9767874f0ebced135d83
</span><span class='line'>
</span><span class='line'>Groovy:       1.8.6
</span><span class='line'>Ant:          Apache Ant(TM) version 1.8.4 compiled on May 22 2012
</span><span class='line'>Ivy:          2.2.0
</span><span class='line'>JVM:          1.7.0_13 (Oracle Corporation 23.7-b01)
</span><span class='line'>OS:           Mac OS X 10.8.4 x86_64
</span><span class='line'>
</span><span class='line'>$ ./gradlew idea
</span><span class='line'>Deleting directory /Users/mike/.gradle/wrapper/dists/gradle-1.7-20130519231153+0000-bin/1cbtqldhq0muu2cto5pdcq66ee/gradle-1.7-20130519231153+0000
</span><span class='line'>Unzipping /Users/mike/.gradle/wrapper/dists/gradle-1.7-20130519231153+0000-bin/1cbtqldhq0muu2cto5pdcq66ee/gradle-1.7-20130519231153+0000-bin.zip to /Users/mike/.gradle/wrapper/dists/gradle-1.7-20130519231153+0000-bin/1cbtqldhq0muu2cto5pdcq66ee
</span><span class='line'>Set executable permissions for: /Users/mike/.gradle/wrapper/dists/gradle-1.7-20130519231153+0000-bin/1cbtqldhq0muu2cto5pdcq66ee/gradle-1.7-20130519231153+0000/bin/gradle
</span><span class='line'>:buildSrc:clean
</span><span class='line'>:buildSrc:compileJava UP-TO-DATE
</span><span class='line'>:buildSrc:compileGroovy
</span><span class='line'>:buildSrc:processResources
</span><span class='line'>:buildSrc:classes
</span><span class='line'>:buildSrc:jar
</span><span class='line'>:buildSrc:assemble
</span><span class='line'>:buildSrc:checkstyleMain
</span><span class='line'>:buildSrc:compileTestJava UP-TO-DATE
</span><span class='line'>:buildSrc:compileTestGroovy
</span><span class='line'>:buildSrc:processTestResources
</span><span class='line'>:buildSrc:testClasses
</span><span class='line'>:buildSrc:checkstyleTest UP-TO-DATE
</span><span class='line'>:buildSrc:codenarcMain
</span><span class='line'>:buildSrc:codenarcTest
</span><span class='line'>:buildSrc:test
</span><span class='line'>:buildSrc:check
</span><span class='line'>:buildSrc:build
</span><span class='line'>:ideaModule
</span><span class='line'>
</span><span class='line'>## 途中長いので略
</span><span class='line'>
</span><span class='line'>:ui:ideaModule
</span><span class='line'>:ui:idea
</span><span class='line'>:wrapper:buildReceiptResource
</span><span class='line'>:wrapper:ideaModule
</span><span class='line'>:wrapper:idea
</span><span class='line'>
</span><span class='line'>BUILD SUCCESSFUL
</span><span class='line'>
</span><span class='line'>Total time: 2 mins 11.981 secs</span></code></pre></td></tr></table></div></figure>


<p>という形で、</p>

<p>マシンにインストールされているgradleのバージョンの如何にかかわらず、</p>

<p>プロジェクトごとに最適化されたビルドを提供してくれます。</p>

<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[初めてRubyのモジュールを書いてみた]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/11/how-to-create-rubys-module/"/>
    <updated>2013-06-11T02:04:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/11/how-to-create-rubys-module</id>
    <content type="html"><![CDATA[<p>こんにちわ、みけです。</p>

<p>前回の記事<a href="http://mike-neck.github.io/blog/2013/06/08/rubyfalsemixinfalsehua-wodu-ndeitara%2C-he-gu-kajavawoshu-iteita/">『Rubyのmixinの話を読んでいたら、何故かjavaを書いていた』</a>はあまりにも</p>

<p>rubyに対して失礼なので、</p>

<p>初心者らしく、ちゃんと<code>module</code>を作ってみました。</p>

<p>ところで、僕の感心事は前回の記事でも書いたように、</p>

<h2>rubyの<code>module</code>はインスタンス変数にアクセスすることができるのか？</h2>

<p>ということです。</p>

<p>で、結論から言えば、</p>

<h2>rubyの<code>module</code>はインスタンス変数にアクセスできました</h2>

<p>となります。</p>

<h3><code>module</code>を作成</h3>

<figure class='code'><figcaption><span>having_title.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># -*- codig: utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">HavingTitle</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">title</span><span class="o">=</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@title</span> <span class="o">=</span> <span class="n">t</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">title</span>
</span><span class='line'>    <span class="vi">@title</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>module</code>の<code>HavingTitle</code>は単純にタイトルというものに</p>

<p>アクセスすることができるモジュールです。</p>

<p>先程も書きましたが、僕の疑問は<code>@title</code>フィールドに、</p>

<p>インスタンス化することができない<code>module</code>がアクセすることができるのか</p>

<p>ということです。</p>

<h3><code>module</code>を<code>include</code>した<code>class</code>を作成</h3>

<figure class='code'><figcaption><span>book.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># -*- coding: utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;./having_title&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Book</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">HavingTitle</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:price</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">title</span><span class="p">,</span> <span class="n">price</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@price</span> <span class="o">=</span> <span class="n">price</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">title</span> <span class="o">=</span> <span class="n">title</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">print_info</span>
</span><span class='line'>    <span class="s2">&quot;Book[title : </span><span class="si">#{</span><span class="vi">@title</span><span class="si">}</span><span class="s2">, price : </span><span class="si">#{</span><span class="vi">@price</span><span class="si">}</span><span class="s2">]&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>タイトルというものを持っていそうなクラスということで</p>

<p><code>Book</code>というクラスをつくりました。</p>

<p>後は<code>Book</code>クラスをインスタンス化して、</p>

<p>フィールド<code>@title</code>にアクセスできるかどうか確認出来れば</p>

<p>僕の疑問は解決出来ます。</p>

<h3>irbで動作を確認</h3>

<p>あ、まだrubyでのテストの書き方知らないので、</p>

<p>ここはirbで勘弁して下さい。</p>

<figure class='code'><figcaption><span>book.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">irb</span><span class="p">(</span><span class="n">main</span><span class="p">):</span><span class="mo">001</span><span class="p">:</span><span class="mi">0</span><span class="o">&gt;</span> <span class="nb">require</span> <span class="s1">&#39;./book&#39;</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'><span class="n">irb</span><span class="p">(</span><span class="n">main</span><span class="p">):</span><span class="mo">002</span><span class="p">:</span><span class="mi">0</span><span class="o">&gt;</span> <span class="n">book</span> <span class="o">=</span> <span class="no">Book</span><span class="o">.</span><span class="n">new</span> <span class="s1">&#39;anti-oedipus&#39;</span><span class="p">,</span> <span class="mi">4000</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="c1">#&lt;Book:0x007f90890b6e38 @price=4000, @title=&quot;anti-oedipus&quot;&gt;</span>
</span><span class='line'><span class="n">irb</span><span class="p">(</span><span class="n">main</span><span class="p">):</span><span class="mo">003</span><span class="p">:</span><span class="mi">0</span><span class="o">&gt;</span> <span class="n">book</span><span class="o">.</span><span class="n">print_info</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;Book[title : anti-oedipus, price : 4000]&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>というわけで、特に何のエラーも出ることなく、</p>

<p>フィールド<code>@title</code>にアクセスできているようですね。</p>

<h2>モジュールの機能の一つとしてのMix-in</h2>

<p>まあ、<a href="http://www.amazon.co.jp/gp/product/4873113679/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873113679&amp;linkCode=as2&amp;tag=kkkjkrt-22">『初めてのRuby』</a>にはモジュールについて次のように書いてあります。</p>

<blockquote><p><strong>モジュール</strong>はクラスに似ています。モジュールは「インスタンス化できないクラス」のようなものです。
<code>Class</code>クラスは<code>Module</code>のサブクラスですから、「クラス = モジュール + インスタンス化能力」と言ってもよさそうです。
(<a href="http://www.amazon.co.jp/gp/product/4873113679/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873113679&amp;linkCode=as2&amp;tag=kkkjkrt-22">Yugui著『初めてのRuby』</a>(オライリー・ジャパン、2008年、p.159))</p></blockquote>

<p>Javaしかわからない(Javaも詳しくはわからない)僕には、</p>

<p><code>abstract class</code>と考えておけばよさそうです。</p>

<p>で、複数のモジュールを継承できるので、</p>

<p>なんか、アレですね…</p>

<table>
<tbody>
<tr>
<td><iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=kkkjkrt-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4873113679" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</td>
<td><iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=kkkjkrt-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4774151661" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</td>
</tr>
</tbody>
</table>




<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JIRA6のチケットで他のチケットへのリンクを張る方法]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/10/how-to-link-other-issues-on-jira6/"/>
    <updated>2013-06-10T15:10:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/10/how-to-link-other-issues-on-jira6</id>
    <content type="html"><![CDATA[<p>こんにちわ、みけです。</p>

<p>微妙に表題の件に関して、30分くらいさまよったので、覚書き。</p>

<p>公式のドキュメントはこちらです。</p>

<p><a href="https://confluence.atlassian.com/display/JIRA/Linking+Issues">JIRA User&rsquo;s Guide > Working with an Issue > Linking Issues</a></p>

<h2>JIRA6であるチケットから他のチケットへのリンクを張る方法</h2>

<h3>JIRAのissueの上にあるメニューから<strong>More > Link</strong>を選択します</h3>

<p><a href="https://googledrive.com/host/0B4hhdHWLP7RRVjFGRmExVzhlMjQ" target="_blank"><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRVjFGRmExVzhlMjQ" style="width : 501px;"/></a></p>

<h3>当該チケットとの関係を選択して、関連するチケットを選択します</h3>

<p><a href="https://googledrive.com/host/0B4hhdHWLP7RRaExlSGJnMUJjejQ" target="_blank"><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRaExlSGJnMUJjejQ" style="width : 334px;"/></a></p>

<h3>チケットが関連付けられているか確認します</h3>

<p><a href="https://googledrive.com/host/0B4hhdHWLP7RRT2RfWklwbkExdGM" target="_blank"><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRT2RfWklwbkExdGM" style="width : 501px;"/></a></p>

<p>…</p>

<p>えっ、Redmineならもっと簡単だって？</p>

<p>そうですね。</p>

<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rubyのmixinの話を読んでいたら、何故かjavaを書いていた]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/08/rubyfalsemixinfalsehua-wodu-ndeitara%2C-he-gu-kajavawoshu-iteita/"/>
    <updated>2013-06-08T21:22:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/08/rubyfalsemixinfalsehua-wodu-ndeitara,-he-gu-kajavawoshu-iteita</id>
    <content type="html"><![CDATA[<p>こんにちわ、みけです。</p>

<p><a href="https://twitter.com/suginoy">@suginoy</a>さんに</p>

<p><a href="http://www.amazon.co.jp/gp/product/4774151661/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4774151661&amp;linkCode=as2&amp;tag=kkkjkrt-22">『楽しい開発スタートアップRuby』</a>を買っていただいたので、</p>

<p>今日はそれを某社オフィスで読んでいました。</p>

<h1>Rubyのmix-inについての読んだ後の会話</h1>

<ul>
<li>僕「mix-inよくわからん」</li>
<li>イケメン「多重継承できるやつでしょう」</li>
<li>僕「mix-inってインスタンス変数とかにアクセスできるのかな？」</li>
<li>イケメン「できそうじゃね」</li>
<li>僕「あ〜、Java8のdefault実装でもmix-inと同じ事できそうじゃね」</li>
<li>イケメン「いや、できないでしょう。default実装といっても、interfaceにフィールドを持つことができないわけだから」</li>
<li>僕「え、できないのか、あー、そうかできないな。えっ、じゃあ、あれ、誰得なの？」</li>
</ul>


<p>(多少脚色有り、あと会話内容忘れたので、結構適当)</p>

<p>で、</p>

<h1>書いていたのがJava8のコードでした</h1>

<figure class='code'><figcaption><span>Score.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">org</span><span class="o">.</span><span class="na">mikeneck</span><span class="o">.</span><span class="na">jdk8</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * @author mike</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Score</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">final</span> <span class="kd">private</span> <span class="n">String</span> <span class="n">title</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">final</span> <span class="kd">private</span> <span class="kt">int</span> <span class="n">value</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">Score</span><span class="o">(</span><span class="n">String</span> <span class="n">title</span><span class="o">,</span> <span class="kt">int</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">title</span> <span class="o">=</span> <span class="n">title</span><span class="o">;</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">value</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getTitle</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">title</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getValue</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">value</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Grade.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">org</span><span class="o">.</span><span class="na">mikeneck</span><span class="o">.</span><span class="na">jdk8</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * @author mike</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Grade</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Score</span><span class="o">&gt;</span> <span class="nf">scores</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">default</span> <span class="kt">long</span> <span class="nf">getTotalScore</span> <span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nf">scores</span><span class="o">()</span>
</span><span class='line'>                <span class="o">.</span><span class="na">stream</span><span class="o">()</span>
</span><span class='line'>                <span class="o">.</span><span class="na">mapToLong</span><span class="o">(</span><span class="nl">Score:</span><span class="o">:</span><span class="n">getValue</span><span class="o">)</span>
</span><span class='line'>                <span class="o">.</span><span class="na">reduce</span><span class="o">(</span><span class="mi">0</span><span class="n">l</span><span class="o">,</span> <span class="nl">Long:</span><span class="o">:</span><span class="n">sum</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ところで、このdefaultメソッド、</p>

<p>書いている途中はこんな感じでした。</p>

<p><img src="https://googledrive.com/host/0B4hhdHWLP7RRYk5mVkd1RFFQYmc" style="width : 501px;" /></p>

<p>IntelliJ IDEAではシンタックスをもっとよくできる場合は、</p>

<p>こういう形で通知してくれます。</p>

<p>紫の部分にカーソルをあてて、</p>

<p>Alt + Enter (mac の場合は option + enter)をすると、</p>

<p>操作の候補が表示されます。</p>

<p><img src="https://googledrive.com/host/0B4hhdHWLP7RRQzhXZnc0Z2lVc0k" style="width : 501px;"/></p>

<p>ここでは<strong>Replace lambda with method reference</strong>を選択します。</p>

<p><img src="https://googledrive.com/host/0B4hhdHWLP7RRbnFGWmE1czJrRk0" style="width : 501px;"/></p>

<p>すごいシンプルなコードになりました。</p>

<p>続いて、mapした結果をreduceしていきます。</p>

<p><img src="https://googledrive.com/host/0B4hhdHWLP7RRa0s1ZldObzA0VzA" style="width : 501px;"/></p>

<p>初期値<code>0l</code>で、結果を合計したいので、次のような演算を書きます。</p>

<p><img src="https://googledrive.com/host/0B4hhdHWLP7RRTVAxQUE0d0tQMU0" style="width : 501px;"/></p>

<p>これはこれでまちがいでありません。</p>

<p>ところで、<code>java.util.stream.Stream#mapToLong</code>の戻り値である、</p>

<p><code>java.util.stream.LongStream</code>のjavadocを読むとこのように記述されています。</p>

<blockquote><p>Api note : Sum, min, max, and average are all special cases of reduction.
Summing a stream of numbers can be expressed as:</p>

<p><code>
long sum = integers.reduce(0, (a, b) -&gt; a+b);
</code></p>

<p>or more compactly:</p>

<p><code>
long sum = integers.reduce(0, Long::sum);
</code></p>

<p><em>引用元 : javadoc (build-89)</em></p></blockquote>

<p>つまり、<code>java.util.function.LongBinaryOperator</code>の記述</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">(</span><span class="n">sum</span><span class="o">,</span> <span class="n">item</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">sum</span> <span class="o">+</span> <span class="n">item</span>
</span></code></pre></td></tr></table></div></figure>


<p>は、<code>java.lang.Long</code>の<code>static</code>なメソッド<code>sum(long, long)</code>に</p>

<p>置き換えることができるということです。</p>

<p>その結果、先のコードは次のようになりました(既出)。</p>

<p><img src="https://googledrive.com/host/0B4hhdHWLP7RRS25qWnVZX2dHdW8" style="width : 501px;"/></p>

<p>さて、ここらへんの<code>Stream</code>系の操作がエンタープライズな現場で使われるかどうかは</p>

<p>微妙ですが…(というのも、値の集計をするというのであれば、DBにさせたほうが早いので)</p>

<p>実際に現場で使うとなると、</p>

<p>高機能なIDE(<code>Long::sum</code>の部分はIntelliJでも簡略化できなかった)と</p>

<p><code>Stream</code>系のApiの書き方を覚えておかないと、</p>

<p>相当効率悪くなるとおもいます。</p>

<p>というわけで、Java8の勉強をしたい方は是非</p>

<p>6月26日(水)の『Java8初心者勉強会』にご参加下さい。</p>

<p>Java8初心者勉強会 &ndash; <a href="http://atnd.org/event/java8beginner20130626tokyo">http://atnd.org/event/java8beginner20130626tokyo</a></p>

<p>結論</p>

<h1>あれ、rubyのmix-inについての話はどこ行った…</h1>

<p>vimでrubyのコード書くの辛いです…</p>

<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Groovyでpegdownをさわってみる]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/08/groovydepegdownwosawatutemiru/"/>
    <updated>2013-06-08T05:25:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/08/groovydepegdownwosawatutemiru</id>
    <content type="html"><![CDATA[<p>みけです。</p>

<p><img src="http://mike-neck.github.io//groovy.codehaus.org/images/groovy-logo-medium.png" style="width : 450px;"/></p>

<p>前回に引き続き、Javaのmarkdownパーサーを試してみます。</p>

<p>で、今回は</p>

<h1><a href="https://github.com/sirthias/pegdown">pegdown</a></h1>

<p>を試してみました。</p>

<p>サンプルコードは前回とほとんど変わりません。</p>

<figure class='code'><figcaption><span>pegdown-sample.groovy</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="nd">@Grab</span><span class="o">(</span><span class="s1">&#39;org.pegdown:pegdown:1.2.1&#39;</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="kt">def</span> <span class="n">processor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">org</span><span class="o">.</span><span class="na">pegdown</span><span class="o">.</span><span class="na">PegDownProcessor</span><span class="o">()</span>
</span><span class='line'>
</span><span class='line'><span class="kt">def</span> <span class="n">original</span> <span class="o">=</span> <span class="s">$/</span>
</span><span class='line'><span class="s">This is Top Header</span>
</span><span class='line'><span class="s">---</span>
</span><span class='line'>
</span><span class='line'><span class="s">This is second Header</span>
</span><span class='line'><span class="s">===</span>
</span><span class='line'>
</span><span class='line'><span class="s">### This is topic</span>
</span><span class='line'>
</span><span class='line'><span class="s">#### Lists Item</span>
</span><span class='line'>
</span><span class='line'><span class="s">${(1..3).collect {&quot;+ item${it}&quot;}.join(&#39;\n&#39;)}</span>
</span><span class='line'>
</span><span class='line'><span class="s">and</span>
</span><span class='line'>
</span><span class='line'><span class="s">${(1..3).collect {&quot;1. item${it}&quot;}.join(&#39;\n&#39;)}</span>
</span><span class='line'>
</span><span class='line'><span class="s">#### Links</span>
</span><span class='line'>
</span><span class='line'><span class="s">+ [mike-neck&#39;s site](http://mike-neck.github.io/)</span>
</span><span class='line'><span class="s">+ [mike-neck&#39;s dq site](http://mikeneckdq.blog.fc2.com/)</span>
</span><span class='line'><span class="s">+ ![groovy image](http://groovy.codehaus.org/images/groovy-logo-medium.png)</span>
</span><span class='line'>
</span><span class='line'><span class="s">#### Html Tags</span>
</span><span class='line'>
</span><span class='line'><span class="s">&lt;img src=&#39;//googledrive.com/host/0B4hhdHWLP7RRdHRGZ3ZrZU90Q00&#39; style=&#39;width : 400px;&#39;&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s">#### Codes</span>
</span><span class='line'>
</span><span class='line'><span class="s">function `lists:reverse/1` returns a List.</span>
</span><span class='line'>
</span><span class='line'><span class="s">tag `&lt;em&gt;` means emphasis</span>
</span><span class='line'>
</span><span class='line'><span class="s">``groovy</span>
</span><span class='line'><span class="s">def string = &#39;This is groovy code.&#39;</span>
</span><span class='line'><span class="s">``</span>
</span><span class='line'>
</span><span class='line'><span class="s">#### emphasis</span>
</span><span class='line'>
</span><span class='line'><span class="s">*em?*</span>
</span><span class='line'>
</span><span class='line'><span class="s">**bold?**</span>
</span><span class='line'>
</span><span class='line'><span class="s">#### Blockquotes</span>
</span><span class='line'>
</span><span class='line'><span class="s">&gt; This is a blockquotes</span>
</span><span class='line'><span class="s">&gt; from here.</span>
</span><span class='line'>
</span><span class='line'><span class="s">/$</span>
</span><span class='line'>
</span><span class='line'><span class="n">processor</span><span class="o">.</span><span class="na">markdownToHtml</span><span class="o">(</span><span class="n">original</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>実行結果はこんな感じ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h2&gt;</span>This is Top Header<span class="nt">&lt;/h2&gt;&lt;h1&gt;</span>This is second Header<span class="nt">&lt;/h1&gt;&lt;h3&gt;</span>This is topic<span class="nt">&lt;/h3&gt;&lt;h4&gt;</span>Lists Item<span class="nt">&lt;/h4&gt;</span>
</span><span class='line'><span class="nt">&lt;ul&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>item1<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>item2<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>item3<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;&lt;p&gt;</span>and<span class="nt">&lt;/p&gt;</span>
</span><span class='line'><span class="nt">&lt;ol&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>item1<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>item2<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;</span>item3<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ol&gt;&lt;h4&gt;</span>Links<span class="nt">&lt;/h4&gt;</span>
</span><span class='line'><span class="nt">&lt;ul&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://mike-neck.github.io/&quot;</span><span class="nt">&gt;</span>mike-neck&#39;s site<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://mikeneckdq.blog.fc2.com/&quot;</span><span class="nt">&gt;</span>mike-neck&#39;s dq site<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;img</span> <span class="na">src=</span><span class="s">&quot;http://groovy.codehaus.org/images/groovy-logo-medium.png&quot;</span>  <span class="na">alt=</span><span class="s">&quot;groovy image&quot;</span><span class="nt">/&gt;&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;&lt;h4&gt;</span>Html Tags<span class="nt">&lt;/h4&gt;&lt;p&gt;&lt;img</span> <span class="na">src=</span><span class="s">&#39;//googledrive.com/host/0B4hhdHWLP7RRdHRGZ3ZrZU90Q00&#39;</span> <span class="na">style=</span><span class="s">&#39;width : 400px;&#39;</span><span class="nt">&gt;&lt;/p&gt;&lt;h4&gt;</span>Codes<span class="nt">&lt;/h4&gt;&lt;p&gt;</span>function <span class="nt">&lt;code&gt;</span>lists:reverse/1<span class="nt">&lt;/code&gt;</span> returns a List.<span class="nt">&lt;/p&gt;&lt;p&gt;</span>tag <span class="nt">&lt;code&gt;</span><span class="ni">&amp;lt;</span>em<span class="ni">&amp;gt;</span><span class="nt">&lt;/code&gt;</span> means emphasis<span class="nt">&lt;/p&gt;&lt;p&gt;&lt;code&gt;</span>groovy
</span><span class='line'>def string = <span class="ni">&amp;#39;</span>This is groovy code.<span class="ni">&amp;#39;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/p&gt;&lt;h4&gt;</span>emphasis<span class="nt">&lt;/h4&gt;&lt;p&gt;&lt;em&gt;</span>em?<span class="nt">&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;</span>bold?<span class="nt">&lt;/strong&gt;&lt;/p&gt;&lt;h4&gt;</span>Blockquotes<span class="nt">&lt;/h4&gt;</span>
</span><span class='line'><span class="nt">&lt;blockquote&gt;&lt;p&gt;</span>This is a blockquotes from here.<span class="nt">&lt;/p&gt;</span>
</span><span class='line'><span class="nt">&lt;/blockquote&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>markdownjとの比較</h2>

<p>markdownjではこんな不具合が有りました。</p>

<ul>
<li><code>===</code>がレンダーされない</li>
<li>上の行にテキストがある状態で&#8217;&mdash;&ndash;&lsquo;がタグ<code>&lt;tr/&gt;</code>にレンダーされる</li>
<li>当然ながら、GitHubっぽいコードスニペットはレンダーできない</li>
</ul>


<p>一方、これらのうち、</p>

<ul>
<li><code>===</code>がレンダーされない</li>
<li>上の行にテキストがある状態で&#8217;&mdash;&ndash;&lsquo;がタグ<code>&lt;tr/&gt;</code>にレンダーされる</li>
</ul>


<p>はgepdownでは解消されているようです。</p>

<p>残念ながら、</p>

<ul>
<li>当然ながら、GitHubっぽいコードスニペットはレンダーできない</li>
</ul>


<p>というのはあります。</p>

<p>というわけで、pegdownの方が、良さげな感じがします。</p>

<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Groovyでmarkdownjをさわってみる]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/07/groovydemarkdownjwosawatutemiru/"/>
    <updated>2013-06-07T21:10:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/07/groovydemarkdownjwosawatutemiru</id>
    <content type="html"><![CDATA[<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRcURrSlZiNXlNVVk" style="width : 450px;"/></p>

<p>こんにちわ、みけです。</p>

<p>このブログはOCTOPRESSで作っていますが、</p>

<p>どうしてもやりたい処理があったら、</p>

<p>rubyを勉強しないとアババな感じなので、</p>

<p>Javaでも同じようなものを作ってみたいと思っています。</p>

<h1>OCTOPRESSっぽいツールに必要そうな機能</h1>

<p>はこんな感じかなと思っています。</p>

<ul>
<li>タスクを指定して実行する</li>
<li>git連携</li>
<li>previewできる</li>
<li>マークダウンをHTMLに変換する</li>
</ul>


<p>これらのうち、最初のタスクを指定して実行するはGradleでやればよさそうです。</p>

<p>git連携はJGitを使えばできそうです。</p>

<p>previewはJettyだか、nettyだか、glassfishを使えばできそうです。</p>

<p>で、最後の</p>

<h1>JavaでマークダウンをHTMLに変換する</h1>

<p>はわからないので、</p>

<p>ちょっと試して見ることにしました。</p>

<p>まず、筆頭にくる <strong>markdownj</strong> を試してみることにしました</p>

<figure class='code'><figcaption><span>markdown-sample.groovy</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="nd">@Grab</span><span class="o">(</span><span class="s1">&#39;com.madgag:markdownj-core:0.4.1&#39;</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.petebevin.markdown.*</span>
</span><span class='line'>
</span><span class='line'><span class="kt">def</span> <span class="n">proc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MarkdownProcessor</span><span class="o">()</span>
</span><span class='line'>
</span><span class='line'><span class="kt">def</span> <span class="n">original</span> <span class="o">=</span> <span class="s">$/</span>
</span><span class='line'><span class="s">This is Top Header</span>
</span><span class='line'><span class="s">---</span>
</span><span class='line'>
</span><span class='line'><span class="s">This is second Header</span>
</span><span class='line'><span class="s">===</span>
</span><span class='line'>
</span><span class='line'><span class="s">### This is topic</span>
</span><span class='line'>
</span><span class='line'><span class="s">#### Lists Item</span>
</span><span class='line'>
</span><span class='line'><span class="s">${(1..3).collect {&quot;+ item${it}&quot;}.join(&#39;\n&#39;)}</span>
</span><span class='line'>
</span><span class='line'><span class="s">and</span>
</span><span class='line'>
</span><span class='line'><span class="s">${(1..3).collect {&quot;1. item${it}&quot;}.join(&#39;\n&#39;)}</span>
</span><span class='line'>
</span><span class='line'><span class="s">#### Links</span>
</span><span class='line'>
</span><span class='line'><span class="s">+ [mike-neck&#39;s site](http://mike-neck.github.io/)</span>
</span><span class='line'><span class="s">+ [mike-neck&#39;s dq site](http://mikeneckdq.blog.fc2.com/)</span>
</span><span class='line'>
</span><span class='line'><span class="s">#### Html Tags</span>
</span><span class='line'>
</span><span class='line'><span class="s">&lt;img src=&#39;//googledrive.com/host/0B4hhdHWLP7RRdHRGZ3ZrZU90Q00&#39; style=&#39;width : 400px;&#39;&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s">#### Codes</span>
</span><span class='line'>
</span><span class='line'><span class="s">function `lists:reverse/1` returns a List.</span>
</span><span class='line'>
</span><span class='line'><span class="s">tag `&lt;em&gt;` means emphasis</span>
</span><span class='line'>
</span><span class='line'><span class="s">#### emphasis</span>
</span><span class='line'>
</span><span class='line'><span class="s">*em?*</span>
</span><span class='line'>
</span><span class='line'><span class="s">**bold?**</span>
</span><span class='line'>
</span><span class='line'><span class="s">#### Blockquotes</span>
</span><span class='line'>
</span><span class='line'><span class="s">&gt; This is a blockquotes</span>
</span><span class='line'><span class="s">&gt; from here.</span>
</span><span class='line'>
</span><span class='line'><span class="s">/$</span>
</span><span class='line'>
</span><span class='line'><span class="n">proc</span><span class="o">.</span><span class="na">markdown</span><span class="o">(</span><span class="n">original</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>これの結果は次のようになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;p&gt;</span>This is Top Header
</span><span class='line'><span class="nt">&lt;hr</span> <span class="nt">/&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>This is second Header
</span><span class='line'>===<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;h3&gt;</span>This is topic<span class="nt">&lt;/h3&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;h4&gt;</span>Lists Item<span class="nt">&lt;/h4&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;ul&gt;</span>
</span><span class='line'><span class="nt">&lt;li&gt;</span>item1<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;li&gt;</span>item2<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;li&gt;</span>item3<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>and<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;ol&gt;</span>
</span><span class='line'><span class="nt">&lt;li&gt;</span>item1<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;li&gt;</span>item2<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;li&gt;</span>item3<span class="nt">&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ol&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;h4&gt;</span>Links<span class="nt">&lt;/h4&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;ul&gt;</span>
</span><span class='line'><span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://mike-neck.github.io/&quot;</span><span class="nt">&gt;</span>mike-neck&#39;s site<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://mikeneckdq.blog.fc2.com/&quot;</span><span class="nt">&gt;</span>mike-neck&#39;s dq site<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;h4&gt;</span>Html Tags<span class="nt">&lt;/h4&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;img</span> <span class="na">src=</span><span class="s">&#39;//googledrive.com/host/0B4hhdHWLP7RRdHRGZ3ZrZU90Q00&#39;</span> <span class="na">style=</span><span class="s">&#39;width : 400px;&#39;</span><span class="nt">&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;h4&gt;</span>Codes<span class="nt">&lt;/h4&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>function <span class="nt">&lt;code&gt;</span>lists:reverse/1<span class="nt">&lt;/code&gt;</span> returns a List.<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>tag <span class="nt">&lt;code&gt;</span><span class="ni">&amp;lt;</span>em<span class="ni">&amp;gt;</span><span class="nt">&lt;/code&gt;</span> means emphasis<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;h4&gt;</span>emphasis<span class="nt">&lt;/h4&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;em&gt;</span>em?<span class="nt">&lt;/em&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;strong&gt;</span>bold?<span class="nt">&lt;/strong&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;h4&gt;</span>Blockquotes<span class="nt">&lt;/h4&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;blockquote&gt;</span>
</span><span class='line'>  <span class="nt">&lt;p&gt;</span>This is a blockquotes
</span><span class='line'>  from here.<span class="nt">&lt;/p&gt;</span>
</span><span class='line'><span class="nt">&lt;/blockquote&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>今のところ、残念な点は</p>

<ul>
<li><code>===</code>がレンダーされない</li>
<li>上の行にテキストがある状態で&#8217;&mdash;&ndash;&lsquo;がタグ<code>&lt;tr/&gt;</code>にレンダーされる</li>
<li>当然ながら、GitHubっぽいコードスニペットはレンダーできない</li>
</ul>


<p>ちょっと残念なので、</p>

<p>他のマークダウンパーサーも試してみようと思います。</p>

<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IntelliJ IDEAのJetGradleの使い方]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/06/intellij-ideafalsejetgradlefalseshi-ifang/"/>
    <updated>2013-06-06T02:55:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/06/intellij-ideafalsejetgradlefalseshi-ifang</id>
    <content type="html"><![CDATA[<p><a href="http://www.jetbrains.com/idea/features/javascript.html" style="display:block; background:#0d3a9e url(http://www.jetbrains.com/idea/opensource/img/all/banners/idea468x60_blue.gif) no-repeat 0 7px; border:solid 1px #0d3a9e; margin:0;padding:0;text-decoration:none;text-indent:0;letter-spacing:-0.001em; width:466px; height:58px" alt="Java IDE with advanced HTML/CSS/JS editor for hardcore web-developers" title="Java IDE with advanced HTML/CSS/JS editor for hardcore web-developers"><span style="margin: 5px 0 0 61px;padding: 0;float: left;font-size: 12px;cursor:pointer;  background-image:none;border:0;color: #acc4f9; font-family: trebuchet ms,arial,sans-serif;font-weight: normal;text-align:left;">Can’t live without</span><span style="margin:0 0 0 205px;padding:18px 0 2px 0; line-height:13px;font-size:11px;cursor:pointer;  background-image:none;border:0;display:block; width:255px; color: #acc4f9; font-family: trebuchet ms,arial,sans-serif;font-weight: normal;text-align:left;">Smart Java and Groovy IDE<br/> with powerfull refactoring and code assistance.</span></a></p>

<p>こんにちわ、みけです。</p>

<p>いや、もう表題の件に関しては、</p>

<p>いろんなブログで既出なんですけど、
(と思ってググったら、あまりなかった(´・ω・｀))</p>

<p>僕もよくわかってなかったので、</p>

<p>使ってみたときのメモを書いとくことにしました。</p>

<h2>JetGradleってそもそも何よ？</h2>

<p>IntelliJ IDEAに最初からバンドルされているgradleのサポートプラグインです。</p>

<p>では使い方を見て行きましょう。</p>

<h3>(1)JetGradleタブを開きます。</h3>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRdHRGZ3ZrZU90Q00" style="width : 420px;" /></p>

<p>画面右下の方にちょこんとある、<strong>JetGradle</strong>タブをクリックして開きます。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRMEw3b0I1OEo0azA" style="width : 420px;"/></p>

<h3>(2) Addアンカーをクリックして、build.gradleファイルを割り当てます。</h3>

<p>ダイアログが出るので、今のプロジェクトのgradleファイルを割り当てます。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRS0xDejBZWmo4ekk" style="width : 280px;" /></p>

<p>build.gradleファイルを選択するとこんなかんじになります。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRS1FjS0VhU3BKMTQ" style="width : 420px;" /></p>

<h3>(3) Taskタブをクリックします。</h3>

<p>残念ながらこの段階ではタスク一覧が表示されません。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRN0xMWnpkNVFOS1E" style="width : 420px;" /></p>

<h3>(4) 更新ボタンをクリックします。</h3>

<p>先ほどのタブの左上の方にある更新ボタンをクリックします。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRZ051S3NqcEJXQkU" style="width : 420px;" /></p>

<p>するとIntelliJがgradle┏( ^o^)┓ﾄﾞｺﾄﾞｺﾄﾞｺﾄﾞｺ┗( ^o^)┛ﾄﾞｺﾄﾞｺﾄﾞｺﾄﾞｺと聞いてきます。
(AA はテキトー)</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRcWI4dXkwTENHam8" style="width : 420px;" /></p>

<p>右下の方にある、<code>Gradle settings</code>アンカーをクリックします。</p>

<h3>(5) GRADLE_HOMEを設定します。</h3>

<p>こんなダイアログが表示されます。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRVHpuOTl5S09XUFk" style="width : 280px;"/></p>

<p>僕はgradleのインストールをgvmでやっているので、</p>

<p>どこに<code>GRADLE_HOME</code>があるのかよくわからんので、
(覚えろよjk)</p>

<p>とりあえず、ターミナルで確認します。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRcVgtcU5JMmo3NlU" style="width : 280px;" /></p>

<p><code>GRADLE_HOME</code>の値をコピペします。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRdFV5cDB0d2IyUzA" style="width : 280px;" /></p>

<p>OKボタンをクリックすると、IntelliJがgradleファイルの読み込みを始めます。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRY19neTRiY2Njd2M" style="width : 450px;" /></p>

<p>読み込みが完了すると、タスク一覧が表示されます。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRcU9JTnpHanlHNGM" style="width : 450px;" /></p>

<h3>(6)JetGradleからタスクを実行してみる</h3>

<p>とりあえず、テストを実行してみたいと思います。</p>

<p>タスク一覧から実行したいタスクを選択します。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRbGNhODNIOWFBd1U" style="width : 450px;" /></p>

<p>ここでは<code>test</code>タスクを実行したいので、</p>

<p><code>test</code>タスクを選択しています。</p>

<p>選択したタスクを長押し(Windowsの場合は右クリック)して、</p>

<p>実行する方法(デバッグとかrunとか)を選択します。</p>

<p>ここではRunを選択します。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRUFhIa2RhVDF0QlE" style="width : 450px;" /></p>

<p>テストが実行されました。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRT0JoWjlKZXRyRWM" style="width : 450px;" /></p>

<p>これで、一々IDEからターミナルに移動して</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gradle test</span></code></pre></td></tr></table></div></figure>


<p>とか打たなくてもいいですね。</p>

<h3>(7)JetGradleの成果物はどこにあるの？</h3>

<p>これ、疑問に思ったので、</p>

<p>あえてテストをこけさせてみました。
(こうすることでテストレポートの位置を示してくれる)</p>

<p>わざと落ちるテストを書いて、</p>

<p>Recent Taskからtestをじっこうします。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRTGJOeEtoWDJBODQ" style="width : 450px;"/></p>

<p>はい、落ちました。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRTnBXcndheThEV1k" style="width : 450px;" /></p>

<p>で、テストレポートの場所を見ると、</p>

<p>ターミナルからテストを実行した時と変わらない場所に出力されていることがわかります。</p>

<p>以上、結論</p>

<h3>JetGradle便利すなー</h3>

<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[プログラマーがGitHubでブログを公開するべき理由]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/03/puroguramagagithubdeburoguwogeng-gai-surubekili-you/"/>
    <updated>2013-06-03T00:44:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/03/puroguramagagithubdeburoguwogeng-gai-surubekili-you</id>
    <content type="html"><![CDATA[<p>こんにちわ。みけです。</p>

<p>早いもので僕がブログをこちらに移動してから約1ヶ月経ちました。</p>

<p>こちらのブログに移動してよかったと思う理由を挙げてみたいと思います。</p>

<h2>(1)小さく記事を書いていくことができる</h2>

<p>ブログに自分の考えなどをまとめるのには、</p>

<p>それなりに時間が必要であったり、</p>

<p>集中力が必要であったりします。</p>

<p>これまでのブログサービスでも、</p>

<p>一応下書きという形で保存することは出来ましたが、</p>

<p>どうしても大きなものになってしまったりする場合、</p>

<p>こまめに保存できなかったりすると痛いことが多々あります。</p>

<p>GitHubでブログを書いている場合は、</p>

<p>こまめに変更が管理できるので、</p>

<p>ブログのように長いものを書くときに、</p>

<p>非常に便利です。</p>

<p>逆に間違えたなと思うところなどは、</p>

<p>消せますし、</p>

<p>消したところを間違えたという場合は復帰させることもできます。</p>

<p>というわけで、僕のようにダラダラ記事を書く人でも、</p>

<p>最終的に記事としてまとめられるので、</p>

<p>Gitでバージョン管理しながらブログを書くのは非常に便利であると思います。</p>

<h2>結論</h2>

<p>Gitでバージョン管理しながら書くブログは書きやすいです。</p>

<p>え、理由、そんなのこれしかないですお…(´・ω・｀)</p>

<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows(7)環境でgvmをインストールする]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/02/windows-7-huan-jing-dervmwoinsutorusuru/"/>
    <updated>2013-06-02T15:28:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/02/windows-7-huan-jing-dervmwoinsutorusuru</id>
    <content type="html"><![CDATA[<p><img src="https://googledrive.com/host/0B4hhdHWLP7RRZV9ueElsQUlYLVU" style="width : 500px"/></p>

<p>こんにちわ、みけです。</p>

<p>Windowsでのgroovyの環境構築といえば、</p>

<p>zipを落としてきて、解凍して、パスを通してといった作業をしなければならないのですが、</p>

<p>最近それが結構面倒くさいなと感じて、</p>

<p>Windowsから疎遠になっていました。</p>

<p>gvmをインストールすればいいんですが、</p>

<p>gvmのインストールコマンド</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -s get.gvmtool.net | bash</span></code></pre></td></tr></table></div></figure>


<p>はい、Windowsではできませんね。</p>

<h4>cygwin</h4>

<p>WindowsでGNUな環境を構築するといえば、cygwinですが、</p>

<p>僕は自分が認める(他人はどうだかよく知らん)情弱なので、</p>

<p>cygwin環境の構築に挫折した人です。</p>

<p>で、cygwinでgvmインストールできるよと言われても、</p>

<p>その元になるcygwinが構築できないので、</p>

<p>Windowsでgvm使えないじゃんと思っていました。</p>

<h4>mingw</h4>

<p>Windowsにはいっているmsysgitをいじっていて、</p>

<p>mingwなら構築できそうだと気づいたので、</p>

<p>やってみたら意外とできたので、</p>

<p>その作業メモを書いておきます。</p>

<p>ちなみに、参考にしたページはこちらです。</p>

<ul>
<li><a href="http://tanakh.jp/posts/2013-05-23-windows-setup.html">最近のWindowsの開発環境のセットアップ &ndash; 純粋関数空間</a></li>
</ul>


<h2>(1)Chocolateyのインストール</h2>

<p>Windowsのパッケージ管理ツールです。</p>

<p><a href="http://chocolatey.org/">http://chocolatey.org/</a>に書いてある</p>

<p>スクリプトをコピペしてインストールします。</p>

<h2>(2)mingwのインストール</h2>

<p>次のコマンドでインストール出来ます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\&gt; cinst mingw</span></code></pre></td></tr></table></div></figure>


<p>なお、インストールの際に</p>

<ul>
<li>C++ Compiler</li>
<li>MSYS Basic System</li>
<li>MinGW Developer Toolkit</li>
</ul>


<p>も選択しておいたほうがいいのかなと思って、選択しています。
(よくわかってない…)</p>

<h2>(3)msys-unzipのインストール</h2>

<p>ここからはmingwでの作業になります。</p>

<p>なお、先ほどのリンクでも紹介されている<a href="http://chocolatey.org/packages/ConEmu/12.4.17.1">ConEmu</a>で、Taskの設定で</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:¥MinGW¥msys¥1.0¥bin¥bash.exe --login -i</span></code></pre></td></tr></table></div></figure>


<p>で、mingwを起動できるようにして、</p>

<p>そのコンソールから使っています。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mingw-get install msys-unzip</span></code></pre></td></tr></table></div></figure>


<p>これでインストール出来ます。</p>

<h2>(4)gvmのインストール</h2>

<p>ここまでくれば</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -s get.gvmtool.net | bash</span></code></pre></td></tr></table></div></figure>


<p>を実行することができます。</p>

<p>これで、gvmでらくらくgroovyを扱えますね。</p>

<p><img src="https://googledrive.com/host/0B4hhdHWLP7RRMXctLWN4TmNQdkU" style="width : 408px; height : 280px;"></p>

<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AndroidがJavaでない理由 - 1]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/01/androidgajavadenaili-you-1/"/>
    <updated>2013-06-01T02:22:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/01/androidgajavadenaili-you-1</id>
    <content type="html"><![CDATA[<p>こんにちは。</p>

<p>みけです。</p>

<p>また仰々しいタイトルですみません。</p>

<h2>Androidのsdkが5月16日近辺にrevision22に更新されたようです</h2>

<p>リリースノートを一部抜粋、翻訳(意訳)するとこんな感じです。</p>

<ul>
<li>既存の<code>platfomr-tools</code>を元にSDKの構造を変更して、新しいビルドツール等を追加しました。この変更により、ビルドツールのバージョンとIDEのバージョンを切り離すことが可能になります。その結果、IDEの更新なしにツールの更新が可能になりました。</li>
</ul>


<p>さて、僕はAndroidに関しては情弱なので、この変更が意味するところをあまり気にせず、</p>

<p>本題である<strong>「JavaがAndroidでない理由」</strong>ことの実例コードを書こうとして</p>

<p>サンプルプロジェクトを作って、実行しようとした時にそれは起こりました。</p>

<h2>android-apt-compiler: Cannot run program &ldquo;/Users/name/Android/sdk/android-sdk-macosx/platform-tools/aapt&rdquo;: error=2, No such file or directory</h2>

<p><img src="https://pbs.twimg.com/media/BLlghpZCAAA8qOp.png:large" style="width : 504px;"/></p>

<p>うん？コンパイル用のツールが見つからない？</p>

<p>というわけで、件のディレクトリーに移動、ファイル探してみると…</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>:~ mike$ cd ~/Android/sdk/android-sdk-macosx/platform-tools/
</span><span class='line'>:platform-tools mike$ ll
</span><span class='line'>total 3664
</span><span class='line'>drwxr-xr-x   7 mike  staff   238B  5 31 19:05 .
</span><span class='line'>drwxr-x---  14 mike  staff   476B  5 31 18:31 ..
</span><span class='line'>-rw-r--r--   1 mike  staff   396K  5 31 18:30 NOTICE.txt
</span><span class='line'>-rwxr-xr-x   1 mike  staff   1.2M  5 31 18:30 adb
</span><span class='line'>drwxr-xr-x   3 mike  staff   102B  5 31 18:30 api
</span><span class='line'>-rwxr-xr-x   1 mike  staff   185K  5 31 18:30 fastboot
</span><span class='line'>-rw-r--r--   1 mike  staff    16K  5 31 18:30 source.properties</span></code></pre></td></tr></table></div></figure>


<p>うむ、確かにそんなものはない…</p>

<p>で、いろいろとディレクトリーを漁ってみると</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>:~ mike$ cd ~/Android/sdk/android-sdk-macosx/build-tools/17.0.0/
</span><span class='line'>:17.0.0 mike$ ll
</span><span class='line'>total 61624
</span><span class='line'>drwxr-xr-x  11 mike  staff   374B  5 31 18:30 .
</span><span class='line'>drwxr-xr-x   3 mike  staff   102B  5 31 18:30 ..
</span><span class='line'>-rw-r--r--   1 mike  staff    11K  5 31 18:30 NOTICE.txt
</span><span class='line'>-rwxr-xr-x   1 mike  staff   1.2M  5 31 18:30 aapt
</span><span class='line'>-rwxr-xr-x   1 mike  staff   273K  5 31 18:30 aidl
</span><span class='line'>-rwxr-xr-x   1 mike  staff   141K  5 31 18:30 dexdump
</span><span class='line'>-rwxr-xr-x   1 mike  staff   2.5K  5 31 18:30 dx
</span><span class='line'>drwxr-xr-x   3 mike  staff   102B  5 31 18:30 lib
</span><span class='line'>-rwxr-xr-x   1 mike  staff    28M  5 31 18:30 llvm-rs-cc
</span><span class='line'>drwxr-xr-x   4 mike  staff   136B  5 31 18:30 renderscript
</span><span class='line'>-rw-r--r--   1 mike  staff    16K  5 31 18:30 source.properties</span></code></pre></td></tr></table></div></figure>


<p>お、あった。</p>

<p>…あったはいいよ。</p>

<p>でも、このディレクトリーは何？</p>

<p><strong><code>17.0.0</code></strong></p>

<p>何、このディレクトリー。</p>

<p>数字ディレクトリー。</p>

<p><strong>どこのSIerの作業ですか？</strong></p>

<p>え、じゃあ、君は新しいAPIバージョン(例えば18)が出たら、</p>

<p><strong><code>18.0.0</code>ディレクトリーでも作ってくれるんです？</strong></p>

<p>これ、ビルドスクリプトとか、ビルド関連のちょっとした作業とか</p>

<p>ぶっ壊れるよね…え、ぶっ壊れない？なら、いいんだけど、</p>

<p><strong>IntelliJ IDEA様</strong>を欺いているよね…</p>

<p>これじゃ</p>

<h2>Androidって<strong>write once, run once upon a time</strong>ってことだよね</h2>

<p>Javaの最も貫徹したコンセプトである</p>

<h2>write once run anywhere</h2>

<p>を破っているよね。</p>

<p>というわけで、結論</p>

<h2>AndroidはJavaではなかった、決して</h2>

<p><strong>p.s.</strong></p>

<p>最初この問題にあたった時にStack Overflowを調べました。</p>

<p>すでに、先駆者がいました。</p>

<p><a href="http://stackoverflow.com/questions/16588969/android-hello-world-compile-error-intellij-cannot-find-aapt">Android Hello-World compile error: Intellij cannot find aapt</a></p>

<p>で、解決方法のアドバイスとして</p>

<ul>
<li><strong>JetBrains様がIDEをアップデートしてくれるのを待つしかないんじゃない？</strong></li>
<li>シンボリックリンクを貼ればいいんじゃない</li>
<li>ツール類を<code>platform-tools</code>にコピペすればいいんじゃない</li>
</ul>


<p>と有りました。</p>

<p>当面の解決策としては2番目が採択されそうですが、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>:17.0.0 mike$ ln -s aapt ../../platform-tools/aapt
</span><span class='line'>:17.0.0 mike$ ln -s aidl ../../platform-tools/aidl
</span><span class='line'>:17.0.0 mike$ ln -s lib ../../platform-tools/lib</span></code></pre></td></tr></table></div></figure>


<p>をやった後ですが、</p>

<p><img src="https://googledrive.com/host/0B4hhdHWLP7RReVgzYzJvOHZJS2s" style="width : 488px;" /></p>

<p>はい、コンパイルできません。</p>

<p>というわけで、JetBrains様がIntelliJ IDEAを対応させるのを待つしかなさそうです。</p>

<p>IntelliJガチ勢の僕としては、googleに一言もの申したい</p>

<h2>googleさん、JetBrains様にごめんなさいしてください</h2>

<p>つーか、ツールがバージョンアップしてもIDEのバージョンアップが必要ないと言ってた、</p>

<p>あのリリースノート何だったんです？</p>

<p>google 「ツールがバージョンアップしてもIDEのバージョンアップがいらないと言ったな、あれは、嘘だ」</p>

<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AndroidがJavaだと思っている人のためのGroovy講座 - 2]]></title>
    <link href="http://mike-neck.github.io/blog/2013/05/30/androidgajavadatosi-tuteiruren-falsetamefalsegroovyjiang-zuo-2/"/>
    <updated>2013-05-30T10:48:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/05/30/androidgajavadatosi-tuteiruren-falsetamefalsegroovyjiang-zuo-2</id>
    <content type="html"><![CDATA[<p>こんいちわ。みけです。</p>

<p>またも、タイトルが仰々しくてすみません。</p>

<p>本当に大したこと書かないです。</p>

<p>で、相変わらずAndroidまたもや出て来ません。</p>

<p>gradleも出て来ません。</p>

<p>でも、Android Studioの登場や、gradle-android-pluginで</p>

<p>gradleに興味を持たれた方には読んで貰いたいと思います。</p>

<p>以下、本題。</p>

<h2><code>Closure&lt;V&gt;</code>とはなんぞや</h2>

<p>Closureについて僕がなんか言うと、</p>

<p>皆が混乱するので(それだけ僕もちゃんと説明できるほど理解していない…orz)</p>

<p>とりあえず<a href="http://ja.wikipedia.org/wiki/%E3%82%AF%E3%83%AD%E3%83%BC%E3%82%B8%E3%83%A3">WikipediaのClosure</a>でも読んで下さい。</p>

<p>Javaでいえば、<code>Callable&lt;V&gt;</code>みたいなものです。</p>

<p>で、<code>Callable&lt;V&gt;</code>に比べて便利なのが</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Callable</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">callable</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Callable</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;()</span> <span class="o">{</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">call</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// some codes</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">result</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>みたいに書かなくてよいあたりです。</p>

<p>ちなみに<code>Callable&lt;T&gt;</code>と異なるところもあります。</p>

<p>それは、おいおい、説明します。</p>

<h1>そろそろ<code>Closure&lt;V&gt;</code>のサンプル見せてくれよ</h1>

<p>というわけで、適当にサンプルをみつくろってみました。</p>

<h4>単純な値を返すだけのClosure</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="kt">def</span> <span class="n">closure</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>    <span class="s1">&#39;Hello, Closure!&#39;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">assert</span> <span class="nf">closure</span><span class="o">()</span> <span class="o">==</span> <span class="s1">&#39;Hello, Closure!&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>そうそう、<strong>groovyでは<code>return</code>を省略することができます</strong>。</p>

<p>その場合、最後に評価された式の値が<code>return</code>されます。</p>

<p>上記のClosureではClosureの最終式<code>'Hello, Closure!'</code>が評価され、</p>

<p>その値<code>'Hello, Closure!'</code>が返されます。</p>

<h4>引数をとるClosure</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="kt">def</span> <span class="n">hello</span> <span class="o">=</span> <span class="o">{</span><span class="n">name</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="s1">&#39;Hello, &#39;</span> <span class="o">+</span> <span class="n">name</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">assert</span> <span class="s1">&#39;Hello, mike&#39;</span> <span class="o">==</span> <span class="n">hello</span><span class="o">(</span><span class="s1">&#39;mike&#39;</span><span class="o">)</span>
</span><span class='line'><span class="k">assert</span> <span class="s1">&#39;Hello, null&#39;</span> <span class="o">==</span> <span class="n">hello</span><span class="o">()</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Closure&lt;V&gt;</code>と<code>Callable&lt;V&gt;</code>との決定的な違いが、
(大した違いではないが)</p>

<p>引数を与えることができる点です。</p>

<p>これを<code>Callable&lt;V&gt;</code>でやろうとすると次のようになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloTest</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">class</span> <span class="nc">Hello</span> <span class="kd">implements</span> <span class="n">Callable</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">private</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">public</span> <span class="nf">Hello</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="n">String</span> <span class="nf">call</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="s">&quot;Hello, &quot;</span> <span class="o">+</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Test</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">testHello</span> <span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">assertThat</span><span class="o">(</span><span class="k">new</span> <span class="n">Hello</span><span class="o">(</span><span class="s">&quot;mike&quot;</span><span class="o">).</span><span class="na">call</span><span class="o">(),</span> <span class="n">is</span><span class="o">(</span><span class="s">&quot;Hello, mike&quot;</span><span class="o">));</span>
</span><span class='line'>        <span class="n">assertThat</span><span class="o">(</span><span class="k">new</span> <span class="n">Hello</span><span class="o">(</span><span class="kc">null</span><span class="o">).</span><span class="na">call</span><span class="o">(),</span> <span class="n">is</span><span class="o">(</span><span class="s">&quot;Hello, null&quot;</span><span class="o">));</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Closureを返すClosure</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="kt">def</span> <span class="n">counter</span> <span class="o">=</span> <span class="o">{</span><span class="kt">int</span> <span class="n">offset</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">offset</span><span class="o">++</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">def</span> <span class="n">closure</span> <span class="o">=</span> <span class="n">counter</span><span class="o">(</span><span class="mi">0</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">(</span><span class="mi">0</span><span class="o">..</span><span class="mi">100</span><span class="o">).</span><span class="na">each</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">assert</span> <span class="n">it</span> <span class="o">==</span> <span class="n">closure</span><span class="o">()</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>初期値の0からカウントするカウンターのようなクロージャーが返ってきます。</p>

<p>型としては<code>Closure&lt;Closure&lt;Integer&gt;&gt;</code>といったところでしょうか…</p>

<p>で、これをみると一つ気持ち悪いところがありますね。</p>

<p><strong>元の値ってどうなってしまうの？</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="kt">def</span> <span class="n">closure</span> <span class="o">=</span> <span class="o">{</span><span class="n">String</span> <span class="n">hello</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">{</span><span class="n">String</span> <span class="n">name</span> <span class="o">-&gt;</span>
</span><span class='line'>        <span class="n">hello</span> <span class="o">+=</span> <span class="n">name</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">def</span> <span class="n">original</span> <span class="o">=</span> <span class="s1">&#39;Hello, &#39;</span>
</span><span class='line'><span class="kt">def</span> <span class="n">message</span> <span class="o">=</span> <span class="n">closure</span><span class="o">(</span><span class="n">original</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">assert</span> <span class="nf">message</span><span class="o">(</span><span class="s1">&#39;mike&#39;</span><span class="o">)</span> <span class="o">==</span> <span class="s1">&#39;Hello, mike&#39;</span>
</span><span class='line'><span class="k">assert</span> <span class="nf">message</span><span class="o">(</span><span class="s1">&#39;!&#39;</span><span class="o">)</span> <span class="o">==</span> <span class="s1">&#39;Hello, mike!&#39;</span>
</span><span class='line'><span class="k">assert</span> <span class="n">original</span> <span class="o">==</span> <span class="s1">&#39;Hello, &#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>というように、元の値は壊れませんが、</p>

<p>返されるClosureが元々持っていた値は壊れていきます。</p>

<p>ところで、イテレーターとして<code>Closure&lt;V&gt;</code>を使うときに出てくる</p>

<h4><code>it</code>ってなんやねん？</h4>

<p>gradleのプラグイン宣言などで、ときどきこんな記述が出てきますね</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="o">[</span><span class="s1">&#39;java&#39;</span><span class="o">,</span> <span class="s1">&#39;groovy&#39;</span><span class="o">].</span><span class="na">each</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">apply</span> <span class="n">plugin</span> <span class="o">:</span> <span class="n">it</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>で、この<code>it</code>ですが、コレクションの一つ一つの要素です。</p>

<p>あ、そんなこと言われなくても知ってたって(´・ω・｀)</p>

<p>まあ、そんなことは言わずに、すこし試してみましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="o">(</span><span class="mi">1</span><span class="o">..</span><span class="mi">4</span><span class="o">).</span><span class="na">each</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">println</span> <span class="s2">&quot;it is ${it}.&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>実行結果はこんな感じです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">it</span> <span class="n">is</span> <span class="mi">1</span><span class="o">.</span>
</span><span class='line'><span class="n">it</span> <span class="n">is</span> <span class="mi">2</span><span class="o">.</span>
</span><span class='line'><span class="n">it</span> <span class="n">is</span> <span class="mi">3</span><span class="o">.</span>
</span><span class='line'><span class="n">it</span> <span class="n">is</span> <span class="mi">4</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>これって、でもどういうふうに呼ばれているの？</p>

<p>groovyの<code>DefaultGroovyMethods</code>クラスを介して呼ばれています。</p>

<h5>自分でも<code>it</code>でアクセスできるイテレーター作ってみたい</h5>

<p>というわけで、<code>Closure&lt;V&gt;</code>を引数にとるメソッドを書いてみました。</p>

<p><code>it</code>で要素にアクセスできて、ちょっと嬉しいですね。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">Integer</span><span class="o">.</span><span class="na">metaClass</span><span class="o">.</span><span class="na">define</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">collect</span> <span class="o">=</span> <span class="o">{</span><span class="n">Closure</span> <span class="n">closure</span> <span class="o">-&gt;</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="nf">IntRange</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">delegate</span><span class="o">).</span><span class="na">collect</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">closure</span><span class="o">(</span><span class="n">it</span><span class="o">)</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">assert</span> <span class="mi">2</span><span class="o">.</span><span class="na">collect</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">it</span> <span class="o">*</span> <span class="mi">2</span>
</span><span class='line'><span class="o">}</span> <span class="o">==</span> <span class="o">[</span><span class="mi">0</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">4</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>というわけで、<code>it</code>は一つ一つの要素であることが事象として理解していただけたと思います。</p>

<p>で、<code>it</code>っていつ割り当てられるの？ということで、ソースをざっと見ていたんですが、</p>

<p>見つかりませんでした(´・ω・｀)</p>

<p>なお調べている過程で僕も初めて知ったのですが、</p>

<p><code>Closure&lt;V&gt;</code>は抽象クラスで、</p>

<p>コンパイル時に実際のクラスが生成されているようです。</p>

<p>まだまだ僕も勉強が足りませんね…</p>

<p>で、このへんが気になりだすと、もっと気になるのが…</p>

<h4>Closureのスコープってどうなのよ</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="kt">def</span> <span class="n">outside</span> <span class="o">=</span> <span class="s1">&#39;This is outside&#39;</span>
</span><span class='line'><span class="kt">def</span> <span class="n">doSomething</span> <span class="o">=</span> <span class="o">{</span><span class="n">println</span> <span class="s1">&#39;do something&#39;</span><span class="o">}</span>
</span><span class='line'><span class="kt">def</span> <span class="n">closure</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">def</span> <span class="n">inside</span> <span class="o">=</span> <span class="s1">&#39;This is inside&#39;</span>
</span><span class='line'>    <span class="n">doSomething</span><span class="o">()</span>
</span><span class='line'>    <span class="n">println</span> <span class="n">outside</span>
</span><span class='line'>    <span class="n">println</span> <span class="n">inside</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">closure</span><span class="o">()</span>
</span><span class='line'>
</span><span class='line'><span class="n">doSomething</span><span class="o">()</span>
</span><span class='line'><span class="n">println</span> <span class="n">outside</span>
</span><span class='line'><span class="n">println</span> <span class="n">inside</span>
</span></code></pre></td></tr></table></div></figure>


<p>これを実効すると次のような結果が得られます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="k">do</span> <span class="n">something</span>
</span><span class='line'><span class="n">This</span> <span class="n">is</span> <span class="n">outside</span>
</span><span class='line'><span class="n">This</span> <span class="n">is</span> <span class="n">inside</span>
</span><span class='line'><span class="k">do</span> <span class="n">something</span>
</span><span class='line'><span class="n">This</span> <span class="n">is</span> <span class="n">outside</span>
</span><span class='line'><span class="n">Exception</span> <span class="n">thrown</span>
</span><span class='line'><span class="mi">5</span> <span class="mi">31</span><span class="o">,</span> <span class="mi">2013</span> <span class="mi">8</span><span class="o">:</span><span class="mi">25</span><span class="o">:</span><span class="mi">06</span> <span class="err">午後</span> <span class="n">org</span><span class="o">.</span><span class="na">codehaus</span><span class="o">.</span><span class="na">groovy</span><span class="o">.</span><span class="na">runtime</span><span class="o">.</span><span class="na">StackTraceUtils</span> <span class="n">sanitize</span>
</span><span class='line'><span class="nl">WARNING:</span> <span class="n">Sanitizing</span> <span class="nl">stacktrace:</span>
</span><span class='line'><span class="n">groovy</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">MissingPropertyException</span><span class="o">:</span> <span class="n">No</span> <span class="n">such</span> <span class="nl">property:</span> <span class="n">inside</span> <span class="k">for</span> <span class="nl">class:</span> <span class="n">ConsoleScript83</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">codehaus</span><span class="o">.</span><span class="na">groovy</span><span class="o">.</span><span class="na">runtime</span><span class="o">.</span><span class="na">ScriptBytecodeAdapter</span><span class="o">.</span><span class="na">unwrap</span><span class="o">(</span><span class="n">ScriptBytecodeAdapter</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">50</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">codehaus</span><span class="o">.</span><span class="na">groovy</span><span class="o">.</span><span class="na">runtime</span><span class="o">.</span><span class="na">callsite</span><span class="o">.</span><span class="na">PogoGetPropertySite</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="n">PogoGetPropertySite</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">49</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">codehaus</span><span class="o">.</span><span class="na">groovy</span><span class="o">.</span><span class="na">runtime</span><span class="o">.</span><span class="na">callsite</span><span class="o">.</span><span class="na">AbstractCallSite</span><span class="o">.</span><span class="na">callGroovyObjectGetProperty</span><span class="o">(</span><span class="n">AbstractCallSite</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">231</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">ConsoleScript83</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="nl">ConsoleScript83:</span><span class="mi">14</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Closure&lt;V&gt;</code>の<code>closure</code>の中からは、</p>

<p>フィールド<code>outside</code>を参照することや、<code>doSomething</code>を実行することはできますが、</p>

<p>スクリプト本体からは<code>closure</code>内部の<code>inside</code>にアクセスすることはできません。</p>

<p>まあ、大体ご想像されていたとおりだと思います。</p>

<h4>実は<code>Callable&lt;V&gt;</code>だった<code>Closure&lt;V&gt;</code></h4>

<p>さて、ここまでは<code>Callable&lt;V&gt;</code>との対比で<code>Closure&lt;V&gt;</code>を見て来ましたが、</p>

<p><code>Closure&lt;V&gt;</code>は実は<code>Callable&lt;V&gt;</code>を実装した抽象クラスです。</p>

<p>まず、<code>Closure&lt;V&gt;</code>のクラスファイルを見てみましょう。</p>

<figure class='code'><figcaption><span>Closure.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Closure</span><span class="o">&lt;</span><span class="n">V</span><span class="o">&gt;</span> <span class="kd">extends</span> <span class="n">GroovyObjectSupport</span> <span class="kd">implements</span> <span class="n">Cloneable</span><span class="o">,</span> <span class="n">Runnable</span><span class="o">,</span> <span class="n">GroovyCallable</span><span class="o">&lt;</span><span class="n">V</span><span class="o">&gt;,</span> <span class="n">Serializable</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// some codes</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Closure&lt;V&gt;</code>はインターフェース<code>GroovyCallable&lt;V&gt;</code>を実装しています。</p>

<p>で、この<code>GroovyCallable&lt;V&gt;</code>ってなんやねんというと…</p>

<figure class='code'><figcaption><span>GroovyCallable.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">GroovyCallable</span><span class="o">&lt;</span><span class="n">V</span><span class="o">&gt;</span> <span class="kd">extends</span> <span class="n">Callable</span><span class="o">&lt;</span><span class="n">V</span><span class="o">&gt;</span> <span class="o">{</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ってことで、<code>Callable&lt;V&gt;</code>を継承しているインターフェースになります。</p>

<p>まとめると<code>Closure&lt;V&gt;</code>は<code>Callable&lt;V&gt;</code>の実装クラスということになります。</p>

<p>では試してみましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="kn">import</span> <span class="nn">java.util.concurrent.*</span>
</span><span class='line'>
</span><span class='line'><span class="kt">def</span> <span class="n">service</span> <span class="o">=</span> <span class="n">Executors</span><span class="o">.</span><span class="na">newFixedThreadPool</span><span class="o">(</span><span class="mi">3</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="kt">def</span> <span class="n">callable</span> <span class="o">=</span> <span class="o">{</span><span class="kt">int</span> <span class="n">sec</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">println</span> <span class="s2">&quot;${new Date().format(&#39;yyyy/MM/dd hh:mm:ss&#39;)} : Sleeping ${sec} seconds...&quot;</span>
</span><span class='line'>        <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">sec</span> <span class="o">*</span> <span class="mi">1000</span><span class="o">)</span>
</span><span class='line'>        <span class="s2">&quot;${new Date().format(&#39;yyyy/MM/dd hh:mm:ss&#39;)} : This is ${sec}&quot;</span> <span class="k">as</span> <span class="n">String</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">assert</span> <span class="n">service</span><span class="o">.</span><span class="na">invokeAll</span><span class="o">((</span><span class="mi">10</span><span class="o">..</span><span class="mi">1</span><span class="o">).</span><span class="na">collect</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">callable</span><span class="o">(</span><span class="n">it</span><span class="o">)</span> <span class="k">as</span> <span class="n">Callable</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">}).</span><span class="na">each</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">println</span> <span class="n">it</span><span class="o">.</span><span class="na">get</span><span class="o">()</span>
</span><span class='line'><span class="o">}.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">10</span>
</span></code></pre></td></tr></table></div></figure>


<p>この実行結果は次のようになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">13</span><span class="o">:</span><span class="mi">56</span> <span class="o">:</span> <span class="n">Sleeping</span> <span class="mi">10</span> <span class="n">seconds</span><span class="o">...</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">13</span><span class="o">:</span><span class="mi">56</span> <span class="o">:</span> <span class="n">Sleeping</span> <span class="mi">8</span> <span class="n">seconds</span><span class="o">...</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">13</span><span class="o">:</span><span class="mi">56</span> <span class="o">:</span> <span class="n">Sleeping</span> <span class="mi">9</span> <span class="n">seconds</span><span class="o">...</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">14</span><span class="o">:</span><span class="mi">04</span> <span class="o">:</span> <span class="n">Sleeping</span> <span class="mi">7</span> <span class="n">seconds</span><span class="o">...</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">14</span><span class="o">:</span><span class="mi">05</span> <span class="o">:</span> <span class="n">Sleeping</span> <span class="mi">6</span> <span class="n">seconds</span><span class="o">...</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">14</span><span class="o">:</span><span class="mi">06</span> <span class="o">:</span> <span class="n">Sleeping</span> <span class="mi">5</span> <span class="n">seconds</span><span class="o">...</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">14</span><span class="o">:</span><span class="mi">11</span> <span class="o">:</span> <span class="n">Sleeping</span> <span class="mi">4</span> <span class="n">seconds</span><span class="o">...</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">14</span><span class="o">:</span><span class="mi">11</span> <span class="o">:</span> <span class="n">Sleeping</span> <span class="mi">2</span> <span class="n">seconds</span><span class="o">...</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">14</span><span class="o">:</span><span class="mi">11</span> <span class="o">:</span> <span class="n">Sleeping</span> <span class="mi">3</span> <span class="n">seconds</span><span class="o">...</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">14</span><span class="o">:</span><span class="mi">13</span> <span class="o">:</span> <span class="n">Sleeping</span> <span class="mi">1</span> <span class="n">seconds</span><span class="o">...</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">14</span><span class="o">:</span><span class="mi">06</span> <span class="o">:</span> <span class="n">This</span> <span class="n">is</span> <span class="mi">10</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">14</span><span class="o">:</span><span class="mi">05</span> <span class="o">:</span> <span class="n">This</span> <span class="n">is</span> <span class="mi">9</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">14</span><span class="o">:</span><span class="mi">04</span> <span class="o">:</span> <span class="n">This</span> <span class="n">is</span> <span class="mi">8</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">14</span><span class="o">:</span><span class="mi">11</span> <span class="o">:</span> <span class="n">This</span> <span class="n">is</span> <span class="mi">7</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">14</span><span class="o">:</span><span class="mi">11</span> <span class="o">:</span> <span class="n">This</span> <span class="n">is</span> <span class="mi">6</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">14</span><span class="o">:</span><span class="mi">11</span> <span class="o">:</span> <span class="n">This</span> <span class="n">is</span> <span class="mi">5</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">14</span><span class="o">:</span><span class="mi">15</span> <span class="o">:</span> <span class="n">This</span> <span class="n">is</span> <span class="mi">4</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">14</span><span class="o">:</span><span class="mi">14</span> <span class="o">:</span> <span class="n">This</span> <span class="n">is</span> <span class="mi">3</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">14</span><span class="o">:</span><span class="mi">13</span> <span class="o">:</span> <span class="n">This</span> <span class="n">is</span> <span class="mi">2</span>
</span><span class='line'><span class="mi">2013</span><span class="s">/05/</span><span class="mi">31</span> <span class="mi">02</span><span class="o">:</span><span class="mi">14</span><span class="o">:</span><span class="mi">14</span> <span class="o">:</span> <span class="n">This</span> <span class="n">is</span> <span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<p>全然、問題なく<code>Callable&lt;V&gt;</code>として動いているのが確認できると思います。</p>

<p>で、別にここまではなんだjavaじゃん、というわけですが、</p>

<p>ここからがほぼ本題です。</p>

<h4>delegate</h4>

<p>delegateがgroovyの<code>Closure&lt;V&gt;</code>の柔軟性をもたらしていることに疑いはありません。</p>

<p>まずは使用例から…</p>

<h5><code>groovy.xml.MarkupBuilder</code></h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="kn">import</span> <span class="nn">groovy.xml.*</span>
</span><span class='line'>
</span><span class='line'><span class="kt">def</span> <span class="n">w</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringWriter</span><span class="o">()</span>
</span><span class='line'><span class="kt">def</span> <span class="n">doc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MarkupBuilder</span><span class="o">(</span><span class="n">w</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="kt">def</span> <span class="n">border</span> <span class="o">=</span> <span class="s1">&#39;border : solid 1px #ccc;&#39;</span>
</span><span class='line'><span class="kt">def</span> <span class="n">background</span> <span class="o">=</span> <span class="s1">&#39;background-color : rgba(239, 239, 255, 0.7);&#39;</span>
</span><span class='line'><span class="kt">def</span> <span class="n">padding</span> <span class="o">=</span> <span class="s1">&#39;padding : 5px;&#39;</span>
</span><span class='line'><span class="kt">def</span> <span class="n">radius</span> <span class="o">=</span> <span class="s1">&#39;border-radius : 5px;&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">doc</span><span class="o">.</span><span class="na">html</span><span class="o">(</span><span class="n">lang</span> <span class="o">:</span> <span class="s1">&#39;ja&#39;</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">head</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">title</span> <span class="s1">&#39;test page&#39;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">body</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">h3</span> <span class="s1">&#39;Hello Groovy!&#39;</span>
</span><span class='line'>        <span class="n">p</span> <span class="o">(</span><span class="n">style</span> <span class="o">:</span> <span class="s2">&quot;${border}${background}${padding}${radius}&quot;</span><span class="o">,</span>
</span><span class='line'>                <span class="s1">&#39;This document is made by groovy.&#39;</span><span class="o">)</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">println</span> <span class="n">w</span><span class="o">.</span><span class="na">toString</span><span class="o">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>これを実効すると、次のようなhtmlファイルができます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">&#39;ja&#39;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;title&gt;</span>test page<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h3&gt;</span>Hello Groovy!<span class="nt">&lt;/h3&gt;</span>
</span><span class='line'>    <span class="nt">&lt;p</span> <span class="na">style=</span><span class="s">&#39;border : solid 1px #ccc;background-color : rgba(239, 239, 255, 0.7);padding : 5px;border-radius : 5px;&#39;</span><span class="nt">&gt;</span>This document is made by groovy.<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>MarkupBuilder</code>というクラスは<code>groovy.util.BuilderSupport</code>クラスを継承していて、</p>

<p>存在しないようなメソッドを実行する際に、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">protected</span> <span class="n">Object</span> <span class="nf">doInvokeMethod</span><span class="o">(</span><span class="n">String</span> <span class="n">methodName</span><span class="o">,</span> <span class="n">Object</span> <span class="n">name</span><span class="o">,</span> <span class="n">Object</span> <span class="n">args</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>を介して実行します。</p>

<p>そして、このメソッドが内部で<code>Node</code>を作っていきます。</p>

<p>そういうわけで、上記のコードの11行目の<code>html</code>メソッドが実行されて、</p>

<p><code>"html"</code>というノードが作成されるのはわかるかと思います。</p>

<p>問題は<code>html</code>というメソッドが引数として受け入れた<code>Closure&lt;V&gt;</code>が</p>

<p><code>head</code>というメソッドや<code>body</code>メソッドを実行しています。</p>

<p>さきほどの<code>Closure</code>のスコープに戻るとこの場合、</p>

<p><code>head</code>や<code>body</code>というメソッドはないので、</p>

<p>ここで<code>MissingMethodException</code>が発生しそうですが、</p>

<p>発生しません。</p>

<p>何故でしょうか？</p>

<p><strong>これの謎を解く鍵がdelegateです。</strong></p>

<h5><code>Closure#setDelegate</code>と<code>Closure#setResolveStrategy</code></h5>

<p><code>Closure&lt;V&gt;</code>には変数名やメソッド名をどのオブジェクトから参照するのかを決定することができます。</p>

<p>そのオブジェクトへの参照がdelegateになります。</p>

<p>では、delegateをわざとらしいほど強調したスクリプトを見てみます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">setProperty</span> <span class="s1">&#39;x&#39;</span><span class="o">,</span> <span class="mi">1000</span>
</span><span class='line'><span class="n">setProperty</span> <span class="s1">&#39;y&#39;</span><span class="o">,</span> <span class="mi">500</span>
</span><span class='line'><span class="n">setProperty</span> <span class="s1">&#39;exec&#39;</span><span class="o">,</span> <span class="o">{</span><span class="n">println</span> <span class="s2">&quot;x : ${x}, y : ${y}&quot;</span><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">def</span> <span class="n">map</span> <span class="o">=</span> <span class="o">[</span><span class="n">x</span> <span class="o">:</span> <span class="mi">10</span><span class="o">,</span> <span class="n">y</span> <span class="o">:</span> <span class="mi">5</span><span class="o">,</span> <span class="n">exec</span> <span class="o">:</span> <span class="o">{</span><span class="n">println</span> <span class="s2">&quot;x = ${x}, y = ${y}&quot;</span><span class="o">}]</span>
</span><span class='line'><span class="kt">def</span> <span class="n">closure</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">println</span> <span class="s2">&quot;x -&gt; ${x}&quot;</span>
</span><span class='line'>    <span class="n">println</span> <span class="s2">&quot;y -&gt; ${y}&quot;</span>
</span><span class='line'>    <span class="n">print</span> <span class="s1">&#39;delegate exec -&gt; &#39;</span>
</span><span class='line'>    <span class="n">exec</span><span class="o">.</span><span class="na">call</span><span class="o">()</span>
</span><span class='line'>    <span class="n">print</span> <span class="s1">&#39;owner exec -&gt; &#39;</span>
</span><span class='line'>    <span class="n">exec</span><span class="o">()</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">closure</span><span class="o">.</span><span class="na">delegate</span> <span class="o">=</span> <span class="n">map</span>
</span><span class='line'><span class="n">closure</span><span class="o">.</span><span class="na">resolveStrategy</span> <span class="o">=</span> <span class="n">Closure</span><span class="o">.</span><span class="na">DELEGATE_FIRST</span>
</span><span class='line'><span class="n">closure</span><span class="o">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>では、実行してみましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">x</span> <span class="o">-&gt;</span> <span class="mi">10</span>
</span><span class='line'><span class="n">y</span> <span class="o">-&gt;</span> <span class="mi">5</span>
</span><span class='line'><span class="n">delegate</span> <span class="n">exec</span> <span class="o">-&gt;</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">1000</span><span class="o">,</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">500</span>
</span><span class='line'><span class="n">owner</span> <span class="n">exec</span> <span class="o">-&gt;</span> <span class="n">x</span> <span class="o">:</span> <span class="mi">1000</span><span class="o">,</span> <span class="n">y</span> <span class="o">:</span> <span class="mi">500</span>
</span></code></pre></td></tr></table></div></figure>


<p>面白い結果が返ってきました。</p>

<p><code>closure</code>内部で<code>x</code>と<code>y</code>の値は<code>map</code>から取得されたものになっています。</p>

<p>一方、<code>exec</code>に関しては二つの結果が出てきています。</p>

<p>これは、15行目と16行目で行われている<code>closure</code>のdelegateの設定によって説明出来ます。</p>

<p><code>closure</code>がフィールド名を解決する仕組みは下記のようになっています。</p>

<ul>
<li><code>Closure.DELEGATE_FIRST</code>でdelegateされたオブジェクトから順番に解決していく</li>
<li>delegateされたオブジェクト<code>map</code>から変数を解決する</li>
</ul>


<p>ここから、7行目、8行目の<code>x</code>と<code>y</code>は<code>map</code>由来のものであることがわかります。</p>

<p>また10行目と12行目の<code>exec</code>が異なる結果となっているのは、</p>

<p>10行目の<code>exec</code>はフィールド名としてまず解決された後に、</p>

<p><code>Closure&lt;V&gt;</code>が実行されています。</p>

<p>一方、12行目の<code>exec</code>ではメソッドとして(<code>map</code>(クラスは<code>java.util.Map</code>)にはメソッド<code>exec</code>がない)</p>

<p>名前解決をします。そのため<code>closure</code>の<code>OWNER</code>であるスクリプトの方の<code>exec</code>が参照されます。</p>

<p>また、10行目と12行目の<code>exec</code>が参照する<code>x</code>と<code>y</code>が1行目と2行目で設定されている<code>x</code>と<code>y</code>なのは</p>

<p>次の理由からです。</p>

<ul>
<li><code>map.exec</code>のdelegateが設定されてない</li>
<li><code>exec</code>のdelegateが設定されていない</li>
</ul>


<h5><code>MarkupBuilder</code>再び</h5>

<p>さきほどの<code>MarkupBuilder</code>に戻ります。</p>

<p><code>MarkupBuilder#doInvokeMethod(String, Object, Object)</code>メソッドでは</p>

<p>どのような処理がされているのかというと…</p>

<figure class='code'><figcaption><span>MarkupBuilder.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// this is partial codes</span>
</span><span class='line'><span class="kd">protected</span> <span class="n">Object</span> <span class="nf">doInvokeMethod</span><span class="o">(</span><span class="n">String</span> <span class="n">methodName</span><span class="o">,</span> <span class="n">Object</span> <span class="n">name</span><span class="o">,</span> <span class="n">Object</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">Object</span> <span class="n">node</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="n">Closure</span> <span class="n">closure</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// creating node and attach it to variable node.</span>
</span><span class='line'>    <span class="c1">// getting closure from arg and attach it to variable closure.</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">closure</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// stack operation</span>
</span><span class='line'>        <span class="n">setClosureDelegate</span><span class="o">(</span><span class="n">closure</span><span class="o">,</span> <span class="n">node</span><span class="o">);</span>
</span><span class='line'>        <span class="n">closure</span><span class="o">.</span><span class="na">call</span><span class="o">();</span>
</span><span class='line'>        <span class="c1">// stack operation</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="c1">// node create completion and return it</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">setClosureDelegate</span><span class="o">(</span><span class="n">Closure</span> <span class="n">closure</span><span class="o">,</span> <span class="n">Object</span> <span class="n">node</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">closure</span><span class="o">.</span><span class="na">setDelegate</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>9行目で<code>setClosureDelegate</code>メソッドを呼び出し、</p>

<p>15行目からの<code>setClosureDelegate</code>では、</p>

<p><code>closure</code>のdelegateに<code>this</code>(つまり<code>MarkupBuilder</code>のインスタンス)を割り当てています。</p>

<p>その結果10行目の<code>closure.call()</code>では、</p>

<p>メソッドおよびフィールドの名前解決が<code>MarkupBuilder</code>のインスタンスから行われるます。</p>

<p>その結果、<code>MarkupBuilder</code>の例で<code>head</code>とか<code>body</code>といったメソッドが、</p>

<p><code>MarkupBuilder</code>のインスタンスに対して呼び出されるということになります。</p>

<p>さて、翻って</p>

<h1>gradleのtaskメソッド…</h1>

<p>でも、<code>Closure&lt;V&gt;</code>が使われていますね。</p>

<figure class='code'><figcaption><span>build.gradle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='groovy'><span class='line'><span class="n">task</span> <span class="n">myTask</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">description</span> <span class="o">=</span> <span class="s1">&#39;this is myTask&#39;</span><span class="o">.</span>
</span><span class='line'>    <span class="n">println</span> <span class="s1">&#39;this is not task, but configuration.&#39;</span>
</span><span class='line'>    <span class="n">doLast</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">println</span> <span class="s1">&#39;finished myTask&#39;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>gradleのandroidサポートが本格的になってからgradleを始めた人の中には</p>

<p>上記のようなgradleの<code>Project</code>クラスのメソッド<code>task(Object, Closure)</code>の</p>

<p><code>Closure</code>部分をタスクだと思っている人がかなりの割合でいると思いますが、</p>

<p>この<code>Closure</code>部分は<strong>タスクではなく、設定です</strong>。</p>

<p>こう書いた場合にタスクはgradleコマンドを書いた時に必ず実行されると</p>

<p>言っていると、元からgroovyをやっている人とは話がかみあわなくなるので、</p>

<p>気をつけて下さい。</p>

<p>では、ちょっとソースコードを覗いてみます。</p>

<figure class='code'><figcaption><span>AbstractProject.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// this is partial codes</span>
</span><span class='line'><span class="kd">public</span> <span class="n">Task</span> <span class="nf">task</span><span class="o">(</span><span class="n">String</span> <span class="n">task</span><span class="o">,</span> <span class="n">Closure</span> <span class="n">configureClosure</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">taskContainer</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">task</span><span class="o">).</span><span class="na">configure</span><span class="o">(</span><span class="n">configureClosure</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>AbstractProject#task(String, Closure)</code>では、まず<code>Task</code>が作成された後に、</p>

<p><code>Task#configure(Closure)</code>が呼び出されます。</p>

<figure class='code'><figcaption><span>AbstractTask.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// this is partial codes</span>
</span><span class='line'><span class="kd">public</span> <span class="n">Task</span> <span class="nf">configure</span><span class="o">(</span><span class="n">Closure</span> <span class="n">closure</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">ConfigureUtil</span><span class="o">.</span><span class="na">configure</span><span class="o">(</span><span class="n">closure</span><span class="o">,</span> <span class="k">this</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Task#configure(Closure)</code>では<code>ConfigureUtil#configure(Closure, Task, boolean)</code>が呼び出されます。</p>

<figure class='code'><figcaption><span>ConfigureUtil.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// this is partial codes</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">T</span> <span class="n">configure</span><span class="o">(</span><span class="n">Closure</span> <span class="n">configureClosure</span><span class="o">,</span>
</span><span class='line'>        <span class="n">T</span> <span class="n">delegate</span><span class="o">,</span>
</span><span class='line'>        <span class="kt">boolean</span> <span class="n">configureableAware</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nf">configure</span><span class="o">(</span><span class="n">configureClosure</span><span class="o">,</span>
</span><span class='line'>            <span class="n">delegate</span><span class="o">,</span>
</span><span class='line'>            <span class="n">Closure</span><span class="o">.</span><span class="na">DELEGATE_FIRST</span><span class="o">,</span>
</span><span class='line'>            <span class="n">configureableAware</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">T</span> <span class="n">configure</span><span class="o">(</span><span class="n">Closure</span> <span class="n">configureClosure</span><span class="o">,</span>
</span><span class='line'>        <span class="n">T</span> <span class="n">delegate</span><span class="o">,</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">resolveStrategy</span><span class="o">,</span>
</span><span class='line'>        <span class="kt">boolean</span> <span class="n">configureableAware</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">ClosureBackedAction</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">action</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ClosureBackedAction</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;(</span>
</span><span class='line'>            <span class="n">configureClosure</span><span class="o">,</span>
</span><span class='line'>            <span class="n">resolveStrategy</span><span class="o">,</span>
</span><span class='line'>            <span class="n">configureableAware</span><span class="o">);</span>
</span><span class='line'>    <span class="n">action</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">delegate</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">delegate</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここから、<code>org.gradle.api.internal.ClosureBackedAction&lt;T&gt;</code>により、</p>

<p><code>Closure</code>が実行されます。</p>

<figure class='code'><figcaption><span>ClosureBackedAction.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// this is partial codes</span>
</span><span class='line'><span class="kd">public</span> <span class="nf">ClosureBackedAction</span><span class="o">(</span><span class="n">Closure</span> <span class="n">closure</span><span class="o">,</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">resolveStrategy</span><span class="o">,</span>
</span><span class='line'>        <span class="kt">boolean</span> <span class="n">configureableAware</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">closure</span> <span class="o">=</span> <span class="n">closure</span><span class="o">;</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">configureableAware</span> <span class="o">=</span> <span class="n">configureableAware</span><span class="o">;</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">resolveStrategy</span> <span class="o">=</span> <span class="n">resolveStrategy</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">execute</span><span class="o">(</span><span class="n">T</span> <span class="n">delegate</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// check closure is not null</span>
</span><span class='line'>    <span class="c1">// checking cinfgureableAware is false</span>
</span><span class='line'>    <span class="n">Closure</span> <span class="n">copy</span> <span class="o">=</span> <span class="o">(</span><span class="n">Closure</span><span class="o">)</span> <span class="n">closure</span><span class="o">.</span><span class="na">clone</span><span class="o">();</span>
</span><span class='line'>    <span class="n">copy</span><span class="o">.</span><span class="na">setResolveStrategy</span><span class="o">(</span><span class="n">resolveStrategy</span><span class="o">);</span>
</span><span class='line'>    <span class="n">copy</span><span class="o">.</span><span class="na">setDelegate</span><span class="o">(</span><span class="n">delegate</span><span class="o">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">copy</span><span class="o">.</span><span class="na">getMaximumNumberOfParameters</span><span class="o">()</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">copy</span><span class="o">.</span><span class="na">call</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">copy</span><span class="o">.</span><span class="na">call</span><span class="o">(</span><span class="n">delegate</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>12〜14行目でdelegateの設定、16行目or17行目で<code>Closure</code>の実行がなされていますね。</p>

<p>で、<code>Closure</code>のdelegateにはタスクが設定されています。</p>

<p>したがって、少し前で説明した通り、</p>

<p><code>Closure</code>の実行において変数名の解決は<code>Task</code>のインスタンスから順番に解決されていきます。</p>

<p>で、これが最終的にタスクの設定になるわけです。</p>

<p>(結構たらい回しにされていてイライライする方がいらっしゃるかもしれませんが、まあ、テスタビリティを上げるためにこうなっています。)</p>

<p>というわけで、<strong>まとめ</strong></p>

<h2><code>Closure&lt;V&gt;</code>の仕組みがわかると<a href="http://www.gradle.org/docs/current/dsl/">Gradle DSL</a>の理解が容易になります。</h2>

<p>冒頭でgradleの話しませんって言ったな、あれは、嘘だ。</p>

<!-- admax -->


<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>


<!-- admax -->




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>



]]></content>
  </entry>
  
</feed>

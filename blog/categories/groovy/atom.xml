<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: groovy | mike、mikeなるままに…]]></title>
  <link href="http://mike-neck.github.io/blog/categories/groovy/atom.xml" rel="self"/>
  <link href="http://mike-neck.github.io/"/>
  <updated>2013-06-14T18:09:00+09:00</updated>
  <id>http://mike-neck.github.io/</id>
  <author>
    <name><![CDATA[mike-neck]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[gradleのjavadocタスクでjavadocを英語で出力する方法]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/13/how-to-generate-javadoc-in-english-on-japanese-environment/"/>
    <updated>2013-06-13T22:39:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/13/how-to-generate-javadoc-in-english-on-japanese-environment</id>
    <content type="html"><![CDATA[<p><img src="http://www.gradle.org/img/gradle_logo.gif"/></p>

<p>こんにちわ、みけです。</p>

<p>表題の件はこの記事の前半部分に書いています。</p>

<p>なので、必要な人は前半部分だけ読んで下さい。</p>

<hr />

<p>大した話ではありませんが、</p>

<h1>gradleのjavadocタスクで出力されるjavadocが日本語で出力される</h1>

<p>のがちょっと残念な時があります。</p>

<p><code>java</code>プラグインを入れていれば、<code>javadoc</code>タスクが自動で追加されます。</p>

<p>僕のような日本語環境でやっている人だと、</p>

<p>頑張ってjavadocを英語で書いても、</p>

<p>テンプレートが日本語で出力されてしまいます。</p>

<p>会社で日本語を使っていて、</p>

<p>javadocが日本語でないと困る場合は、</p>

<p>全然問題ないとおもいますが…</p>

<p>オープンソースなソフトウェアを開発している場合、</p>

<p>javadocが日本語だとなんか若干困ります。</p>

<p>(まあ、だいたいjavadocのテンプレートなんで、何が出力されているかなんてわかりますけどね…)</p>

<h1><code>javadoc</code>タスクの設定で<code>options.locale</code>に<code>en_US</code>を指定すればいいです</h1>

<p>つまり、以下のとおりになります。</p>

<p>```groovy build.gradle
apply plugin : &lsquo;java&rsquo;</p>

<p>javadoc {</p>

<pre><code>options.locale = 'en_US'
</code></pre>

<p>}
```</p>

<p><strong>本題、終わり</strong></p>

<hr />

<p>ちなみに、僕の得意技はtypoなので、間違えてこんなビルドスクリプト書いてました。</p>

<p><strong>(誤)</strong></p>

<p>```groovy build.gradle
apply plugin : &lsquo;java&rsquo;</p>

<p>javadoc {</p>

<pre><code>options.local = 'en_US'
</code></pre>

<p>}
```</p>

<p>これを実行したら、こんなエラーが出力されました。</p>

<p>```
$ gradle javadoc
Picked up _JAVA_OPTIONS: -Dfile.encoding=UTF-8</p>

<p>FAILURE: Build failed with an exception.</p>

<ul>
<li><p>Where:
Script &lsquo;/Users/mike/myprojects/sample/build.gradle&rsquo; line: 4</p></li>
<li><p>What went wrong:
A problem occurred evaluating script.</p>

<blockquote><p>No such property: local for class: org.gradle.external.javadoc.StandardJavadocDocletOptions
Possible solutions: locale</p></blockquote></li>
<li><p>Try:
Run with &mdash;stacktrace option to get the stack trace. Run with &mdash;info or &mdash;debug option to get more log output.</p></li>
</ul>


<p>BUILD FAILED</p>

<p>Total time: 8.941 secs
```</p>

<p>gradle曰く</p>

<blockquote><p><code>local</code>なんてオプションないよ、<code>locale</code>じゃない？</p></blockquote>

<p>というわけで、</p>

<h1>gradleさん正しい答えを教えてくれたりと、親切ですね。</h1>

<p>本当に親切なツールです。</p>

<p>しかし、</p>

<h1>本当に親切なのはgroovyの思想</h1>

<p>です。</p>

<p>例えば次のようなgroovyのスクリプトがあるとします。</p>

<p>```groovy error.groovy
def range = 1..10
range.colect {</p>

<pre><code>println (it * it)
</code></pre>

<p>}
```</p>

<p>これを実行するとこういうエラーが出力されます。</p>

<p>```
$ groovy error.groovy
Caught: groovy.lang.MissingMethodException: No signature of method: groovy.lang.IntRange.colect() is applicable for argument types: (error$<em>run_closure1) values: [error$</em>run_closure1@639d564]
Possible solutions: collect(), collect(), collect(groovy.lang.Closure), collect(groovy.lang.Closure), collect(java.util.Collection, groovy.lang.Closure), collect(java.util.Collection, groovy.lang.Closure)
groovy.lang.MissingMethodException: No signature of method: groovy.lang.IntRange.colect() is applicable for argument types: (error$<em>run_closure1) values: [error$</em>run_closure1@639d564]
Possible solutions: collect(), collect(), collect(groovy.lang.Closure), collect(groovy.lang.Closure), collect(java.util.Collection, groovy.lang.Closure), collect(java.util.Collection, groovy.lang.Closure)</p>

<pre><code>at error.run(error.groovy:2)
</code></pre>

<p>```</p>

<p>存在しないメソッドを呼び出した時に、</p>

<p><strong>Possible solutions</strong>ということで、</p>

<p>サジェストしてくれます。</p>

<p>また、有名な例ですが、Power Assertもあります。</p>

<p><code>groovy error.groovy
def list = [1,1,2,3,4,5]
assert list - [1,3,6] == [1,2,4,5]
</code></p>

<p>これを実行すると、このように表示されます。</p>

<p>```
$ groovy error.groovy
Caught: Assertion failed:</p>

<p>assert list &ndash; [1,3,6] == [1,2,4,5]</p>

<pre><code>   |    |         |
   |    [2, 4, 5] false
   [1, 1, 2, 3, 4, 5]
</code></pre>

<p>Assertion failed:</p>

<p>assert list &ndash; [1,3,6] == [1,2,4,5]</p>

<pre><code>   |    |         |
   |    [2, 4, 5] false
   [1, 1, 2, 3, 4, 5]

at error.run(error.groovy:2)
</code></pre>

<p>```</p>

<p>ただ、求めている結果と実際の結果が<strong>違う</strong>という表示だけでなく、</p>

<p>実際の値を示してくれます。</p>

<p>つまり一言で言えば、</p>

<h1>groovyの半分は優しさでできています</h1>

<p>なお、この機能はもともとからgroovyにあったわけではなく、</p>

<p>Spockというテスティングフレームワークから採用された機能です。</p>

<p>groovyの思想では、こういった、(・∀・)ｲｲﾈ!!な機能を</p>

<p>どんどん取り込んでいくというのがあると思っています。</p>

<p>まあ、元々、javaを良い感じで書きたいといった思想から生まれている言語ですし、</p>

<p>実際に、rubyなど他の言語のいいところを借りたりしているので、</p>

<p>後発の優位性を遺憾なく発揮しているわけですが…</p>

<p><!-- admax -->
<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>
<!-- admax -->


<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gradleプロジェクトは、gradleを使うよりも、gradlewを使うことがオススメです]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/13/opening-gradle-slash-gradle-with-gradle-will-fail-please-use-gradlew/"/>
    <updated>2013-06-13T02:41:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/13/opening-gradle-slash-gradle-with-gradle-will-fail-please-use-gradlew</id>
    <content type="html"><![CDATA[<p><img src="http://www.gradle.org/img/gradle_logo.gif"/></p>

<p>みけです。</p>

<p>最近、Java開発者のgradleへの注目には眼を見張るものがあります。</p>

<p>gradle1.0-m2くらいから使っていた僕も、</p>

<p>参考になるような記事がたくさんあります。</p>

<p>みなさんありがとうございます。</p>

<h1>gradleのすばらしさ</h1>

<p>僕はgradleいいよという時に、いつも聞かれるのですが、</p>

<h3>AntとMavenにくらべてgradleの何がいいの？</h3>

<p>という質問があります。</p>

<p>DSLで書けるとか、</p>

<p>dependencyの指定が簡単とか、</p>

<p>まあ、各種ツールに精通すれば、</p>

<p>別にantでもmavenでも変わりません。</p>

<p>あえてそれでもgradleを選ぶ理由を上げるなら、</p>

<p><strong>gradle wrapper</strong>の存在です。</p>

<p>チームで開発する場合、開発環境をチーム内で同じにしておくことが重要です。</p>

<p>メンバーの開発マシンの</p>

<p>antのバーション、mavenのバージョン、</p>

<p>これらが違ったということでビルドに失敗して、</p>

<p>その原因追求のために時間がかかるということも</p>

<p>よくある話です。</p>

<p>一方で、gradleでは</p>

<p><strong>gradle wrapper</strong>を用いれば、</p>

<p>ビルドツールのバージョンに振り回されることはありません。</p>

<p>あまりピンとこないかもしれませんが、</p>

<p>実例をあげてみます。</p>

<h2>gradle本体をIntelliJ IDEAに取り込む</h2>

<p>gradle DSLを読んでいて、どうしてもわからないことがある場合、</p>

<p>gradle本体のソースを読むことがあります。</p>

<p>最新(2013/06/12時点)のソースを落としてきて、</p>

<p><code>gradle idea</code>タスクを実行してみます。</p>

<p>```
$ gradle &mdash;version</p>

<hr />

<h2>Gradle 1.6</h2>

<p>Gradle build time: 2013年5月7日 9時12分14秒 UTC
Groovy: 1.8.6
Ant: Apache Ant&trade; version 1.8.4 compiled on May 22 2012
Ivy: 2.2.0
JVM: 1.7.0_13 (Oracle Corporation 23.7-b01)
OS: Mac OS X 10.8.4 x86_64</p>

<p>$ gradle idea
:buildSrc:clean
:buildSrc:compileJava UP-TO-DATE
:buildSrc:compileGroovy
:buildSrc:processResources
:buildSrc:classes
:buildSrc:jar
:buildSrc:assemble
:buildSrc:checkstyleMain
:buildSrc:compileTestJava UP-TO-DATE
:buildSrc:compileTestGroovy
:buildSrc:processTestResources
:buildSrc:testClasses
:buildSrc:checkstyleTest UP-TO-DATE
:buildSrc:codenarcMain
:buildSrc:codenarcTest
:buildSrc:test
:buildSrc:check
:buildSrc:build</p>

<p>FAILURE: Build failed with an exception.</p>

<ul>
<li><p>Where:
Script &lsquo;/Users/mike/IdeaProjects/gradle/gradle/gradle/integTest.gradle&rsquo; line: 32</p></li>
<li><p>What went wrong:
A problem occurred evaluating script.</p>

<blockquote><p>Failed to notify action.
Could not find property &lsquo;reports&rsquo; on task &lsquo;:announce:integTest&rsquo;.</p></blockquote></li>
<li><p>Try:
Run with &mdash;stacktrace option to get the stack trace. Run with &mdash;info or &mdash;debug option to get more log output.</p></li>
</ul>


<p>BUILD FAILED</p>

<p>Total time: 54.695 secs
```</p>

<p>最新のgradle(バージョン1.6)でエラーが発生します。</p>

<p>ビルドスクリプト:buildSrcプロジェクトのテスト中に落ちてしまいます。</p>

<p>一方、プロジェクトに付属している<strong>wapper</strong>で実行してみます。</p>

<p>```
$ ./gradlew &mdash;version</p>

<hr />

<h2>Gradle 1.7-20130519231153+0000</h2>

<p>Build time:   2013-05-19 23:11:53 UTC
Build number: none
Revision:     9a7199efaf72c620b33f9767874f0ebced135d83</p>

<p>Groovy:       1.8.6
Ant:          Apache Ant&trade; version 1.8.4 compiled on May 22 2012
Ivy:          2.2.0
JVM:          1.7.0_13 (Oracle Corporation 23.7-b01)
OS:           Mac OS X 10.8.4 x86_64</p>

<p>$ ./gradlew idea
Deleting directory /Users/mike/.gradle/wrapper/dists/gradle-1.7-20130519231153+0000-bin/1cbtqldhq0muu2cto5pdcq66ee/gradle-1.7-20130519231153+0000
Unzipping /Users/mike/.gradle/wrapper/dists/gradle-1.7-20130519231153+0000-bin/1cbtqldhq0muu2cto5pdcq66ee/gradle-1.7-20130519231153+0000-bin.zip to /Users/mike/.gradle/wrapper/dists/gradle-1.7-20130519231153+0000-bin/1cbtqldhq0muu2cto5pdcq66ee
Set executable permissions for: /Users/mike/.gradle/wrapper/dists/gradle-1.7-20130519231153+0000-bin/1cbtqldhq0muu2cto5pdcq66ee/gradle-1.7-20130519231153+0000/bin/gradle
:buildSrc:clean
:buildSrc:compileJava UP-TO-DATE
:buildSrc:compileGroovy
:buildSrc:processResources
:buildSrc:classes
:buildSrc:jar
:buildSrc:assemble
:buildSrc:checkstyleMain
:buildSrc:compileTestJava UP-TO-DATE
:buildSrc:compileTestGroovy
:buildSrc:processTestResources
:buildSrc:testClasses
:buildSrc:checkstyleTest UP-TO-DATE
:buildSrc:codenarcMain
:buildSrc:codenarcTest
:buildSrc:test
:buildSrc:check
:buildSrc:build
:ideaModule</p>

<h2>途中長いので略</h2>

<p>:ui:ideaModule
:ui:idea
:wrapper:buildReceiptResource
:wrapper:ideaModule
:wrapper:idea</p>

<p>BUILD SUCCESSFUL</p>

<p>Total time: 2 mins 11.981 secs
```</p>

<p>という形で、</p>

<p>マシンにインストールされているgradleのバージョンの如何にかかわらず、</p>

<p>プロジェクトごとに最適化されたビルドを提供してくれます。</p>

<p><!-- admax -->
<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>
<!-- admax -->


<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Groovyでpegdownをさわってみる]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/08/groovydepegdownwosawatutemiru/"/>
    <updated>2013-06-08T05:25:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/08/groovydepegdownwosawatutemiru</id>
    <content type="html"><![CDATA[<p>みけです。</p>

<p><img src="http://mike-neck.github.io//groovy.codehaus.org/images/groovy-logo-medium.png" style="width : 450px;"/></p>

<p>前回に引き続き、Javaのmarkdownパーサーを試してみます。</p>

<p>で、今回は</p>

<h1><a href="https://github.com/sirthias/pegdown">pegdown</a></h1>

<p>を試してみました。</p>

<p>サンプルコードは前回とほとんど変わりません。</p>

<p>```groovy pegdown-sample.groovy
@Grab(&lsquo;org.pegdown:pegdown:1.2.1&rsquo;)</p>

<p>def processor = new org.pegdown.PegDownProcessor()</p>

<p>def original = $/</p>

<h2>This is Top Header</h2>

<h1>This is second Header</h1>

<h3>This is topic</h3>

<h4>Lists Item</h4>

<p>${(1..3).collect {&ldquo;+ item${it}&rdquo;}.join(&lsquo;\n&rsquo;)}</p>

<p>and</p>

<p>${(1..3).collect {&ldquo;1. item${it}&rdquo;}.join(&lsquo;\n&rsquo;)}</p>

<h4>Links</h4>

<ul>
<li><a href="http://mike-neck.github.io/">mike-neck&rsquo;s site</a></li>
<li><a href="http://mikeneckdq.blog.fc2.com/">mike-neck&rsquo;s dq site</a></li>
<li><img src="http://groovy.codehaus.org/images/groovy-logo-medium.png" alt="groovy image" /></li>
</ul>


<h4>Html Tags</h4>

<p><img src='http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRdHRGZ3ZrZU90Q00' style='width : 400px;'></p>

<h4>Codes</h4>

<p>function <code>lists:reverse/1</code> returns a List.</p>

<p>tag <code>&lt;em&gt;</code> means emphasis</p>

<p><code>groovy
def string = 'This is groovy code.'
</code></p>

<h4>emphasis</h4>

<p><em>em?</em></p>

<p><strong>bold?</strong></p>

<h4>Blockquotes</h4>

<blockquote><p>This is a blockquotes
from here.</p></blockquote>

<p>/$</p>

<p>processor.markdownToHtml(original)
```</p>

<p>実行結果はこんな感じ。</p>

<p>```html</p>

<h2>This is Top Header</h2>


<h1>This is second Header</h1>


<h3>This is topic</h3>


<h4>Lists Item</h4>


<ul>
  <li>item1</li>
  <li>item2</li>
  <li>item3</li>
</ul>


<p>and</p>


<ol>
  <li>item1</li>
  <li>item2</li>
  <li>item3</li>
</ol>


<h4>Links</h4>


<ul>
  <li><a href="http://mike-neck.github.io/">mike-neck's site</a></li>
  <li><a href="http://mikeneckdq.blog.fc2.com/">mike-neck's dq site</a></li>
  <li><img src="http://groovy.codehaus.org/images/groovy-logo-medium.png"  alt="groovy image"/></li>
</ul>


<h4>Html Tags</h4>


<p><img src='http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRdHRGZ3ZrZU90Q00' style='width : 400px;'></p>


<h4>Codes</h4>


<p>function <code>lists:reverse/1</code> returns a List.</p>


<p>tag <code>&lt;em&gt;</code> means emphasis</p>


<p><code>groovy
def string = &#39;This is groovy code.&#39;
</code></p>


<h4>emphasis</h4>


<p><em>em?</em></p>


<p><strong>bold?</strong></p>


<h4>Blockquotes</h4>


<blockquote><p>This is a blockquotes from here.</p>
</blockquote>


<p>```</p>

<h2>markdownjとの比較</h2>

<p>markdownjではこんな不具合が有りました。</p>

<ul>
<li><code>===</code>がレンダーされない</li>
<li>上の行にテキストがある状態で'&mdash;&ndash;&lsquo;がタグ<code>&lt;tr/&gt;</code>にレンダーされる</li>
<li>当然ながら、GitHubっぽいコードスニペットはレンダーできない</li>
</ul>


<p>一方、これらのうち、</p>

<ul>
<li><code>===</code>がレンダーされない</li>
<li>上の行にテキストがある状態で'&mdash;&ndash;&lsquo;がタグ<code>&lt;tr/&gt;</code>にレンダーされる</li>
</ul>


<p>はgepdownでは解消されているようです。</p>

<p>残念ながら、</p>

<ul>
<li>当然ながら、GitHubっぽいコードスニペットはレンダーできない</li>
</ul>


<p>というのはあります。</p>

<p>というわけで、pegdownの方が、良さげな感じがします。</p>

<p><!-- admax -->
<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>
<!-- admax -->


<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Groovyでmarkdownjをさわってみる]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/07/groovydemarkdownjwosawatutemiru/"/>
    <updated>2013-06-07T21:10:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/07/groovydemarkdownjwosawatutemiru</id>
    <content type="html"><![CDATA[<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRcURrSlZiNXlNVVk" style="width : 450px;"/></p>

<p>こんにちわ、みけです。</p>

<p>このブログはOCTOPRESSで作っていますが、</p>

<p>どうしてもやりたい処理があったら、</p>

<p>rubyを勉強しないとアババな感じなので、</p>

<p>Javaでも同じようなものを作ってみたいと思っています。</p>

<h1>OCTOPRESSっぽいツールに必要そうな機能</h1>

<p>はこんな感じかなと思っています。</p>

<ul>
<li>タスクを指定して実行する</li>
<li>git連携</li>
<li>previewできる</li>
<li>マークダウンをHTMLに変換する</li>
</ul>


<p>これらのうち、最初のタスクを指定して実行するはGradleでやればよさそうです。</p>

<p>git連携はJGitを使えばできそうです。</p>

<p>previewはJettyだか、nettyだか、glassfishを使えばできそうです。</p>

<p>で、最後の</p>

<h1>JavaでマークダウンをHTMLに変換する</h1>

<p>はわからないので、</p>

<p>ちょっと試して見ることにしました。</p>

<p>まず、筆頭にくる <strong>markdownj</strong> を試してみることにしました</p>

<p>```groovy markdown-sample.groovy
@Grab(&lsquo;com.madgag:markdownj-core:0.4.1&rsquo;)</p>

<p>import com.petebevin.markdown.*</p>

<p>def proc = new MarkdownProcessor()</p>

<p>def original = $/</p>

<h2>This is Top Header</h2>

<h1>This is second Header</h1>

<h3>This is topic</h3>

<h4>Lists Item</h4>

<p>${(1..3).collect {&ldquo;+ item${it}&rdquo;}.join(&lsquo;\n&rsquo;)}</p>

<p>and</p>

<p>${(1..3).collect {&ldquo;1. item${it}&rdquo;}.join(&lsquo;\n&rsquo;)}</p>

<h4>Links</h4>

<ul>
<li><a href="http://mike-neck.github.io/">mike-neck&rsquo;s site</a></li>
<li><a href="http://mikeneckdq.blog.fc2.com/">mike-neck&rsquo;s dq site</a></li>
</ul>


<h4>Html Tags</h4>

<p><img src='http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRdHRGZ3ZrZU90Q00' style='width : 400px;'></p>

<h4>Codes</h4>

<p>function <code>lists:reverse/1</code> returns a List.</p>

<p>tag <code>&lt;em&gt;</code> means emphasis</p>

<h4>emphasis</h4>

<p><em>em?</em></p>

<p><strong>bold?</strong></p>

<h4>Blockquotes</h4>

<blockquote><p>This is a blockquotes
from here.</p></blockquote>

<p>/$</p>

<p>proc.markdown(original)
```</p>

<p>これの結果は次のようになります。</p>

<p>```html</p>

<p>This is Top Header
<hr /></p>




<p>This is second Header
===</p>




<h3>This is topic</h3>




<h4>Lists Item</h4>




<ul>
<li>item1</li>
<li>item2</li>
<li>item3</li>
</ul>




<p>and</p>




<ol>
<li>item1</li>
<li>item2</li>
<li>item3</li>
</ol>




<h4>Links</h4>




<ul>
<li><a href="http://mike-neck.github.io/">mike-neck's site</a></li>
<li><a href="http://mikeneckdq.blog.fc2.com/">mike-neck's dq site</a></li>
</ul>




<h4>Html Tags</h4>




<p><img src='http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRdHRGZ3ZrZU90Q00' style='width : 400px;'></p>




<h4>Codes</h4>




<p>function <code>lists:reverse/1</code> returns a List.</p>




<p>tag <code>&lt;em&gt;</code> means emphasis</p>




<h4>emphasis</h4>




<p><em>em?</em></p>




<p><strong>bold?</strong></p>




<h4>Blockquotes</h4>




<blockquote>
  <p>This is a blockquotes
  from here.</p>
</blockquote>


<p>```</p>

<p>今のところ、残念な点は</p>

<ul>
<li><code>===</code>がレンダーされない</li>
<li>上の行にテキストがある状態で'&mdash;&ndash;&lsquo;がタグ<code>&lt;tr/&gt;</code>にレンダーされる</li>
<li>当然ながら、GitHubっぽいコードスニペットはレンダーできない</li>
</ul>


<p>ちょっと残念なので、</p>

<p>他のマークダウンパーサーも試してみようと思います。</p>

<p><!-- admax -->
<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>
<!-- admax -->


<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IntelliJ IDEAのJetGradleの使い方]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/06/intellij-ideafalsejetgradlefalseshi-ifang/"/>
    <updated>2013-06-06T02:55:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/06/intellij-ideafalsejetgradlefalseshi-ifang</id>
    <content type="html"><![CDATA[<p><a href="http://www.jetbrains.com/idea/features/javascript.html" style="display:block; background:#0d3a9e url(http://www.jetbrains.com/idea/opensource/img/all/banners/idea468x60_blue.gif) no-repeat 0 7px; border:solid 1px #0d3a9e; margin:0;padding:0;text-decoration:none;text-indent:0;letter-spacing:-0.001em; width:466px; height:58px" alt="Java IDE with advanced HTML/CSS/JS editor for hardcore web-developers" title="Java IDE with advanced HTML/CSS/JS editor for hardcore web-developers"><span style="margin: 5px 0 0 61px;padding: 0;float: left;font-size: 12px;cursor:pointer;  background-image:none;border:0;color: #acc4f9; font-family: trebuchet ms,arial,sans-serif;font-weight: normal;text-align:left;">Can’t live without</span><span style="margin:0 0 0 205px;padding:18px 0 2px 0; line-height:13px;font-size:11px;cursor:pointer;  background-image:none;border:0;display:block; width:255px; color: #acc4f9; font-family: trebuchet ms,arial,sans-serif;font-weight: normal;text-align:left;">Smart Java and Groovy IDE<br/> with powerfull refactoring and code assistance.</span></a></p>

<p>こんにちわ、みけです。</p>

<p>いや、もう表題の件に関しては、</p>

<p>いろんなブログで既出なんですけど、
(と思ってググったら、あまりなかった(´・ω・｀))</p>

<p>僕もよくわかってなかったので、</p>

<p>使ってみたときのメモを書いとくことにしました。</p>

<h2>JetGradleってそもそも何よ？</h2>

<p>IntelliJ IDEAに最初からバンドルされているgradleのサポートプラグインです。</p>

<p>では使い方を見て行きましょう。</p>

<h3>(1)JetGradleタブを開きます。</h3>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRdHRGZ3ZrZU90Q00" style="width : 420px;" /></p>

<p>画面右下の方にちょこんとある、<strong>JetGradle</strong>タブをクリックして開きます。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRMEw3b0I1OEo0azA" style="width : 420px;"/></p>

<h3>(2) Addアンカーをクリックして、build.gradleファイルを割り当てます。</h3>

<p>ダイアログが出るので、今のプロジェクトのgradleファイルを割り当てます。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRS0xDejBZWmo4ekk" style="width : 280px;" /></p>

<p>build.gradleファイルを選択するとこんなかんじになります。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRS1FjS0VhU3BKMTQ" style="width : 420px;" /></p>

<h3>(3) Taskタブをクリックします。</h3>

<p>残念ながらこの段階ではタスク一覧が表示されません。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRN0xMWnpkNVFOS1E" style="width : 420px;" /></p>

<h3>(4) 更新ボタンをクリックします。</h3>

<p>先ほどのタブの左上の方にある更新ボタンをクリックします。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRZ051S3NqcEJXQkU" style="width : 420px;" /></p>

<p>するとIntelliJがgradle┏( ^o^)┓ﾄﾞｺﾄﾞｺﾄﾞｺﾄﾞｺ┗( ^o^)┛ﾄﾞｺﾄﾞｺﾄﾞｺﾄﾞｺと聞いてきます。
(AA はテキトー)</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRcWI4dXkwTENHam8" style="width : 420px;" /></p>

<p>右下の方にある、<code>Gradle settings</code>アンカーをクリックします。</p>

<h3>(5) GRADLE_HOMEを設定します。</h3>

<p>こんなダイアログが表示されます。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRVHpuOTl5S09XUFk" style="width : 280px;"/></p>

<p>僕はgradleのインストールをgvmでやっているので、</p>

<p>どこに<code>GRADLE_HOME</code>があるのかよくわからんので、
(覚えろよjk)</p>

<p>とりあえず、ターミナルで確認します。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRcVgtcU5JMmo3NlU" style="width : 280px;" /></p>

<p><code>GRADLE_HOME</code>の値をコピペします。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRdFV5cDB0d2IyUzA" style="width : 280px;" /></p>

<p>OKボタンをクリックすると、IntelliJがgradleファイルの読み込みを始めます。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRY19neTRiY2Njd2M" style="width : 450px;" /></p>

<p>読み込みが完了すると、タスク一覧が表示されます。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRcU9JTnpHanlHNGM" style="width : 450px;" /></p>

<h3>(6)JetGradleからタスクを実行してみる</h3>

<p>とりあえず、テストを実行してみたいと思います。</p>

<p>タスク一覧から実行したいタスクを選択します。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRbGNhODNIOWFBd1U" style="width : 450px;" /></p>

<p>ここでは<code>test</code>タスクを実行したいので、</p>

<p><code>test</code>タスクを選択しています。</p>

<p>選択したタスクを長押し(Windowsの場合は右クリック)して、</p>

<p>実行する方法(デバッグとかrunとか)を選択します。</p>

<p>ここではRunを選択します。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRUFhIa2RhVDF0QlE" style="width : 450px;" /></p>

<p>テストが実行されました。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRT0JoWjlKZXRyRWM" style="width : 450px;" /></p>

<p>これで、一々IDEからターミナルに移動して</p>

<p><code>
$ gradle test
</code></p>

<p>とか打たなくてもいいですね。</p>

<h3>(7)JetGradleの成果物はどこにあるの？</h3>

<p>これ、疑問に思ったので、</p>

<p>あえてテストをこけさせてみました。
(こうすることでテストレポートの位置を示してくれる)</p>

<p>わざと落ちるテストを書いて、</p>

<p>Recent Taskからtestをじっこうします。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRTGJOeEtoWDJBODQ" style="width : 450px;"/></p>

<p>はい、落ちました。</p>

<p><img src="http://mike-neck.github.io//googledrive.com/host/0B4hhdHWLP7RRTnBXcndheThEV1k" style="width : 450px;" /></p>

<p>で、テストレポートの場所を見ると、</p>

<p>ターミナルからテストを実行した時と変わらない場所に出力されていることがわかります。</p>

<p>以上、結論</p>

<h3>JetGradle便利すなー</h3>

<p><!-- admax -->
<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>
<!-- admax -->


<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>
</p>
]]></content>
  </entry>
  
</feed>

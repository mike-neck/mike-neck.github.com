<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | mike、mikeなるままに…]]></title>
  <link href="http://mike-neck.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://mike-neck.github.io/"/>
  <updated>2013-06-21T10:34:27+09:00</updated>
  <id>http://mike-neck.github.io/</id>
  <author>
    <name><![CDATA[mike-neck]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[初めてRubyのモジュールを書いてみた]]></title>
    <link href="http://mike-neck.github.io/blog/2013/06/11/how-to-create-rubys-module/"/>
    <updated>2013-06-11T02:04:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/06/11/how-to-create-rubys-module</id>
    <content type="html"><![CDATA[<p>こんにちわ、みけです。</p>

<p>前回の記事<a href="http://mike-neck.github.io/blog/2013/06/08/rubyfalsemixinfalsehua-wodu-ndeitara%2C-he-gu-kajavawoshu-iteita/">『Rubyのmixinの話を読んでいたら、何故かjavaを書いていた』</a>はあまりにも</p>

<p>rubyに対して失礼なので、</p>

<p>初心者らしく、ちゃんと<code>module</code>を作ってみました。</p>

<p>ところで、僕の感心事は前回の記事でも書いたように、</p>

<h2>rubyの<code>module</code>はインスタンス変数にアクセスすることができるのか？</h2>

<p>ということです。</p>

<p>で、結論から言えば、</p>

<h2>rubyの<code>module</code>はインスタンス変数にアクセスできました</h2>

<p>となります。</p>

<h3><code>module</code>を作成</h3>

<p>```ruby having_title.rb</p>

<h1>&ndash;<em>&ndash; codig: utf-8 &ndash;</em>&ndash;</h1>

<p>module HavingTitle
  def title=(t)</p>

<pre><code>@title = t 
</code></pre>

<p>  end
  def title</p>

<pre><code>@title
</code></pre>

<p>  end
end
```</p>

<p><code>module</code>の<code>HavingTitle</code>は単純にタイトルというものに</p>

<p>アクセスすることができるモジュールです。</p>

<p>先程も書きましたが、僕の疑問は<code>@title</code>フィールドに、</p>

<p>インスタンス化することができない<code>module</code>がアクセすることができるのか</p>

<p>ということです。</p>

<h3><code>module</code>を<code>include</code>した<code>class</code>を作成</h3>

<p>```ruby book.rb</p>

<h1>&ndash;<em>&ndash; coding: utf-8 &ndash;</em>&ndash;</h1>

<p>require &lsquo;./having_title&rsquo;</p>

<p>class Book
  include HavingTitle</p>

<p>  attr_accessor :price</p>

<p>  def initialize(title, price)</p>

<pre><code>@price = price
self.title = title
</code></pre>

<p>  end</p>

<p>  def print_info</p>

<pre><code>"Book[title : #{@title}, price : #{@price}]"
</code></pre>

<p>  end
end
```</p>

<p>タイトルというものを持っていそうなクラスということで</p>

<p><code>Book</code>というクラスをつくりました。</p>

<p>後は<code>Book</code>クラスをインスタンス化して、</p>

<p>フィールド<code>@title</code>にアクセスできるかどうか確認出来れば</p>

<p>僕の疑問は解決出来ます。</p>

<h3>irbで動作を確認</h3>

<p>あ、まだrubyでのテストの書き方知らないので、</p>

<p>ここはirbで勘弁して下さい。</p>

<p><code>
irb(main):001:0&gt; require './book'
=&gt; true
irb(main):002:0&gt; book = Book.new 'anti-oedipus', 4000
=&gt; #&lt;Book:0x007f90890b6e38 @price=4000, @title="anti-oedipus"&gt;
irb(main):003:0&gt; book.print_info
=&gt; "Book[title : anti-oedipus, price : 4000]"
</code></p>

<p>というわけで、特に何のエラーも出ることなく、</p>

<p>フィールド<code>@title</code>にアクセスできているようですね。</p>

<h2>モジュールの機能の一つとしてのMix-in</h2>

<p>まあ、<a href="http://www.amazon.co.jp/gp/product/4873113679/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873113679&amp;linkCode=as2&amp;tag=kkkjkrt-22">『初めてのRuby』</a>にはモジュールについて次のように書いてあります。</p>

<blockquote><p><strong>モジュール</strong>はクラスに似ています。モジュールは「インスタンス化できないクラス」のようなものです。
<code>Class</code>クラスは<code>Module</code>のサブクラスですから、「クラス = モジュール + インスタンス化能力」と言ってもよさそうです。
(<a href="http://www.amazon.co.jp/gp/product/4873113679/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873113679&amp;linkCode=as2&amp;tag=kkkjkrt-22">Yugui著『初めてのRuby』</a>(オライリー・ジャパン、2008年、p.159))</p></blockquote>

<p>Javaしかわからない(Javaも詳しくはわからない)僕には、</p>

<p><code>abstract class</code>と考えておけばよさそうです。</p>

<p>で、複数のモジュールを継承できるので、</p>

<p>なんか、アレですね…</p>

<table>
<tbody>
<tr>
<td><iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=kkkjkrt-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4873113679" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</td>
<td><iframe src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=kkkjkrt-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4774151661" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</td>
</tr>
</tbody>
</table>


<p><!-- admax -->
<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>
<!-- admax -->


<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[blogの更新pingを送れるようにrakeのタスクを書いてみた]]></title>
    <link href="http://mike-neck.github.io/blog/2013/05/26/blogfalsegeng-xin-pingwosong-reruyounirakefalsetasukuwoshu-itemita/"/>
    <updated>2013-05-26T21:38:00+09:00</updated>
    <id>http://mike-neck.github.io/blog/2013/05/26/blogfalsegeng-xin-pingwosong-reruyounirakefalsetasukuwoshu-itemita</id>
    <content type="html"><![CDATA[<p>こんにちわ、みけです。</p>

<p>お金がないので、ブログを読んでもらって、</p>

<p>google adsenseをみんなに押してもらわないと、</p>

<p>死んでしまいます。</p>

<p>さて、そんなことはどうでもよくて、</p>

<p>bloggerでブログをやっていたときは、</p>

<p>googleさんが勝手に検索エンジンに乗せてくれるので、</p>

<p>検索しやすかったのですが、</p>

<p>githubでブログを書くようになって、</p>

<p>検索で出にくくなっていたので、</p>

<p>更新pingをrakeで送りつけるようにしました。</p>

<p>まあ、「更新ping ruby」でググった結果をrakeのタスクにしただけですが…</p>

<p>で、追加したのがこんな感じのタスクです。</p>

<p>```ruby rakefile
require &ldquo;yaml&rdquo;
require &ldquo;xmlrpc/client&rdquo;</p>

<h1>&mdash; sending ping &mdash;</h1>

<p>desc &ldquo;Sedning ping to Web Search Engines&rdquo;
task :ping do
  site_config = YAML.load(IO.read(&lsquo;_config.yml&rsquo;))
  blog_title = site_config[&lsquo;title&rsquo;]
  blog_url = site_config[&lsquo;url&rsquo;]
  ping_url = YAML.load(IO.read(&lsquo;ping.yml&rsquo;))
  ping_url.each do |url|</p>

<pre><code>ping = XMLRPC::Client.new2(url)
begin
  result = ping.call('weblogUpdates.ping', blog_title, blog_url)
  puts "#{url} : #{result}"
rescue =&gt; e
  puts "#{url} : #{e}"
end
</code></pre>

<p>  end
end
```</p>

<p>この新たに追加したタスクを後は、gen_deployタスクに追加します。</p>

<p><code>ruby rakefile
desc "Generate website and deploy"
task :gen_deploy =&gt; [:integrate, :generate, :deploy, :ping] do
end
</code></p>

<p>あと、適当に<code>ping.yml</code>に更新pingを送りつけるサイトを記述すればおｋです。</p>

<p><code>yaml ping.yml
- http://blogsearch.google.com/ping/RPC2
- http://api.my.yahoo.co.jp/RPC2
- http://blog.goo.ne.jp/XMLRPC
- http://ping.bloggers.jp/rpc/
- http://ping.rss.drecom.jp/
- http://ping.fc2.com/
- http://rpc.weblogs.com/RPC2
- http://rpc.reader.livedoor.com/ping
- http://ping.blogranking.net/
- http://www.blogpeople.net/ping/
</code></p>

<p><!-- admax -->
<script type="text/javascript" src="http://adm.shinobi.jp/s/d0f95faac716337846b3bcf82925c26e"></script>
<!-- admax -->


<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-40855644-1', 'github.io');
  ga('send', 'pageview');

</script>
</p>
]]></content>
  </entry>
  
</feed>
